{
	"id": "3b5fdfc4fda490fbacefc3bdb44643e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"ex/NFTERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\ncontract BEEItems is  ERC1155 , Ownable{\r\n\r\n    uint256 public tokenSupply;\r\n\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n    }\r\n\r\n    function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {\r\n            ids[i - tokenSupply] = i;\r\n            amounts[i - tokenSupply] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n        tokenSupply = tokenSupply + idsNumber;\r\n    }\r\n\r\n    function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i - start] = i;\r\n            amounts[i - start] = 1;\r\n        }\r\n        safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\");\r\n    }\r\n\r\n\r\n    function setURI(string memory newuri) public onlyOwner{\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n        tokenSupply = tokenSupply + ids.length;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return tokenSupply;\r\n    }\r\n\r\n    function brun(\r\n        address account,\r\n        uint256 id,\r\n        uint256 value) public {\r\n\r\n        require(\r\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n\r\n        _burn(account, id, value);\r\n        --tokenSupply;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./extensions/IERC1155MetadataURI.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/Context.sol\";\r\nimport \"../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ex/NFTERC1155.sol": {
				"BEEItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "brun",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "mintBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ex/NFTERC1155.sol\":184:2028  contract BEEItems is  ERC1155 , Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"ex/NFTERC1155.sol\":269:342  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:967  _transferOwnership */\n  tag_12\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"ex/NFTERC1155.sol\":184:2028  contract BEEItems is  ERC1155 , Ownable{... */\n  jump(tag_25)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  tag_16\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8254:8260  newuri */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  swap2\n  and\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  dup3\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n  0x00\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_21:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_28:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_29:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_23:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_33:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_34:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_32:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_17:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1582:1679   */\n  tag_41\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_42\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_45:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_36)\n    /* \"#utility.yul\":1810:2473   */\ntag_44:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_48:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_51:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_25:\n    /* \"ex/NFTERC1155.sol\":184:2028  contract BEEItems is  ERC1155 , Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"ex/NFTERC1155.sol\":184:2028  contract BEEItems is  ERC1155 , Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9416308e\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x9416308e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x71ac14e6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7824407f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x0e89341c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x092f2dbf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"ex/NFTERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"ex/NFTERC1155.sol\":1692:2025  function brun(... */\n    tag_6:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"ex/NFTERC1155.sol\":1594:1684  function totalSupply() public view returns (uint256) {... */\n    tag_8:\n        /* \"ex/NFTERC1155.sol\":1665:1676  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":1594:1684  function totalSupply() public view returns (uint256) {... */\n      jump(tag_24)\n        /* \"ex/NFTERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_9:\n      tag_36\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_10:\n      tag_36\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_36\n      tag_68\n      jump\t// in\n        /* \"ex/NFTERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n    tag_13:\n      tag_36\n      tag_70\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"ex/NFTERC1155.sol\":232:258  uint256 public tokenSupply */\n    tag_14:\n      tag_24\n      sload(0x04)\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      sload(0x03)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8721:8772   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8709:8711   */\n      0x20\n        /* \"#utility.yul\":8694:8712   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":8575:8778   */\n      jump\n        /* \"ex/NFTERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {... */\n    tag_16:\n      tag_36\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_17:\n      tag_36\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_30\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_19:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_36\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10731:10733   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10713:10734   */\n      mstore\n        /* \"#utility.yul\":10770:10772   */\n      0x2b\n        /* \"#utility.yul\":10750:10768   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10743:10773   */\n      mstore\n        /* \"#utility.yul\":10809:10843   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10789:10807   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10782:10844   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10860:10878   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10853:10894   */\n      mstore\n        /* \"#utility.yul\":10911:10930   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_100:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_33:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_105\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_100\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"ex/NFTERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_113:\n        /* \"ex/NFTERC1155.sol\":1315:1330  _setURI(newuri) */\n      tag_117\n        /* \"ex/NFTERC1155.sol\":1323:1329  newuri */\n      dup2\n        /* \"ex/NFTERC1155.sol\":1315:1322  _setURI */\n      tag_118\n        /* \"ex/NFTERC1155.sol\":1315:1330  _setURI(newuri) */\n      jump\t// in\n    tag_117:\n        /* \"ex/NFTERC1155.sol\":1250:1338  function setURI(string memory newuri) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"ex/NFTERC1155.sol\":1692:2025  function brun(... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/NFTERC1155.sol\":1820:1843  account == _msgSender() */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ex/NFTERC1155.sol\":1820:1843  account == _msgSender() */\n      eq\n      dup1\n        /* \"ex/NFTERC1155.sol\":1820:1886  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_122\n      jumpi\n      pop\n        /* \"ex/NFTERC1155.sol\":1847:1886  isApprovedForAll(account, _msgSender()) */\n      tag_122\n        /* \"ex/NFTERC1155.sol\":1864:1871  account */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"ex/NFTERC1155.sol\":1847:1886  isApprovedForAll(account, _msgSender()) */\n    tag_122:\n        /* \"ex/NFTERC1155.sol\":1798:1955  require(... */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_124:\n        /* \"ex/NFTERC1155.sol\":1968:1993  _burn(account, id, value) */\n      tag_127\n        /* \"ex/NFTERC1155.sol\":1974:1981  account */\n      dup4\n        /* \"ex/NFTERC1155.sol\":1983:1985  id */\n      dup4\n        /* \"ex/NFTERC1155.sol\":1987:1992  value */\n      dup4\n        /* \"ex/NFTERC1155.sol\":1968:1973  _burn */\n      tag_128\n        /* \"ex/NFTERC1155.sol\":1968:1993  _burn(account, id, value) */\n      jump\t// in\n    tag_127:\n        /* \"ex/NFTERC1155.sol\":2006:2017  tokenSupply */\n      0x04\n      0x00\n        /* \"ex/NFTERC1155.sol\":2004:2017  --tokenSupply */\n      dup2\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":1692:2025  function brun(... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ex/NFTERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_56:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_142:\n        /* \"ex/NFTERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      tag_145\n        /* \"ex/NFTERC1155.sol\":1506:1508  to */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1510:1513  ids */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1515:1522  amounts */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1524:1528  data */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1495:1505  _mintBatch */\n      tag_146\n        /* \"ex/NFTERC1155.sol\":1495:1529  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"ex/NFTERC1155.sol\":1568:1571  ids */\n      dup3\n        /* \"ex/NFTERC1155.sol\":1568:1578  ids.length */\n      mload\n        /* \"ex/NFTERC1155.sol\":1554:1565  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":1554:1578  tokenSupply + ids.length */\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"ex/NFTERC1155.sol\":1540:1551  tokenSupply */\n      0x04\n        /* \"ex/NFTERC1155.sol\":1540:1578  tokenSupply = tokenSupply + ids.length */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":1346:1586  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_152\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_152\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_152:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12702:12704   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12684:12705   */\n      mstore\n        /* \"#utility.yul\":12741:12743   */\n      0x32\n        /* \"#utility.yul\":12721:12739   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12714:12744   */\n      mstore\n        /* \"#utility.yul\":12780:12814   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":12760:12778   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12753:12815   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12831:12849   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12824:12872   */\n      mstore\n        /* \"#utility.yul\":12889:12908   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_102\n        /* \"#utility.yul\":12500:12914   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_158\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_64:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13121:13123   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13103:13124   */\n      mstore\n        /* \"#utility.yul\":13160:13162   */\n      0x29\n        /* \"#utility.yul\":13140:13158   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13133:13163   */\n      mstore\n        /* \"#utility.yul\":13199:13233   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13179:13197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13172:13234   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13250:13268   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13243:13282   */\n      mstore\n        /* \"#utility.yul\":13299:13318   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_102\n        /* \"#utility.yul\":12919:13324   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      dup2\n      gt\n      iszero\n      tag_164\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_166:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_170\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_173\n      jump\t// in\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_27\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_177\n      jumpi\n      tag_177\n      tag_173\n      jump\t// in\n    tag_177:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_178\n      dup2\n      tag_179\n      jump\t// in\n    tag_178:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_167)\n    tag_168:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_183:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1813:1814  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1804  _transferOwnership */\n      tag_187\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ex/NFTERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n    tag_71:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_191:\n        /* \"ex/NFTERC1155.sol\":425:445  uint256[] memory ids */\n      0x00\n        /* \"ex/NFTERC1155.sol\":462:471  idsNumber */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"ex/NFTERC1155.sol\":448:472  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_195\n      jumpi\n      tag_195\n      tag_165\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_196\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_196:\n      pop\n        /* \"ex/NFTERC1155.sol\":425:472  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"ex/NFTERC1155.sol\":483:507  uint256[] memory amounts */\n      0x00\n        /* \"ex/NFTERC1155.sol\":524:533  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"ex/NFTERC1155.sol\":510:534  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_198\n      tag_165\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_199\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_199:\n      pop\n        /* \"ex/NFTERC1155.sol\":562:573  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":483:534  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      swap2\n      pop\n        /* \"ex/NFTERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n    tag_200:\n        /* \"ex/NFTERC1155.sol\":592:603  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_203\n      swap1\n        /* \"ex/NFTERC1155.sol\":580:589  idsNumber */\n      dup6\n        /* \"ex/NFTERC1155.sol\":580:603  idsNumber + tokenSupply */\n      tag_148\n      jump\t// in\n    tag_203:\n        /* \"ex/NFTERC1155.sol\":575:576  i */\n      dup2\n        /* \"ex/NFTERC1155.sol\":575:604  i < (idsNumber + tokenSupply) */\n      lt\n        /* \"ex/NFTERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"ex/NFTERC1155.sol\":649:650  i */\n      dup1\n        /* \"ex/NFTERC1155.sol\":626:629  ids */\n      dup4\n        /* \"ex/NFTERC1155.sol\":634:645  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":630:631  i */\n      dup4\n        /* \"ex/NFTERC1155.sol\":630:645  i - tokenSupply */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"ex/NFTERC1155.sol\":626:646  ids[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_207\n      tag_173\n      jump\t// in\n    tag_207:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ex/NFTERC1155.sol\":626:650  ids[i - tokenSupply] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":692:693  1 */\n      0x01\n        /* \"ex/NFTERC1155.sol\":665:672  amounts */\n      dup3\n        /* \"ex/NFTERC1155.sol\":677:688  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":673:674  i */\n      dup4\n        /* \"ex/NFTERC1155.sol\":673:688  i - tokenSupply */\n      tag_208\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_208:\n        /* \"ex/NFTERC1155.sol\":665:689  amounts[i - tokenSupply] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_210\n      tag_173\n      jump\t// in\n    tag_210:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ex/NFTERC1155.sol\":665:693  amounts[i - tokenSupply] = 1 */\n      mstore\n        /* \"ex/NFTERC1155.sol\":606:609  i++ */\n      dup1\n      tag_211\n      dup2\n      tag_179\n      jump\t// in\n    tag_211:\n      swap2\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":545:705  for (uint256 i = tokenSupply; i < (idsNumber + tokenSupply); i++) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n        /* \"ex/NFTERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_212\n        /* \"ex/NFTERC1155.sol\":726:736  msg.sender */\n      caller\n        /* \"ex/NFTERC1155.sol\":738:741  ids */\n      dup4\n        /* \"ex/NFTERC1155.sol\":743:750  amounts */\n      dup4\n        /* \"ex/NFTERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ex/NFTERC1155.sol\":715:725  _mintBatch */\n      tag_146\n        /* \"ex/NFTERC1155.sol\":715:755  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_212:\n        /* \"ex/NFTERC1155.sol\":794:803  idsNumber */\n      dup3\n        /* \"ex/NFTERC1155.sol\":780:791  tokenSupply */\n      sload(0x04)\n        /* \"ex/NFTERC1155.sol\":780:803  tokenSupply + idsNumber */\n      tag_213\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_213:\n        /* \"ex/NFTERC1155.sol\":766:777  tokenSupply */\n      0x04\n        /* \"ex/NFTERC1155.sol\":766:803  tokenSupply = tokenSupply + idsNumber */\n      sstore\n      pop\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":350:811  function mintBatchWithNumber(uint256 idsNumber) public onlyOwner{... */\n      jump\t// out\n        /* \"ex/NFTERC1155.sol\":819:1240  function transferWithNumber(uint256 start, uint256 idsNumber, address to) public {... */\n    tag_82:\n        /* \"ex/NFTERC1155.sol\":911:931  uint256[] memory ids */\n      0x00\n        /* \"ex/NFTERC1155.sol\":948:957  idsNumber */\n      dup3\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"ex/NFTERC1155.sol\":934:958  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_217\n      jumpi\n      tag_217\n      tag_165\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_218:\n      pop\n        /* \"ex/NFTERC1155.sol\":911:958  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"ex/NFTERC1155.sol\":969:993  uint256[] memory amounts */\n      0x00\n        /* \"ex/NFTERC1155.sol\":1010:1019  idsNumber */\n      dup4\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"ex/NFTERC1155.sol\":996:1020  new uint256[](idsNumber) */\n      dup2\n      gt\n      iszero\n      tag_220\n      jumpi\n      tag_220\n      tag_165\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_221:\n      pop\n        /* \"ex/NFTERC1155.sol\":969:1020  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"ex/NFTERC1155.sol\":1048:1053  start */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n    tag_222:\n        /* \"ex/NFTERC1155.sol\":1060:1077  idsNumber + start */\n      tag_225\n        /* \"ex/NFTERC1155.sol\":1072:1077  start */\n      dup7\n        /* \"ex/NFTERC1155.sol\":1060:1069  idsNumber */\n      dup7\n        /* \"ex/NFTERC1155.sol\":1060:1077  idsNumber + start */\n      tag_148\n      jump\t// in\n    tag_225:\n        /* \"ex/NFTERC1155.sol\":1055:1056  i */\n      dup2\n        /* \"ex/NFTERC1155.sol\":1055:1078  i < (idsNumber + start) */\n      lt\n        /* \"ex/NFTERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"ex/NFTERC1155.sol\":1117:1118  i */\n      dup1\n        /* \"ex/NFTERC1155.sol\":1100:1103  ids */\n      dup4\n        /* \"ex/NFTERC1155.sol\":1104:1113  i - start */\n      tag_226\n        /* \"ex/NFTERC1155.sol\":1108:1113  start */\n      dup9\n        /* \"ex/NFTERC1155.sol\":1117:1118  i */\n      dup4\n        /* \"ex/NFTERC1155.sol\":1104:1113  i - start */\n      tag_205\n      jump\t// in\n    tag_226:\n        /* \"ex/NFTERC1155.sol\":1100:1114  ids[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_228\n      tag_173\n      jump\t// in\n    tag_228:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ex/NFTERC1155.sol\":1100:1118  ids[i - start] = i */\n      mstore\n        /* \"ex/NFTERC1155.sol\":1154:1155  1 */\n      0x01\n        /* \"ex/NFTERC1155.sol\":1133:1140  amounts */\n      dup3\n        /* \"ex/NFTERC1155.sol\":1141:1150  i - start */\n      tag_229\n        /* \"ex/NFTERC1155.sol\":1145:1150  start */\n      dup9\n        /* \"ex/NFTERC1155.sol\":1141:1142  i */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1141:1150  i - start */\n      tag_205\n      jump\t// in\n    tag_229:\n        /* \"ex/NFTERC1155.sol\":1133:1151  amounts[i - start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_173\n      jump\t// in\n    tag_231:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"ex/NFTERC1155.sol\":1133:1155  amounts[i - start] = 1 */\n      mstore\n        /* \"ex/NFTERC1155.sol\":1080:1083  i++ */\n      dup1\n      tag_232\n      dup2\n      tag_179\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n      pop\n        /* \"ex/NFTERC1155.sol\":1031:1167  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      jump(tag_222)\n    tag_223:\n      pop\n        /* \"ex/NFTERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      tag_157\n        /* \"ex/NFTERC1155.sol\":1199:1209  msg.sender */\n      caller\n        /* \"ex/NFTERC1155.sol\":1211:1213  to */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1215:1218  ids */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1220:1227  amounts */\n      dup5\n        /* \"ex/NFTERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ex/NFTERC1155.sol\":1177:1198  safeBatchTransferFrom */\n      tag_60\n        /* \"ex/NFTERC1155.sol\":1177:1232  safeBatchTransferFrom(msg.sender, to, ids, amounts, \"\") */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_86:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_235\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_237\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_235:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_242\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_242\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_88\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_242:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_126\n      jump\t// in\n    tag_244:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_247\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_115\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2090  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13936:13938   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13918:13939   */\n      mstore\n        /* \"#utility.yul\":13975:13977   */\n      0x26\n        /* \"#utility.yul\":13955:13973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13948:13978   */\n      mstore\n        /* \"#utility.yul\":14014:14048   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13994:14012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13987:14049   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":14065:14083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14058:14094   */\n      mstore\n        /* \"#utility.yul\":14111:14130   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_102\n        /* \"#utility.yul\":13734:14136   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_254:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2163:2171  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2162  _transferOwnership */\n      tag_187\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      tag_235\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8254:8260  newuri */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n      tag_262\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10691:10709  from != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16547:16549   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16529:16550   */\n      mstore\n        /* \"#utility.yul\":16586:16588   */\n      0x23\n        /* \"#utility.yul\":16566:16584   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16559:16589   */\n      mstore\n        /* \"#utility.yul\":16625:16659   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":16605:16623   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16598:16660   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":16676:16694   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16669:16702   */\n      mstore\n        /* \"#utility.yul\":16719:16738   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":16345:16744   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10683:10749  require(from != address(0), \"ERC1155: burn from the zero address\") */\n    tag_264:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_268\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10841  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10762:10778  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      tag_269\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10873:10875  id */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10872  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10876  _asSingletonArray(id) */\n      jump\t// in\n    tag_269:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      tag_271\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10896:10902  amount */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10895  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10878:10903  _asSingletonArray(amount) */\n      jump\t// in\n    tag_271:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      swap1\n      mstore\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10806:10908  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10921:10940  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10956  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10943:10962  _balances[id][from] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10981:11002  fromBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16951:16953   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16933:16954   */\n      mstore\n        /* \"#utility.yul\":16990:16992   */\n      0x24\n        /* \"#utility.yul\":16970:16988   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16963:16993   */\n      mstore\n        /* \"#utility.yul\":17029:17063   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":17009:17027   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17002:17064   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":17080:17098   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17073:17107   */\n      mstore\n        /* \"#utility.yul\":17124:17143   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":16749:17149   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10973:11043  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n    tag_273:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11088  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11092  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      dup10\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11101:11121  fromBalance - amount */\n      dup9\n      dup8\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11121  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":17328:17353   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":17369:17387   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":17362:17396   */\n      dup9\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11098  _balances[id][from] */\n      swap1\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17301:17319   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11150:11204  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10672:11212  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10564:11212  function _burn(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9579:10314  function _mintBatch(... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9757:9773  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17609:17611   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17591:17612   */\n      mstore\n        /* \"#utility.yul\":17648:17650   */\n      0x21\n        /* \"#utility.yul\":17628:17646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17621:17651   */\n      mstore\n        /* \"#utility.yul\":17687:17721   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":17667:17685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17660:17722   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":17738:17756   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17731:17762   */\n      mstore\n        /* \"#utility.yul\":17779:17798   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":17407:17804   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9749:9811  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9851  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9844:9858  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9833  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9840  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9830:9858  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9822:9903  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9916:9932  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10066  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10063:10073  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10060  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10059:10073  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10127  amounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10128:10129  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10120:10130  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_173\n      jump\t// in\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10104  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10108  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10109:10110  i */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10105:10111  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_173\n      jump\t// in\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10112  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10113:10115  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10116  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10095:10130  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_294:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10075:10078  i++ */\n      dup2\n      swap1\n      pop\n      tag_295\n      dup2\n      tag_179\n      jump\t// in\n    tag_295:\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10039:10142  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10195:10197  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10191:10192  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10173:10181  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10199:10202  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10204:10211  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10159:10212  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_296\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10261:10269  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10279:10280  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10283:10285  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10287:10290  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10292:10299  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10301:10305  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10260  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10225:10306  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_284\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_303:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_308:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_173\n      jump\t// in\n    tag_312:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_173\n      jump\t// in\n    tag_314:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_318\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_148\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_319\n      swap1\n      tag_179\n      jump\t// in\n    tag_319:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_320\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_321\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_321:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_187:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      swap2\n      and\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      dup3\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n      0x00\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n    tag_237:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19707:19709   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19689:19710   */\n      mstore\n        /* \"#utility.yul\":19746:19748   */\n      0x29\n        /* \"#utility.yul\":19726:19744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19719:19749   */\n      mstore\n        /* \"#utility.yul\":19785:19819   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":19765:19783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19758:19820   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":19836:19854   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19829:19868   */\n      mstore\n        /* \"#utility.yul\":19885:19904   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_102\n        /* \"#utility.yul\":19505:19910   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_305\n      jump\t// in\n    tag_329:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_332\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_333\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_333:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_157\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_332:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_317\n      jump\t// in\n    tag_335:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_337\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_148\n      jump\t// in\n    tag_337:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17328:17353   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":17384:17386   */\n      0x20\n        /* \"#utility.yul\":17369:17387   */\n      dup2\n      add\n        /* \"#utility.yul\":17362:17396   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17301:17319   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_339\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_340\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_339:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_270:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_173\n      jump\t// in\n    tag_346:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_352\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_353\n      jump\t// in\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_355\n      swap2\n      dup2\n      add\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      0x01\n    tag_354:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_357\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_361:\n      dup1\n      0x08c379a0\n      sub\n      tag_360\n      jumpi\n      pop\n      tag_363\n      tag_364\n      jump\t// in\n    tag_363:\n      dup1\n      tag_365\n      jumpi\n      pop\n      jump(tag_359)\n    tag_365:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_360:\n      pop\n    tag_359:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22063:22065   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22045:22066   */\n      mstore\n        /* \"#utility.yul\":22102:22104   */\n      0x34\n        /* \"#utility.yul\":22082:22100   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22075:22105   */\n      mstore\n        /* \"#utility.yul\":22141:22175   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":22121:22139   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22114:22176   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":22192:22210   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":22185:22235   */\n      mstore\n        /* \"#utility.yul\":22252:22271   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_102\n        /* \"#utility.yul\":21861:22277   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_357:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_372\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(... */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {... */\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_376\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_377\n      jump\t// in\n    tag_376:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_378\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_379\n      swap2\n      dup2\n      add\n      swap1\n      tag_356\n      jump\t// in\n    tag_379:\n      0x01\n    tag_378:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_380\n      jumpi\n      tag_361\n      tag_362\n      jump\t// in\n    tag_380:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_339\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_372\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_393:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_408:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_26:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_410:\n        /* \"#utility.yul\":360:389   */\n      tag_411\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_393\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_394:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_32:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_416:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_417\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_394\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1338   */\n    tag_165:\n        /* \"#utility.yul\":1272:1282   */\n      0x4e487b71\n        /* \"#utility.yul\":1267:1270   */\n      0xe0\n        /* \"#utility.yul\":1263:1283   */\n      shl\n        /* \"#utility.yul\":1260:1261   */\n      0x00\n        /* \"#utility.yul\":1253:1284   */\n      mstore\n        /* \"#utility.yul\":1303:1307   */\n      0x41\n        /* \"#utility.yul\":1300:1301   */\n      0x04\n        /* \"#utility.yul\":1293:1308   */\n      mstore\n        /* \"#utility.yul\":1327:1331   */\n      0x24\n        /* \"#utility.yul\":1324:1325   */\n      0x00\n        /* \"#utility.yul\":1317:1332   */\n      revert\n        /* \"#utility.yul\":1343:1592   */\n    tag_395:\n        /* \"#utility.yul\":1453:1455   */\n      0x1f\n        /* \"#utility.yul\":1434:1447   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1430:1457   */\n      and\n        /* \"#utility.yul\":1418:1458   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1473:1507   */\n      dup2\n      gt\n        /* \"#utility.yul\":1509:1531   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1470:1532   */\n      or\n        /* \"#utility.yul\":1467:1555   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1535:1553   */\n      tag_422\n      tag_165\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1571:1573   */\n      0x40\n        /* \"#utility.yul\":1564:1586   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1343:1592   */\n      jump\t// out\n        /* \"#utility.yul\":1597:2066   */\n    tag_396:\n        /* \"#utility.yul\":1662:1667   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1688:1694   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      gt\n        /* \"#utility.yul\":1682:1738   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":1718:1736   */\n      tag_425\n      tag_165\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1767:1769   */\n      0x40\n        /* \"#utility.yul\":1761:1770   */\n      mload\n        /* \"#utility.yul\":1779:1848   */\n      tag_426\n        /* \"#utility.yul\":1836:1838   */\n      0x1f\n        /* \"#utility.yul\":1815:1830   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1811:1840   */\n      and\n        /* \"#utility.yul\":1842:1846   */\n      0x20\n        /* \"#utility.yul\":1807:1847   */\n      add\n        /* \"#utility.yul\":1761:1770   */\n      dup3\n        /* \"#utility.yul\":1779:1848   */\n      tag_395\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1866:1872   */\n      dup1\n        /* \"#utility.yul\":1857:1872   */\n      swap2\n      pop\n        /* \"#utility.yul\":1896:1902   */\n      dup4\n        /* \"#utility.yul\":1888:1894   */\n      dup2\n        /* \"#utility.yul\":1881:1903   */\n      mstore\n        /* \"#utility.yul\":1936:1939   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup5\n        /* \"#utility.yul\":1922:1925   */\n      dup5\n        /* \"#utility.yul\":1918:1934   */\n      add\n        /* \"#utility.yul\":1915:1940   */\n      gt\n        /* \"#utility.yul\":1912:1957   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1953:1954   */\n      0x00\n        /* \"#utility.yul\":1950:1951   */\n      dup1\n        /* \"#utility.yul\":1943:1955   */\n      revert\n        /* \"#utility.yul\":1912:1957   */\n    tag_427:\n        /* \"#utility.yul\":2003:2009   */\n      dup4\n        /* \"#utility.yul\":1998:2001   */\n      dup4\n        /* \"#utility.yul\":1991:1995   */\n      0x20\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1979:1996   */\n      add\n        /* \"#utility.yul\":1966:2010   */\n      calldatacopy\n        /* \"#utility.yul\":2058:2059   */\n      0x00\n        /* \"#utility.yul\":2051:2055   */\n      0x20\n        /* \"#utility.yul\":2042:2048   */\n      dup6\n        /* \"#utility.yul\":2034:2040   */\n      dup4\n        /* \"#utility.yul\":2030:2049   */\n      add\n        /* \"#utility.yul\":2026:2056   */\n      add\n        /* \"#utility.yul\":2019:2060   */\n      mstore\n      pop\n        /* \"#utility.yul\":1597:2066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2071:2522   */\n    tag_38:\n        /* \"#utility.yul\":2140:2146   */\n      0x00\n        /* \"#utility.yul\":2193:2195   */\n      0x20\n        /* \"#utility.yul\":2181:2190   */\n      dup3\n        /* \"#utility.yul\":2172:2179   */\n      dup5\n        /* \"#utility.yul\":2168:2191   */\n      sub\n        /* \"#utility.yul\":2164:2196   */\n      slt\n        /* \"#utility.yul\":2161:2213   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2209:2210   */\n      0x00\n        /* \"#utility.yul\":2206:2207   */\n      dup1\n        /* \"#utility.yul\":2199:2211   */\n      revert\n        /* \"#utility.yul\":2161:2213   */\n    tag_429:\n        /* \"#utility.yul\":2249:2258   */\n      dup2\n        /* \"#utility.yul\":2236:2259   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2274:2280   */\n      dup2\n        /* \"#utility.yul\":2271:2301   */\n      gt\n        /* \"#utility.yul\":2268:2318   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2311:2312   */\n      dup1\n        /* \"#utility.yul\":2304:2316   */\n      revert\n        /* \"#utility.yul\":2268:2318   */\n    tag_430:\n        /* \"#utility.yul\":2337:2359   */\n      dup3\n      add\n        /* \"#utility.yul\":2390:2394   */\n      0x1f\n        /* \"#utility.yul\":2382:2395   */\n      dup2\n      add\n        /* \"#utility.yul\":2378:2405   */\n      dup5\n      sgt\n        /* \"#utility.yul\":2368:2423   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2419:2420   */\n      0x00\n        /* \"#utility.yul\":2416:2417   */\n      dup1\n        /* \"#utility.yul\":2409:2421   */\n      revert\n        /* \"#utility.yul\":2368:2423   */\n    tag_431:\n        /* \"#utility.yul\":2442:2516   */\n      tag_432\n        /* \"#utility.yul\":2508:2515   */\n      dup5\n        /* \"#utility.yul\":2503:2505   */\n      dup3\n        /* \"#utility.yul\":2490:2506   */\n      calldataload\n        /* \"#utility.yul\":2485:2487   */\n      0x20\n        /* \"#utility.yul\":2481:2483   */\n      dup5\n        /* \"#utility.yul\":2477:2488   */\n      add\n        /* \"#utility.yul\":2442:2516   */\n      tag_396\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2432:2516   */\n      swap5\n        /* \"#utility.yul\":2071:2522   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2849   */\n    tag_42:\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2612:2618   */\n      dup1\n        /* \"#utility.yul\":2620:2626   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x60\n        /* \"#utility.yul\":2661:2670   */\n      dup5\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2693   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2686:2687   */\n      dup1\n        /* \"#utility.yul\":2679:2691   */\n      revert\n        /* \"#utility.yul\":2641:2693   */\n    tag_434:\n        /* \"#utility.yul\":2712:2741   */\n      tag_435\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2712:2741   */\n      tag_393\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2702:2741   */\n      swap6\n        /* \"#utility.yul\":2788:2790   */\n      0x20\n        /* \"#utility.yul\":2773:2791   */\n      dup6\n      add\n        /* \"#utility.yul\":2760:2792   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2839:2841   */\n      0x40\n        /* \"#utility.yul\":2824:2842   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2811:2843   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2527:2849   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2854:3034   */\n    tag_46:\n        /* \"#utility.yul\":2913:2919   */\n      0x00\n        /* \"#utility.yul\":2966:2968   */\n      0x20\n        /* \"#utility.yul\":2954:2963   */\n      dup3\n        /* \"#utility.yul\":2945:2952   */\n      dup5\n        /* \"#utility.yul\":2941:2964   */\n      sub\n        /* \"#utility.yul\":2937:2969   */\n      slt\n        /* \"#utility.yul\":2934:2986   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":2982:2983   */\n      0x00\n        /* \"#utility.yul\":2979:2980   */\n      dup1\n        /* \"#utility.yul\":2972:2984   */\n      revert\n        /* \"#utility.yul\":2934:2986   */\n    tag_437:\n      pop\n        /* \"#utility.yul\":3005:3028   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2854:3034   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3462   */\n    tag_397:\n        /* \"#utility.yul\":3081:3084   */\n      0x00\n        /* \"#utility.yul\":3119:3124   */\n      dup2\n        /* \"#utility.yul\":3113:3125   */\n      mload\n        /* \"#utility.yul\":3146:3152   */\n      dup1\n        /* \"#utility.yul\":3141:3144   */\n      dup5\n        /* \"#utility.yul\":3134:3153   */\n      mstore\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3181:3343   */\n    tag_439:\n        /* \"#utility.yul\":3195:3201   */\n      dup2\n        /* \"#utility.yul\":3192:3193   */\n      dup2\n        /* \"#utility.yul\":3189:3202   */\n      lt\n        /* \"#utility.yul\":3181:3343   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3257:3261   */\n      0x20\n        /* \"#utility.yul\":3313:3326   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":3309:3331   */\n      dup2\n      add\n        /* \"#utility.yul\":3303:3332   */\n      mload\n        /* \"#utility.yul\":3285:3296   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":3281:3301   */\n      dup3\n      add\n        /* \"#utility.yul\":3274:3333   */\n      mstore\n        /* \"#utility.yul\":3210:3222   */\n      add\n        /* \"#utility.yul\":3181:3343   */\n      jump(tag_439)\n    tag_441:\n        /* \"#utility.yul\":3185:3188   */\n      pop\n        /* \"#utility.yul\":3388:3389   */\n      0x00\n        /* \"#utility.yul\":3381:3385   */\n      0x20\n        /* \"#utility.yul\":3372:3378   */\n      dup3\n        /* \"#utility.yul\":3367:3370   */\n      dup7\n        /* \"#utility.yul\":3363:3379   */\n      add\n        /* \"#utility.yul\":3359:3386   */\n      add\n        /* \"#utility.yul\":3352:3390   */\n      mstore\n        /* \"#utility.yul\":3451:3455   */\n      0x20\n        /* \"#utility.yul\":3444:3446   */\n      0x1f\n        /* \"#utility.yul\":3440:3447   */\n      not\n        /* \"#utility.yul\":3435:3437   */\n      0x1f\n        /* \"#utility.yul\":3427:3433   */\n      dup4\n        /* \"#utility.yul\":3423:3438   */\n      add\n        /* \"#utility.yul\":3419:3448   */\n      and\n        /* \"#utility.yul\":3414:3417   */\n      dup6\n        /* \"#utility.yul\":3410:3449   */\n      add\n        /* \"#utility.yul\":3406:3456   */\n      add\n        /* \"#utility.yul\":3399:3456   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3039:3462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3687   */\n    tag_49:\n        /* \"#utility.yul\":3616:3618   */\n      0x20\n        /* \"#utility.yul\":3605:3614   */\n      dup2\n        /* \"#utility.yul\":3598:3619   */\n      mstore\n        /* \"#utility.yul\":3579:3583   */\n      0x00\n        /* \"#utility.yul\":3636:3681   */\n      tag_417\n        /* \"#utility.yul\":3677:3679   */\n      0x20\n        /* \"#utility.yul\":3666:3675   */\n      dup4\n        /* \"#utility.yul\":3662:3680   */\n      add\n        /* \"#utility.yul\":3654:3660   */\n      dup5\n        /* \"#utility.yul\":3636:3681   */\n      tag_397\n      jump\t// in\n        /* \"#utility.yul\":3692:3875   */\n    tag_398:\n        /* \"#utility.yul\":3752:3756   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3777:3783   */\n      dup3\n        /* \"#utility.yul\":3774:3804   */\n      gt\n        /* \"#utility.yul\":3771:3827   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3807:3825   */\n      tag_446\n      tag_165\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":3852:3853   */\n      0x05\n        /* \"#utility.yul\":3848:3862   */\n      shl\n        /* \"#utility.yul\":3864:3868   */\n      0x20\n        /* \"#utility.yul\":3844:3869   */\n      add\n      swap1\n        /* \"#utility.yul\":3692:3875   */\n      jump\t// out\n        /* \"#utility.yul\":3880:4604   */\n    tag_399:\n        /* \"#utility.yul\":3934:3939   */\n      0x00\n        /* \"#utility.yul\":3987:3990   */\n      dup3\n        /* \"#utility.yul\":3980:3984   */\n      0x1f\n        /* \"#utility.yul\":3972:3978   */\n      dup4\n        /* \"#utility.yul\":3968:3985   */\n      add\n        /* \"#utility.yul\":3964:3991   */\n      slt\n        /* \"#utility.yul\":3954:4009   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      0x00\n        /* \"#utility.yul\":4002:4003   */\n      dup1\n        /* \"#utility.yul\":3995:4007   */\n      revert\n        /* \"#utility.yul\":3954:4009   */\n    tag_448:\n        /* \"#utility.yul\":4041:4047   */\n      dup2\n        /* \"#utility.yul\":4028:4048   */\n      calldataload\n        /* \"#utility.yul\":4067:4071   */\n      0x20\n        /* \"#utility.yul\":4090:4133   */\n      tag_449\n        /* \"#utility.yul\":4130:4132   */\n      dup3\n        /* \"#utility.yul\":4090:4133   */\n      tag_398\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4162:4164   */\n      0x40\n        /* \"#utility.yul\":4156:4165   */\n      mload\n        /* \"#utility.yul\":4174:4205   */\n      tag_450\n        /* \"#utility.yul\":4202:4204   */\n      dup3\n        /* \"#utility.yul\":4194:4200   */\n      dup3\n        /* \"#utility.yul\":4174:4205   */\n      tag_395\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4240:4258   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4332:4333   */\n      0x05\n        /* \"#utility.yul\":4328:4338   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":4316:4339   */\n      dup6\n      add\n        /* \"#utility.yul\":4312:4344   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":4274:4289   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4356:4371   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4353:4388   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4381:4382   */\n      dup1\n        /* \"#utility.yul\":4374:4386   */\n      revert\n        /* \"#utility.yul\":4353:4388   */\n    tag_451:\n        /* \"#utility.yul\":4420:4422   */\n      dup3\n        /* \"#utility.yul\":4412:4418   */\n      dup7\n        /* \"#utility.yul\":4408:4423   */\n      add\n        /* \"#utility.yul\":4432:4574   */\n    tag_452:\n        /* \"#utility.yul\":4448:4454   */\n      dup5\n        /* \"#utility.yul\":4443:4446   */\n      dup2\n        /* \"#utility.yul\":4440:4455   */\n      lt\n        /* \"#utility.yul\":4432:4574   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":4514:4531   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4502:4532   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4552:4564   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4465:4477   */\n      dup4\n      add\n        /* \"#utility.yul\":4432:4574   */\n      jump(tag_452)\n    tag_454:\n      pop\n        /* \"#utility.yul\":4592:4598   */\n      swap7\n        /* \"#utility.yul\":3880:4604   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4609:4830   */\n    tag_400:\n        /* \"#utility.yul\":4651:4656   */\n      0x00\n        /* \"#utility.yul\":4704:4707   */\n      dup3\n        /* \"#utility.yul\":4697:4701   */\n      0x1f\n        /* \"#utility.yul\":4689:4695   */\n      dup4\n        /* \"#utility.yul\":4685:4702   */\n      add\n        /* \"#utility.yul\":4681:4708   */\n      slt\n        /* \"#utility.yul\":4671:4726   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4719:4720   */\n      dup1\n        /* \"#utility.yul\":4712:4724   */\n      revert\n        /* \"#utility.yul\":4671:4726   */\n    tag_456:\n        /* \"#utility.yul\":4744:4824   */\n      tag_417\n        /* \"#utility.yul\":4820:4823   */\n      dup4\n        /* \"#utility.yul\":4811:4817   */\n      dup4\n        /* \"#utility.yul\":4798:4818   */\n      calldataload\n        /* \"#utility.yul\":4791:4795   */\n      0x20\n        /* \"#utility.yul\":4783:4789   */\n      dup6\n        /* \"#utility.yul\":4779:4796   */\n      add\n        /* \"#utility.yul\":4744:4824   */\n      tag_396\n      jump\t// in\n        /* \"#utility.yul\":4835:5703   */\n    tag_55:\n        /* \"#utility.yul\":4980:4986   */\n      0x00\n        /* \"#utility.yul\":4988:4994   */\n      dup1\n        /* \"#utility.yul\":4996:5002   */\n      0x00\n        /* \"#utility.yul\":5004:5010   */\n      dup1\n        /* \"#utility.yul\":5057:5060   */\n      0x80\n        /* \"#utility.yul\":5045:5054   */\n      dup6\n        /* \"#utility.yul\":5036:5043   */\n      dup8\n        /* \"#utility.yul\":5032:5055   */\n      sub\n        /* \"#utility.yul\":5028:5061   */\n      slt\n        /* \"#utility.yul\":5025:5078   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5071:5072   */\n      dup1\n        /* \"#utility.yul\":5064:5076   */\n      revert\n        /* \"#utility.yul\":5025:5078   */\n    tag_459:\n        /* \"#utility.yul\":5097:5126   */\n      tag_460\n        /* \"#utility.yul\":5116:5125   */\n      dup6\n        /* \"#utility.yul\":5097:5126   */\n      tag_393\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5087:5126   */\n      swap4\n      pop\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"#utility.yul\":5166:5175   */\n      dup6\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"#utility.yul\":5149:5181   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5241:5243   */\n      dup1\n        /* \"#utility.yul\":5233:5239   */\n      dup3\n        /* \"#utility.yul\":5230:5244   */\n      gt\n        /* \"#utility.yul\":5227:5261   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5257:5258   */\n      0x00\n        /* \"#utility.yul\":5254:5255   */\n      dup1\n        /* \"#utility.yul\":5247:5259   */\n      revert\n        /* \"#utility.yul\":5227:5261   */\n    tag_461:\n        /* \"#utility.yul\":5280:5341   */\n      tag_462\n        /* \"#utility.yul\":5333:5340   */\n      dup9\n        /* \"#utility.yul\":5324:5330   */\n      dup4\n        /* \"#utility.yul\":5313:5322   */\n      dup10\n        /* \"#utility.yul\":5309:5331   */\n      add\n        /* \"#utility.yul\":5280:5341   */\n      tag_399\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5270:5341   */\n      swap5\n      pop\n        /* \"#utility.yul\":5394:5396   */\n      0x40\n        /* \"#utility.yul\":5383:5392   */\n      dup8\n        /* \"#utility.yul\":5379:5397   */\n      add\n        /* \"#utility.yul\":5366:5398   */\n      calldataload\n        /* \"#utility.yul\":5350:5398   */\n      swap2\n      pop\n        /* \"#utility.yul\":5423:5425   */\n      dup1\n        /* \"#utility.yul\":5413:5421   */\n      dup3\n        /* \"#utility.yul\":5410:5426   */\n      gt\n        /* \"#utility.yul\":5407:5443   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5436:5437   */\n      dup1\n        /* \"#utility.yul\":5429:5441   */\n      revert\n        /* \"#utility.yul\":5407:5443   */\n    tag_463:\n        /* \"#utility.yul\":5462:5525   */\n      tag_464\n        /* \"#utility.yul\":5517:5524   */\n      dup9\n        /* \"#utility.yul\":5506:5514   */\n      dup4\n        /* \"#utility.yul\":5495:5504   */\n      dup10\n        /* \"#utility.yul\":5491:5515   */\n      add\n        /* \"#utility.yul\":5462:5525   */\n      tag_399\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5452:5525   */\n      swap4\n      pop\n        /* \"#utility.yul\":5578:5580   */\n      0x60\n        /* \"#utility.yul\":5567:5576   */\n      dup8\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5550:5582   */\n      calldataload\n        /* \"#utility.yul\":5534:5582   */\n      swap2\n      pop\n        /* \"#utility.yul\":5607:5609   */\n      dup1\n        /* \"#utility.yul\":5597:5605   */\n      dup3\n        /* \"#utility.yul\":5594:5610   */\n      gt\n        /* \"#utility.yul\":5591:5627   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":5623:5624   */\n      0x00\n        /* \"#utility.yul\":5620:5621   */\n      dup1\n        /* \"#utility.yul\":5613:5625   */\n      revert\n        /* \"#utility.yul\":5591:5627   */\n    tag_465:\n      pop\n        /* \"#utility.yul\":5646:5697   */\n      tag_466\n        /* \"#utility.yul\":5689:5696   */\n      dup8\n        /* \"#utility.yul\":5678:5686   */\n      dup3\n        /* \"#utility.yul\":5667:5676   */\n      dup9\n        /* \"#utility.yul\":5663:5687   */\n      add\n        /* \"#utility.yul\":5646:5697   */\n      tag_400\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5636:5697   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4835:5703   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:6651   */\n    tag_59:\n        /* \"#utility.yul\":5862:5868   */\n      0x00\n        /* \"#utility.yul\":5870:5876   */\n      dup1\n        /* \"#utility.yul\":5878:5884   */\n      0x00\n        /* \"#utility.yul\":5886:5892   */\n      dup1\n        /* \"#utility.yul\":5894:5900   */\n      0x00\n        /* \"#utility.yul\":5947:5950   */\n      0xa0\n        /* \"#utility.yul\":5935:5944   */\n      dup7\n        /* \"#utility.yul\":5926:5933   */\n      dup9\n        /* \"#utility.yul\":5922:5945   */\n      sub\n        /* \"#utility.yul\":5918:5951   */\n      slt\n        /* \"#utility.yul\":5915:5968   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":5964:5965   */\n      0x00\n        /* \"#utility.yul\":5961:5962   */\n      dup1\n        /* \"#utility.yul\":5954:5966   */\n      revert\n        /* \"#utility.yul\":5915:5968   */\n    tag_468:\n        /* \"#utility.yul\":5987:6016   */\n      tag_469\n        /* \"#utility.yul\":6006:6015   */\n      dup7\n        /* \"#utility.yul\":5987:6016   */\n      tag_393\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5977:6016   */\n      swap5\n      pop\n        /* \"#utility.yul\":6035:6073   */\n      tag_470\n        /* \"#utility.yul\":6069:6071   */\n      0x20\n        /* \"#utility.yul\":6058:6067   */\n      dup8\n        /* \"#utility.yul\":6054:6072   */\n      add\n        /* \"#utility.yul\":6035:6073   */\n      tag_393\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6025:6073   */\n      swap4\n      pop\n        /* \"#utility.yul\":6124:6126   */\n      0x40\n        /* \"#utility.yul\":6113:6122   */\n      dup7\n        /* \"#utility.yul\":6109:6127   */\n      add\n        /* \"#utility.yul\":6096:6128   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6188:6190   */\n      dup1\n        /* \"#utility.yul\":6180:6186   */\n      dup3\n        /* \"#utility.yul\":6177:6191   */\n      gt\n        /* \"#utility.yul\":6174:6208   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":6204:6205   */\n      0x00\n        /* \"#utility.yul\":6201:6202   */\n      dup1\n        /* \"#utility.yul\":6194:6206   */\n      revert\n        /* \"#utility.yul\":6174:6208   */\n    tag_471:\n        /* \"#utility.yul\":6227:6288   */\n      tag_472\n        /* \"#utility.yul\":6280:6287   */\n      dup10\n        /* \"#utility.yul\":6271:6277   */\n      dup4\n        /* \"#utility.yul\":6260:6269   */\n      dup11\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6227:6288   */\n      tag_399\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6217:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6341:6343   */\n      0x60\n        /* \"#utility.yul\":6330:6339   */\n      dup9\n        /* \"#utility.yul\":6326:6344   */\n      add\n        /* \"#utility.yul\":6313:6345   */\n      calldataload\n        /* \"#utility.yul\":6297:6345   */\n      swap2\n      pop\n        /* \"#utility.yul\":6370:6372   */\n      dup1\n        /* \"#utility.yul\":6360:6368   */\n      dup3\n        /* \"#utility.yul\":6357:6373   */\n      gt\n        /* \"#utility.yul\":6354:6390   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":6386:6387   */\n      0x00\n        /* \"#utility.yul\":6383:6384   */\n      dup1\n        /* \"#utility.yul\":6376:6388   */\n      revert\n        /* \"#utility.yul\":6354:6390   */\n    tag_473:\n        /* \"#utility.yul\":6409:6472   */\n      tag_474\n        /* \"#utility.yul\":6464:6471   */\n      dup10\n        /* \"#utility.yul\":6453:6461   */\n      dup4\n        /* \"#utility.yul\":6442:6451   */\n      dup11\n        /* \"#utility.yul\":6438:6462   */\n      add\n        /* \"#utility.yul\":6409:6472   */\n      tag_399\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6399:6472   */\n      swap4\n      pop\n        /* \"#utility.yul\":6525:6528   */\n      0x80\n        /* \"#utility.yul\":6514:6523   */\n      dup9\n        /* \"#utility.yul\":6510:6529   */\n      add\n        /* \"#utility.yul\":6497:6530   */\n      calldataload\n        /* \"#utility.yul\":6481:6530   */\n      swap2\n      pop\n        /* \"#utility.yul\":6555:6557   */\n      dup1\n        /* \"#utility.yul\":6545:6553   */\n      dup3\n        /* \"#utility.yul\":6542:6558   */\n      gt\n        /* \"#utility.yul\":6539:6575   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":6571:6572   */\n      0x00\n        /* \"#utility.yul\":6568:6569   */\n      dup1\n        /* \"#utility.yul\":6561:6573   */\n      revert\n        /* \"#utility.yul\":6539:6575   */\n    tag_475:\n      pop\n        /* \"#utility.yul\":6594:6645   */\n      tag_476\n        /* \"#utility.yul\":6637:6644   */\n      dup9\n        /* \"#utility.yul\":6626:6634   */\n      dup3\n        /* \"#utility.yul\":6615:6624   */\n      dup10\n        /* \"#utility.yul\":6611:6635   */\n      add\n        /* \"#utility.yul\":6594:6645   */\n      tag_400\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6584:6645   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5708:6651   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6656:7864   */\n    tag_63:\n        /* \"#utility.yul\":6774:6780   */\n      0x00\n        /* \"#utility.yul\":6782:6788   */\n      dup1\n        /* \"#utility.yul\":6835:6837   */\n      0x40\n        /* \"#utility.yul\":6823:6832   */\n      dup4\n        /* \"#utility.yul\":6814:6821   */\n      dup6\n        /* \"#utility.yul\":6810:6833   */\n      sub\n        /* \"#utility.yul\":6806:6838   */\n      slt\n        /* \"#utility.yul\":6803:6855   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6851:6852   */\n      0x00\n        /* \"#utility.yul\":6848:6849   */\n      dup1\n        /* \"#utility.yul\":6841:6853   */\n      revert\n        /* \"#utility.yul\":6803:6855   */\n    tag_478:\n        /* \"#utility.yul\":6891:6900   */\n      dup3\n        /* \"#utility.yul\":6878:6901   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6961:6963   */\n      dup1\n        /* \"#utility.yul\":6953:6959   */\n      dup3\n        /* \"#utility.yul\":6950:6964   */\n      gt\n        /* \"#utility.yul\":6947:6981   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6977:6978   */\n      0x00\n        /* \"#utility.yul\":6974:6975   */\n      dup1\n        /* \"#utility.yul\":6967:6979   */\n      revert\n        /* \"#utility.yul\":6947:6981   */\n    tag_479:\n        /* \"#utility.yul\":7015:7021   */\n      dup2\n        /* \"#utility.yul\":7004:7013   */\n      dup6\n        /* \"#utility.yul\":7000:7022   */\n      add\n        /* \"#utility.yul\":6990:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7060:7067   */\n      dup6\n        /* \"#utility.yul\":7053:7057   */\n      0x1f\n        /* \"#utility.yul\":7049:7051   */\n      dup4\n        /* \"#utility.yul\":7045:7058   */\n      add\n        /* \"#utility.yul\":7041:7068   */\n      slt\n        /* \"#utility.yul\":7031:7086   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":7082:7083   */\n      0x00\n        /* \"#utility.yul\":7079:7080   */\n      dup1\n        /* \"#utility.yul\":7072:7084   */\n      revert\n        /* \"#utility.yul\":7031:7086   */\n    tag_480:\n        /* \"#utility.yul\":7118:7120   */\n      dup2\n        /* \"#utility.yul\":7105:7121   */\n      calldataload\n        /* \"#utility.yul\":7140:7144   */\n      0x20\n        /* \"#utility.yul\":7163:7206   */\n      tag_481\n        /* \"#utility.yul\":7203:7205   */\n      dup3\n        /* \"#utility.yul\":7163:7206   */\n      tag_398\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7235:7237   */\n      0x40\n        /* \"#utility.yul\":7229:7238   */\n      mload\n        /* \"#utility.yul\":7247:7278   */\n      tag_482\n        /* \"#utility.yul\":7275:7277   */\n      dup3\n        /* \"#utility.yul\":7267:7273   */\n      dup3\n        /* \"#utility.yul\":7247:7278   */\n      tag_395\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7313:7331   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":7401:7402   */\n      0x05\n        /* \"#utility.yul\":7397:7407   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":7389:7408   */\n      dup6\n      add\n        /* \"#utility.yul\":7385:7413   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":7347:7362   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":7425:7444   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":7422:7461   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7457:7458   */\n      0x00\n        /* \"#utility.yul\":7454:7455   */\n      dup1\n        /* \"#utility.yul\":7447:7459   */\n      revert\n        /* \"#utility.yul\":7422:7461   */\n    tag_483:\n        /* \"#utility.yul\":7481:7492   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7501:7649   */\n    tag_484:\n        /* \"#utility.yul\":7517:7523   */\n      dup4\n        /* \"#utility.yul\":7512:7515   */\n      dup7\n        /* \"#utility.yul\":7509:7524   */\n      lt\n        /* \"#utility.yul\":7501:7649   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":7583:7606   */\n      tag_487\n        /* \"#utility.yul\":7602:7605   */\n      dup7\n        /* \"#utility.yul\":7583:7606   */\n      tag_393\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7571:7607   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7534:7546   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":7627:7639   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7501:7649   */\n      jump(tag_484)\n    tag_486:\n        /* \"#utility.yul\":7668:7674   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":7712:7730   */\n      dup7\n      add\n        /* \"#utility.yul\":7699:7731   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7743:7759   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7740:7776   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7772:7773   */\n      0x00\n        /* \"#utility.yul\":7769:7770   */\n      dup1\n        /* \"#utility.yul\":7762:7774   */\n      revert\n        /* \"#utility.yul\":7740:7776   */\n    tag_488:\n      pop\n        /* \"#utility.yul\":7795:7858   */\n      tag_489\n        /* \"#utility.yul\":7850:7857   */\n      dup6\n        /* \"#utility.yul\":7839:7847   */\n      dup3\n        /* \"#utility.yul\":7828:7837   */\n      dup7\n        /* \"#utility.yul\":7824:7848   */\n      add\n        /* \"#utility.yul\":7795:7858   */\n      tag_399\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7785:7858   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6656:7864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7869:8304   */\n    tag_401:\n        /* \"#utility.yul\":7922:7925   */\n      0x00\n        /* \"#utility.yul\":7960:7965   */\n      dup2\n        /* \"#utility.yul\":7954:7966   */\n      mload\n        /* \"#utility.yul\":7987:7993   */\n      dup1\n        /* \"#utility.yul\":7982:7985   */\n      dup5\n        /* \"#utility.yul\":7975:7994   */\n      mstore\n        /* \"#utility.yul\":8013:8017   */\n      0x20\n        /* \"#utility.yul\":8042:8044   */\n      dup1\n        /* \"#utility.yul\":8037:8040   */\n      dup6\n        /* \"#utility.yul\":8033:8045   */\n      add\n        /* \"#utility.yul\":8026:8045   */\n      swap5\n      pop\n        /* \"#utility.yul\":8079:8081   */\n      dup1\n        /* \"#utility.yul\":8072:8077   */\n      dup5\n        /* \"#utility.yul\":8068:8082   */\n      add\n        /* \"#utility.yul\":8100:8101   */\n      0x00\n        /* \"#utility.yul\":8110:8279   */\n    tag_491:\n        /* \"#utility.yul\":8124:8130   */\n      dup4\n        /* \"#utility.yul\":8121:8122   */\n      dup2\n        /* \"#utility.yul\":8118:8131   */\n      lt\n        /* \"#utility.yul\":8110:8279   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":8185:8198   */\n      dup2\n      mload\n        /* \"#utility.yul\":8173:8199   */\n      dup8\n      mstore\n        /* \"#utility.yul\":8219:8231   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":8254:8269   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8146:8147   */\n      0x01\n        /* \"#utility.yul\":8139:8148   */\n      add\n        /* \"#utility.yul\":8110:8279   */\n      jump(tag_491)\n    tag_493:\n      pop\n        /* \"#utility.yul\":8295:8298   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7869:8304   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8309:8570   */\n    tag_66:\n        /* \"#utility.yul\":8488:8490   */\n      0x20\n        /* \"#utility.yul\":8477:8486   */\n      dup2\n        /* \"#utility.yul\":8470:8491   */\n      mstore\n        /* \"#utility.yul\":8451:8455   */\n      0x00\n        /* \"#utility.yul\":8508:8564   */\n      tag_417\n        /* \"#utility.yul\":8560:8562   */\n      0x20\n        /* \"#utility.yul\":8549:8558   */\n      dup4\n        /* \"#utility.yul\":8545:8563   */\n      add\n        /* \"#utility.yul\":8537:8543   */\n      dup5\n        /* \"#utility.yul\":8508:8564   */\n      tag_401\n      jump\t// in\n        /* \"#utility.yul\":8783:9105   */\n    tag_81:\n        /* \"#utility.yul\":8860:8866   */\n      0x00\n        /* \"#utility.yul\":8868:8874   */\n      dup1\n        /* \"#utility.yul\":8876:8882   */\n      0x00\n        /* \"#utility.yul\":8929:8931   */\n      0x60\n        /* \"#utility.yul\":8917:8926   */\n      dup5\n        /* \"#utility.yul\":8908:8915   */\n      dup7\n        /* \"#utility.yul\":8904:8927   */\n      sub\n        /* \"#utility.yul\":8900:8932   */\n      slt\n        /* \"#utility.yul\":8897:8949   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8945:8946   */\n      0x00\n        /* \"#utility.yul\":8942:8943   */\n      dup1\n        /* \"#utility.yul\":8935:8947   */\n      revert\n        /* \"#utility.yul\":8897:8949   */\n    tag_498:\n        /* \"#utility.yul\":8981:8990   */\n      dup4\n        /* \"#utility.yul\":8968:8991   */\n      calldataload\n        /* \"#utility.yul\":8958:8991   */\n      swap3\n      pop\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9027:9036   */\n      dup5\n        /* \"#utility.yul\":9023:9041   */\n      add\n        /* \"#utility.yul\":9010:9042   */\n      calldataload\n        /* \"#utility.yul\":9000:9042   */\n      swap2\n      pop\n        /* \"#utility.yul\":9061:9099   */\n      tag_499\n        /* \"#utility.yul\":9095:9097   */\n      0x40\n        /* \"#utility.yul\":9084:9093   */\n      dup6\n        /* \"#utility.yul\":9080:9098   */\n      add\n        /* \"#utility.yul\":9061:9099   */\n      tag_393\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9051:9099   */\n      swap1\n      pop\n        /* \"#utility.yul\":8783:9105   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9110:9457   */\n    tag_85:\n        /* \"#utility.yul\":9175:9181   */\n      0x00\n        /* \"#utility.yul\":9183:9189   */\n      dup1\n        /* \"#utility.yul\":9236:9238   */\n      0x40\n        /* \"#utility.yul\":9224:9233   */\n      dup4\n        /* \"#utility.yul\":9215:9222   */\n      dup6\n        /* \"#utility.yul\":9211:9234   */\n      sub\n        /* \"#utility.yul\":9207:9239   */\n      slt\n        /* \"#utility.yul\":9204:9256   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9252:9253   */\n      0x00\n        /* \"#utility.yul\":9249:9250   */\n      dup1\n        /* \"#utility.yul\":9242:9254   */\n      revert\n        /* \"#utility.yul\":9204:9256   */\n    tag_501:\n        /* \"#utility.yul\":9275:9304   */\n      tag_502\n        /* \"#utility.yul\":9294:9303   */\n      dup4\n        /* \"#utility.yul\":9275:9304   */\n      tag_393\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9265:9304   */\n      swap2\n      pop\n        /* \"#utility.yul\":9354:9356   */\n      0x20\n        /* \"#utility.yul\":9343:9352   */\n      dup4\n        /* \"#utility.yul\":9339:9357   */\n      add\n        /* \"#utility.yul\":9326:9358   */\n      calldataload\n        /* \"#utility.yul\":9401:9406   */\n      dup1\n        /* \"#utility.yul\":9394:9407   */\n      iszero\n        /* \"#utility.yul\":9387:9408   */\n      iszero\n        /* \"#utility.yul\":9380:9385   */\n      dup2\n        /* \"#utility.yul\":9377:9409   */\n      eq\n        /* \"#utility.yul\":9367:9427   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":9423:9424   */\n      0x00\n        /* \"#utility.yul\":9420:9421   */\n      dup1\n        /* \"#utility.yul\":9413:9425   */\n      revert\n        /* \"#utility.yul\":9367:9427   */\n    tag_503:\n        /* \"#utility.yul\":9446:9451   */\n      dup1\n        /* \"#utility.yul\":9436:9451   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9110:9457   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9462:9722   */\n    tag_89:\n        /* \"#utility.yul\":9530:9536   */\n      0x00\n        /* \"#utility.yul\":9538:9544   */\n      dup1\n        /* \"#utility.yul\":9591:9593   */\n      0x40\n        /* \"#utility.yul\":9579:9588   */\n      dup4\n        /* \"#utility.yul\":9570:9577   */\n      dup6\n        /* \"#utility.yul\":9566:9589   */\n      sub\n        /* \"#utility.yul\":9562:9594   */\n      slt\n        /* \"#utility.yul\":9559:9611   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9607:9608   */\n      0x00\n        /* \"#utility.yul\":9604:9605   */\n      dup1\n        /* \"#utility.yul\":9597:9609   */\n      revert\n        /* \"#utility.yul\":9559:9611   */\n    tag_505:\n        /* \"#utility.yul\":9630:9659   */\n      tag_506\n        /* \"#utility.yul\":9649:9658   */\n      dup4\n        /* \"#utility.yul\":9630:9659   */\n      tag_393\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9620:9659   */\n      swap2\n      pop\n        /* \"#utility.yul\":9678:9716   */\n      tag_507\n        /* \"#utility.yul\":9712:9714   */\n      0x20\n        /* \"#utility.yul\":9701:9710   */\n      dup5\n        /* \"#utility.yul\":9697:9715   */\n      add\n        /* \"#utility.yul\":9678:9716   */\n      tag_393\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9668:9716   */\n      swap1\n      pop\n        /* \"#utility.yul\":9462:9722   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9727:10333   */\n    tag_94:\n        /* \"#utility.yul\":9831:9837   */\n      0x00\n        /* \"#utility.yul\":9839:9845   */\n      dup1\n        /* \"#utility.yul\":9847:9853   */\n      0x00\n        /* \"#utility.yul\":9855:9861   */\n      dup1\n        /* \"#utility.yul\":9863:9869   */\n      0x00\n        /* \"#utility.yul\":9916:9919   */\n      0xa0\n        /* \"#utility.yul\":9904:9913   */\n      dup7\n        /* \"#utility.yul\":9895:9902   */\n      dup9\n        /* \"#utility.yul\":9891:9914   */\n      sub\n        /* \"#utility.yul\":9887:9920   */\n      slt\n        /* \"#utility.yul\":9884:9937   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9933:9934   */\n      0x00\n        /* \"#utility.yul\":9930:9931   */\n      dup1\n        /* \"#utility.yul\":9923:9935   */\n      revert\n        /* \"#utility.yul\":9884:9937   */\n    tag_509:\n        /* \"#utility.yul\":9956:9985   */\n      tag_510\n        /* \"#utility.yul\":9975:9984   */\n      dup7\n        /* \"#utility.yul\":9956:9985   */\n      tag_393\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9946:9985   */\n      swap5\n      pop\n        /* \"#utility.yul\":10004:10042   */\n      tag_511\n        /* \"#utility.yul\":10038:10040   */\n      0x20\n        /* \"#utility.yul\":10027:10036   */\n      dup8\n        /* \"#utility.yul\":10023:10041   */\n      add\n        /* \"#utility.yul\":10004:10042   */\n      tag_393\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9994:10042   */\n      swap4\n      pop\n        /* \"#utility.yul\":10089:10091   */\n      0x40\n        /* \"#utility.yul\":10078:10087   */\n      dup7\n        /* \"#utility.yul\":10074:10092   */\n      add\n        /* \"#utility.yul\":10061:10093   */\n      calldataload\n        /* \"#utility.yul\":10051:10093   */\n      swap3\n      pop\n        /* \"#utility.yul\":10140:10142   */\n      0x60\n        /* \"#utility.yul\":10129:10138   */\n      dup7\n        /* \"#utility.yul\":10125:10143   */\n      add\n        /* \"#utility.yul\":10112:10144   */\n      calldataload\n        /* \"#utility.yul\":10102:10144   */\n      swap2\n      pop\n        /* \"#utility.yul\":10195:10198   */\n      0x80\n        /* \"#utility.yul\":10184:10193   */\n      dup7\n        /* \"#utility.yul\":10180:10199   */\n      add\n        /* \"#utility.yul\":10167:10200   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10215:10221   */\n      dup2\n        /* \"#utility.yul\":10212:10242   */\n      gt\n        /* \"#utility.yul\":10209:10259   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":10255:10256   */\n      0x00\n        /* \"#utility.yul\":10252:10253   */\n      dup1\n        /* \"#utility.yul\":10245:10257   */\n      revert\n        /* \"#utility.yul\":10209:10259   */\n    tag_512:\n        /* \"#utility.yul\":10278:10327   */\n      tag_476\n        /* \"#utility.yul\":10319:10326   */\n      dup9\n        /* \"#utility.yul\":10310:10316   */\n      dup3\n        /* \"#utility.yul\":10299:10308   */\n      dup10\n        /* \"#utility.yul\":10295:10317   */\n      add\n        /* \"#utility.yul\":10278:10327   */\n      tag_400\n      jump\t// in\n        /* \"#utility.yul\":10338:10524   */\n    tag_98:\n        /* \"#utility.yul\":10397:10403   */\n      0x00\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"#utility.yul\":10438:10447   */\n      dup3\n        /* \"#utility.yul\":10429:10436   */\n      dup5\n        /* \"#utility.yul\":10425:10448   */\n      sub\n        /* \"#utility.yul\":10421:10453   */\n      slt\n        /* \"#utility.yul\":10418:10470   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":10466:10467   */\n      0x00\n        /* \"#utility.yul\":10463:10464   */\n      dup1\n        /* \"#utility.yul\":10456:10468   */\n      revert\n        /* \"#utility.yul\":10418:10470   */\n    tag_515:\n        /* \"#utility.yul\":10489:10518   */\n      tag_417\n        /* \"#utility.yul\":10508:10517   */\n      dup3\n        /* \"#utility.yul\":10489:10518   */\n      tag_393\n      jump\t// in\n        /* \"#utility.yul\":10941:11297   */\n    tag_115:\n        /* \"#utility.yul\":11143:11145   */\n      0x20\n        /* \"#utility.yul\":11125:11146   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11162:11180   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11155:11185   */\n      mstore\n        /* \"#utility.yul\":11221:11255   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11216:11218   */\n      0x40\n        /* \"#utility.yul\":11201:11219   */\n      dup3\n      add\n        /* \"#utility.yul\":11194:11256   */\n      mstore\n        /* \"#utility.yul\":11288:11290   */\n      0x60\n        /* \"#utility.yul\":11273:11291   */\n      add\n      swap1\n        /* \"#utility.yul\":10941:11297   */\n      jump\t// out\n        /* \"#utility.yul\":11302:11707   */\n    tag_126:\n        /* \"#utility.yul\":11504:11506   */\n      0x20\n        /* \"#utility.yul\":11486:11507   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11543:11545   */\n      0x29\n        /* \"#utility.yul\":11523:11541   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11516:11546   */\n      mstore\n        /* \"#utility.yul\":11582:11616   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11577:11579   */\n      0x40\n        /* \"#utility.yul\":11562:11580   */\n      dup3\n      add\n        /* \"#utility.yul\":11555:11617   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11648:11650   */\n      0x60\n        /* \"#utility.yul\":11633:11651   */\n      dup3\n      add\n        /* \"#utility.yul\":11626:11665   */\n      mstore\n        /* \"#utility.yul\":11697:11700   */\n      0x80\n        /* \"#utility.yul\":11682:11701   */\n      add\n      swap1\n        /* \"#utility.yul\":11302:11707   */\n      jump\t// out\n        /* \"#utility.yul\":11712:11839   */\n    tag_402:\n        /* \"#utility.yul\":11773:11783   */\n      0x4e487b71\n        /* \"#utility.yul\":11768:11771   */\n      0xe0\n        /* \"#utility.yul\":11764:11784   */\n      shl\n        /* \"#utility.yul\":11761:11762   */\n      0x00\n        /* \"#utility.yul\":11754:11785   */\n      mstore\n        /* \"#utility.yul\":11804:11808   */\n      0x11\n        /* \"#utility.yul\":11801:11802   */\n      0x04\n        /* \"#utility.yul\":11794:11809   */\n      mstore\n        /* \"#utility.yul\":11828:11832   */\n      0x24\n        /* \"#utility.yul\":11825:11826   */\n      0x00\n        /* \"#utility.yul\":11818:11833   */\n      revert\n        /* \"#utility.yul\":11844:11980   */\n    tag_130:\n        /* \"#utility.yul\":11883:11886   */\n      0x00\n        /* \"#utility.yul\":11911:11916   */\n      dup2\n        /* \"#utility.yul\":11901:11940   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":11920:11938   */\n      tag_523\n      tag_402\n      jump\t// in\n    tag_523:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":11956:11974   */\n      add\n      swap1\n        /* \"#utility.yul\":11844:11980   */\n      jump\t// out\n        /* \"#utility.yul\":11985:12365   */\n    tag_133:\n        /* \"#utility.yul\":12064:12065   */\n      0x01\n        /* \"#utility.yul\":12060:12072   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12107:12119   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12128:12189   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":12182:12186   */\n      0x7f\n        /* \"#utility.yul\":12174:12180   */\n      dup3\n        /* \"#utility.yul\":12170:12187   */\n      and\n        /* \"#utility.yul\":12160:12187   */\n      swap2\n      pop\n        /* \"#utility.yul\":12128:12189   */\n    tag_525:\n        /* \"#utility.yul\":12235:12237   */\n      0x20\n        /* \"#utility.yul\":12227:12233   */\n      dup3\n        /* \"#utility.yul\":12224:12238   */\n      lt\n        /* \"#utility.yul\":12204:12222   */\n      dup2\n        /* \"#utility.yul\":12201:12239   */\n      sub\n        /* \"#utility.yul\":12198:12359   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":12281:12291   */\n      0x4e487b71\n        /* \"#utility.yul\":12276:12279   */\n      0xe0\n        /* \"#utility.yul\":12272:12292   */\n      shl\n        /* \"#utility.yul\":12269:12270   */\n      0x00\n        /* \"#utility.yul\":12262:12293   */\n      mstore\n        /* \"#utility.yul\":12316:12320   */\n      0x22\n        /* \"#utility.yul\":12313:12314   */\n      0x04\n        /* \"#utility.yul\":12306:12321   */\n      mstore\n        /* \"#utility.yul\":12344:12348   */\n      0x24\n        /* \"#utility.yul\":12341:12342   */\n      0x00\n        /* \"#utility.yul\":12334:12349   */\n      revert\n        /* \"#utility.yul\":12198:12359   */\n    tag_526:\n      pop\n        /* \"#utility.yul\":11985:12365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12370:12495   */\n    tag_148:\n        /* \"#utility.yul\":12435:12444   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12456:12466   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12453:12489   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":12469:12487   */\n      tag_100\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":13329:13456   */\n    tag_173:\n        /* \"#utility.yul\":13390:13400   */\n      0x4e487b71\n        /* \"#utility.yul\":13385:13388   */\n      0xe0\n        /* \"#utility.yul\":13381:13401   */\n      shl\n        /* \"#utility.yul\":13378:13379   */\n      0x00\n        /* \"#utility.yul\":13371:13402   */\n      mstore\n        /* \"#utility.yul\":13421:13425   */\n      0x32\n        /* \"#utility.yul\":13418:13419   */\n      0x04\n        /* \"#utility.yul\":13411:13426   */\n      mstore\n        /* \"#utility.yul\":13445:13449   */\n      0x24\n        /* \"#utility.yul\":13442:13443   */\n      0x00\n        /* \"#utility.yul\":13435:13450   */\n      revert\n        /* \"#utility.yul\":13461:13596   */\n    tag_179:\n        /* \"#utility.yul\":13500:13503   */\n      0x00\n        /* \"#utility.yul\":13521:13538   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":13518:13561   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":13541:13559   */\n      tag_535\n      tag_402\n      jump\t// in\n    tag_535:\n      pop\n        /* \"#utility.yul\":13588:13589   */\n      0x01\n        /* \"#utility.yul\":13577:13590   */\n      add\n      swap1\n        /* \"#utility.yul\":13461:13596   */\n      jump\t// out\n        /* \"#utility.yul\":13601:13729   */\n    tag_205:\n        /* \"#utility.yul\":13668:13677   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13689:13700   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13686:13723   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":13703:13721   */\n      tag_100\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":14267:14812   */\n    tag_404:\n        /* \"#utility.yul\":14369:14371   */\n      0x1f\n        /* \"#utility.yul\":14364:14367   */\n      dup3\n        /* \"#utility.yul\":14361:14372   */\n      gt\n        /* \"#utility.yul\":14358:14806   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":14405:14406   */\n      0x00\n        /* \"#utility.yul\":14430:14435   */\n      dup2\n        /* \"#utility.yul\":14426:14428   */\n      dup2\n        /* \"#utility.yul\":14419:14436   */\n      mstore\n        /* \"#utility.yul\":14475:14479   */\n      0x20\n        /* \"#utility.yul\":14471:14473   */\n      dup2\n        /* \"#utility.yul\":14461:14480   */\n      keccak256\n        /* \"#utility.yul\":14545:14547   */\n      0x1f\n        /* \"#utility.yul\":14533:14543   */\n      dup6\n        /* \"#utility.yul\":14529:14548   */\n      add\n        /* \"#utility.yul\":14526:14527   */\n      0x05\n        /* \"#utility.yul\":14522:14549   */\n      shr\n        /* \"#utility.yul\":14516:14520   */\n      dup2\n        /* \"#utility.yul\":14512:14550   */\n      add\n        /* \"#utility.yul\":14581:14585   */\n      0x20\n        /* \"#utility.yul\":14569:14579   */\n      dup7\n        /* \"#utility.yul\":14566:14586   */\n      lt\n        /* \"#utility.yul\":14563:14610   */\n      iszero\n      tag_543\n      jumpi\n      pop\n        /* \"#utility.yul\":14604:14608   */\n      dup1\n        /* \"#utility.yul\":14563:14610   */\n    tag_543:\n        /* \"#utility.yul\":14659:14661   */\n      0x1f\n        /* \"#utility.yul\":14654:14657   */\n      dup6\n        /* \"#utility.yul\":14650:14662   */\n      add\n        /* \"#utility.yul\":14647:14648   */\n      0x05\n        /* \"#utility.yul\":14643:14663   */\n      shr\n        /* \"#utility.yul\":14637:14641   */\n      dup3\n        /* \"#utility.yul\":14633:14664   */\n      add\n        /* \"#utility.yul\":14623:14664   */\n      swap2\n      pop\n        /* \"#utility.yul\":14714:14796   */\n    tag_544:\n        /* \"#utility.yul\":14732:14734   */\n      dup2\n        /* \"#utility.yul\":14725:14730   */\n      dup2\n        /* \"#utility.yul\":14722:14735   */\n      lt\n        /* \"#utility.yul\":14714:14796   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":14777:14794   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":14758:14759   */\n      0x01\n        /* \"#utility.yul\":14747:14760   */\n      add\n        /* \"#utility.yul\":14714:14796   */\n      jump(tag_544)\n        /* \"#utility.yul\":14358:14806   */\n    tag_542:\n        /* \"#utility.yul\":14267:14812   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14988:16340   */\n    tag_262:\n        /* \"#utility.yul\":15114:15117   */\n      dup2\n        /* \"#utility.yul\":15108:15118   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":15133:15139   */\n      dup2\n        /* \"#utility.yul\":15130:15160   */\n      gt\n        /* \"#utility.yul\":15127:15183   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":15163:15181   */\n      tag_550\n      tag_165\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15192:15289   */\n      tag_551\n        /* \"#utility.yul\":15282:15288   */\n      dup2\n        /* \"#utility.yul\":15242:15280   */\n      tag_552\n        /* \"#utility.yul\":15274:15278   */\n      dup5\n        /* \"#utility.yul\":15268:15279   */\n      sload\n        /* \"#utility.yul\":15242:15280   */\n      tag_133\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15236:15240   */\n      dup5\n        /* \"#utility.yul\":15192:15289   */\n      tag_404\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15344:15348   */\n      0x20\n      dup1\n        /* \"#utility.yul\":15408:15410   */\n      0x1f\n        /* \"#utility.yul\":15397:15411   */\n      dup4\n      gt\n        /* \"#utility.yul\":15425:15426   */\n      0x01\n        /* \"#utility.yul\":15420:16083   */\n      dup2\n      eq\n      tag_554\n      jumpi\n        /* \"#utility.yul\":16127:16128   */\n      0x00\n        /* \"#utility.yul\":16144:16150   */\n      dup5\n        /* \"#utility.yul\":16141:16230   */\n      iszero\n      tag_555\n      jumpi\n      pop\n        /* \"#utility.yul\":16196:16215   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":16190:16216   */\n      mload\n        /* \"#utility.yul\":16141:16230   */\n    tag_555:\n      not(0x00)\n        /* \"#utility.yul\":14945:14946   */\n      0x03\n        /* \"#utility.yul\":14941:14952   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":14937:14961   */\n      shr\n        /* \"#utility.yul\":14933:14962   */\n      not\n        /* \"#utility.yul\":14923:14963   */\n      and\n        /* \"#utility.yul\":14969:14970   */\n      0x01\n        /* \"#utility.yul\":14965:14976   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":14920:14977   */\n      or\n        /* \"#utility.yul\":16243:16324   */\n      dup6\n      sstore\n        /* \"#utility.yul\":15390:16334   */\n      jump(tag_321)\n        /* \"#utility.yul\":15420:16083   */\n    tag_554:\n        /* \"#utility.yul\":14214:14215   */\n      0x00\n        /* \"#utility.yul\":14207:14221   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":14251:14255   */\n      0x20\n        /* \"#utility.yul\":14238:14256   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":15456:15476   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":15574:15810   */\n    tag_558:\n        /* \"#utility.yul\":15588:15595   */\n      dup3\n        /* \"#utility.yul\":15585:15586   */\n      dup2\n        /* \"#utility.yul\":15582:15596   */\n      lt\n        /* \"#utility.yul\":15574:15810   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":15677:15696   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":15671:15697   */\n      mload\n        /* \"#utility.yul\":15656:15698   */\n      dup3\n      sstore\n        /* \"#utility.yul\":15769:15796   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":15737:15738   */\n      0x01\n        /* \"#utility.yul\":15725:15739   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":15604:15623   */\n      dup5\n      add\n        /* \"#utility.yul\":15574:15810   */\n      jump(tag_558)\n    tag_560:\n        /* \"#utility.yul\":15578:15581   */\n      pop\n        /* \"#utility.yul\":15838:15844   */\n      dup6\n        /* \"#utility.yul\":15829:15836   */\n      dup3\n        /* \"#utility.yul\":15826:15845   */\n      lt\n        /* \"#utility.yul\":15823:16024   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":15899:15918   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":15893:15919   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":15982:15983   */\n      0x03\n        /* \"#utility.yul\":15978:15992   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":15994:15997   */\n      0xf8\n        /* \"#utility.yul\":15974:15998   */\n      and\n        /* \"#utility.yul\":15970:16007   */\n      shr\n        /* \"#utility.yul\":15966:16008   */\n      not\n        /* \"#utility.yul\":15951:16009   */\n      and\n        /* \"#utility.yul\":15936:16010   */\n      dup2\n      sstore\n        /* \"#utility.yul\":15823:16024   */\n    tag_561:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16070:16071   */\n      0x01\n        /* \"#utility.yul\":16054:16068   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":16050:16072   */\n      add\n        /* \"#utility.yul\":16037:16073   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":14988:16340   */\n      jump\t// out\n        /* \"#utility.yul\":17809:18213   */\n    tag_284:\n        /* \"#utility.yul\":18011:18013   */\n      0x20\n        /* \"#utility.yul\":17993:18014   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18050:18052   */\n      0x28\n        /* \"#utility.yul\":18030:18048   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18023:18053   */\n      mstore\n        /* \"#utility.yul\":18089:18123   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":18084:18086   */\n      0x40\n        /* \"#utility.yul\":18069:18087   */\n      dup3\n      add\n        /* \"#utility.yul\":18062:18124   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":18155:18157   */\n      0x60\n        /* \"#utility.yul\":18140:18158   */\n      dup3\n      add\n        /* \"#utility.yul\":18133:18171   */\n      mstore\n        /* \"#utility.yul\":18203:18206   */\n      0x80\n        /* \"#utility.yul\":18188:18207   */\n      add\n      swap1\n        /* \"#utility.yul\":17809:18213   */\n      jump\t// out\n        /* \"#utility.yul\":18218:18683   */\n    tag_297:\n        /* \"#utility.yul\":18475:18477   */\n      0x40\n        /* \"#utility.yul\":18464:18473   */\n      dup2\n        /* \"#utility.yul\":18457:18478   */\n      mstore\n        /* \"#utility.yul\":18438:18442   */\n      0x00\n        /* \"#utility.yul\":18501:18557   */\n      tag_568\n        /* \"#utility.yul\":18553:18555   */\n      0x40\n        /* \"#utility.yul\":18542:18551   */\n      dup4\n        /* \"#utility.yul\":18538:18556   */\n      add\n        /* \"#utility.yul\":18530:18536   */\n      dup6\n        /* \"#utility.yul\":18501:18557   */\n      tag_401\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":18605:18614   */\n      dup3\n        /* \"#utility.yul\":18597:18603   */\n      dup2\n        /* \"#utility.yul\":18593:18615   */\n      sub\n        /* \"#utility.yul\":18588:18590   */\n      0x20\n        /* \"#utility.yul\":18577:18586   */\n      dup5\n        /* \"#utility.yul\":18573:18591   */\n      add\n        /* \"#utility.yul\":18566:18616   */\n      mstore\n        /* \"#utility.yul\":18633:18677   */\n      tag_569\n        /* \"#utility.yul\":18670:18676   */\n      dup2\n        /* \"#utility.yul\":18662:18668   */\n      dup6\n        /* \"#utility.yul\":18633:18677   */\n      tag_401\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":18625:18677   */\n      swap6\n        /* \"#utility.yul\":18218:18683   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18688:19089   */\n    tag_305:\n        /* \"#utility.yul\":18890:18892   */\n      0x20\n        /* \"#utility.yul\":18872:18893   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":18929:18931   */\n      0x25\n        /* \"#utility.yul\":18909:18927   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":18902:18932   */\n      mstore\n        /* \"#utility.yul\":18968:19002   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":18963:18965   */\n      0x40\n        /* \"#utility.yul\":18948:18966   */\n      dup3\n      add\n        /* \"#utility.yul\":18941:19003   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":19034:19036   */\n      0x60\n        /* \"#utility.yul\":19019:19037   */\n      dup3\n      add\n        /* \"#utility.yul\":19012:19047   */\n      mstore\n        /* \"#utility.yul\":19079:19082   */\n      0x80\n        /* \"#utility.yul\":19064:19083   */\n      add\n      swap1\n        /* \"#utility.yul\":18688:19089   */\n      jump\t// out\n        /* \"#utility.yul\":19094:19500   */\n    tag_317:\n        /* \"#utility.yul\":19296:19298   */\n      0x20\n        /* \"#utility.yul\":19278:19299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":19335:19337   */\n      0x2a\n        /* \"#utility.yul\":19315:19333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":19308:19338   */\n      mstore\n        /* \"#utility.yul\":19374:19408   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":19369:19371   */\n      0x40\n        /* \"#utility.yul\":19354:19372   */\n      dup3\n      add\n        /* \"#utility.yul\":19347:19409   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":19440:19442   */\n      0x60\n        /* \"#utility.yul\":19425:19443   */\n      dup3\n      add\n        /* \"#utility.yul\":19418:19458   */\n      mstore\n        /* \"#utility.yul\":19490:19493   */\n      0x80\n        /* \"#utility.yul\":19475:19494   */\n      add\n      swap1\n        /* \"#utility.yul\":19094:19500   */\n      jump\t// out\n        /* \"#utility.yul\":19915:20742   */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":20312:20327   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":20294:20328   */\n      dup3\n      mstore\n        /* \"#utility.yul\":20364:20379   */\n      dup6\n      and\n        /* \"#utility.yul\":20359:20361   */\n      0x20\n        /* \"#utility.yul\":20344:20362   */\n      dup3\n      add\n        /* \"#utility.yul\":20337:20380   */\n      mstore\n        /* \"#utility.yul\":20274:20277   */\n      0xa0\n        /* \"#utility.yul\":20411:20413   */\n      0x40\n        /* \"#utility.yul\":20396:20414   */\n      dup3\n      add\n        /* \"#utility.yul\":20389:20420   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":20237:20241   */\n      0x00\n      swap1\n        /* \"#utility.yul\":20443:20500   */\n      tag_574\n      swap1\n        /* \"#utility.yul\":20480:20499   */\n      dup4\n      add\n        /* \"#utility.yul\":20472:20478   */\n      dup7\n        /* \"#utility.yul\":20443:20500   */\n      tag_401\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20548:20557   */\n      dup3\n        /* \"#utility.yul\":20540:20546   */\n      dup2\n        /* \"#utility.yul\":20536:20558   */\n      sub\n        /* \"#utility.yul\":20531:20533   */\n      0x60\n        /* \"#utility.yul\":20520:20529   */\n      dup5\n        /* \"#utility.yul\":20516:20534   */\n      add\n        /* \"#utility.yul\":20509:20559   */\n      mstore\n        /* \"#utility.yul\":20582:20626   */\n      tag_575\n        /* \"#utility.yul\":20619:20625   */\n      dup2\n        /* \"#utility.yul\":20611:20617   */\n      dup7\n        /* \"#utility.yul\":20582:20626   */\n      tag_401\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20568:20626   */\n      swap1\n      pop\n        /* \"#utility.yul\":20675:20684   */\n      dup3\n        /* \"#utility.yul\":20667:20673   */\n      dup2\n        /* \"#utility.yul\":20663:20685   */\n      sub\n        /* \"#utility.yul\":20657:20660   */\n      0x80\n        /* \"#utility.yul\":20646:20655   */\n      dup5\n        /* \"#utility.yul\":20642:20661   */\n      add\n        /* \"#utility.yul\":20635:20686   */\n      mstore\n        /* \"#utility.yul\":20703:20736   */\n      tag_576\n        /* \"#utility.yul\":20729:20735   */\n      dup2\n        /* \"#utility.yul\":20721:20727   */\n      dup6\n        /* \"#utility.yul\":20703:20736   */\n      tag_397\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":20695:20736   */\n      swap9\n        /* \"#utility.yul\":19915:20742   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20747:20996   */\n    tag_356:\n        /* \"#utility.yul\":20816:20822   */\n      0x00\n        /* \"#utility.yul\":20869:20871   */\n      0x20\n        /* \"#utility.yul\":20857:20866   */\n      dup3\n        /* \"#utility.yul\":20848:20855   */\n      dup5\n        /* \"#utility.yul\":20844:20867   */\n      sub\n        /* \"#utility.yul\":20840:20872   */\n      slt\n        /* \"#utility.yul\":20837:20889   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":20885:20886   */\n      0x00\n        /* \"#utility.yul\":20882:20883   */\n      dup1\n        /* \"#utility.yul\":20875:20887   */\n      revert\n        /* \"#utility.yul\":20837:20889   */\n    tag_578:\n        /* \"#utility.yul\":20917:20926   */\n      dup2\n        /* \"#utility.yul\":20911:20927   */\n      mload\n        /* \"#utility.yul\":20936:20966   */\n      tag_417\n        /* \"#utility.yul\":20960:20965   */\n      dup2\n        /* \"#utility.yul\":20936:20966   */\n      tag_394\n      jump\t// in\n        /* \"#utility.yul\":21001:21180   */\n    tag_362:\n        /* \"#utility.yul\":21036:21039   */\n      0x00\n        /* \"#utility.yul\":21078:21079   */\n      0x03\n        /* \"#utility.yul\":21060:21076   */\n      returndatasize\n        /* \"#utility.yul\":21057:21080   */\n      gt\n        /* \"#utility.yul\":21054:21174   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":21124:21125   */\n      0x04\n        /* \"#utility.yul\":21121:21122   */\n      0x00\n        /* \"#utility.yul\":21118:21119   */\n      dup1\n        /* \"#utility.yul\":21103:21126   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":21161:21162   */\n      0x00\n        /* \"#utility.yul\":21155:21163   */\n      mload\n        /* \"#utility.yul\":21150:21153   */\n      0xe0\n        /* \"#utility.yul\":21146:21164   */\n      shr\n        /* \"#utility.yul\":21054:21174   */\n    tag_581:\n        /* \"#utility.yul\":21001:21180   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21185:21856   */\n    tag_364:\n        /* \"#utility.yul\":21224:21227   */\n      0x00\n        /* \"#utility.yul\":21266:21270   */\n      0x44\n        /* \"#utility.yul\":21248:21264   */\n      returndatasize\n        /* \"#utility.yul\":21245:21271   */\n      lt\n        /* \"#utility.yul\":21242:21281   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":21185:21856   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21242:21281   */\n    tag_583:\n        /* \"#utility.yul\":21308:21310   */\n      0x40\n        /* \"#utility.yul\":21302:21311   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":21373:21389   */\n      returndatasize\n        /* \"#utility.yul\":21369:21394   */\n      dup2\n      add\n        /* \"#utility.yul\":21366:21367   */\n      0x04\n        /* \"#utility.yul\":21302:21311   */\n      dup4\n        /* \"#utility.yul\":21345:21395   */\n      returndatacopy\n        /* \"#utility.yul\":21424:21428   */\n      dup2\n        /* \"#utility.yul\":21418:21429   */\n      mload\n        /* \"#utility.yul\":21448:21464   */\n      returndatasize\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":21554:21556   */\n      dup2\n        /* \"#utility.yul\":21547:21551   */\n      0x24\n        /* \"#utility.yul\":21539:21545   */\n      dup5\n        /* \"#utility.yul\":21535:21552   */\n      add\n        /* \"#utility.yul\":21532:21557   */\n      gt\n        /* \"#utility.yul\":21527:21529   */\n      dup2\n        /* \"#utility.yul\":21519:21525   */\n      dup5\n        /* \"#utility.yul\":21516:21530   */\n      gt\n        /* \"#utility.yul\":21513:21558   */\n      or\n        /* \"#utility.yul\":21510:21568   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":21561:21566   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21185:21856   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21510:21568   */\n    tag_584:\n        /* \"#utility.yul\":21598:21604   */\n      dup3\n        /* \"#utility.yul\":21592:21596   */\n      dup6\n        /* \"#utility.yul\":21588:21605   */\n      add\n        /* \"#utility.yul\":21577:21605   */\n      swap2\n      pop\n        /* \"#utility.yul\":21634:21637   */\n      dup2\n        /* \"#utility.yul\":21628:21638   */\n      mload\n        /* \"#utility.yul\":21661:21663   */\n      dup2\n        /* \"#utility.yul\":21653:21659   */\n      dup2\n        /* \"#utility.yul\":21650:21664   */\n      gt\n        /* \"#utility.yul\":21647:21674   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":21667:21672   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21185:21856   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21647:21674   */\n    tag_585:\n        /* \"#utility.yul\":21751:21753   */\n      dup5\n        /* \"#utility.yul\":21732:21748   */\n      returndatasize\n        /* \"#utility.yul\":21726:21730   */\n      dup8\n        /* \"#utility.yul\":21722:21749   */\n      add\n        /* \"#utility.yul\":21718:21754   */\n      add\n        /* \"#utility.yul\":21711:21715   */\n      0x20\n        /* \"#utility.yul\":21702:21708   */\n      dup3\n        /* \"#utility.yul\":21697:21700   */\n      dup6\n        /* \"#utility.yul\":21693:21709   */\n      add\n        /* \"#utility.yul\":21689:21716   */\n      add\n        /* \"#utility.yul\":21686:21755   */\n      gt\n        /* \"#utility.yul\":21683:21765   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":21758:21763   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21185:21856   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21683:21765   */\n    tag_586:\n        /* \"#utility.yul\":21774:21831   */\n      tag_587\n        /* \"#utility.yul\":21825:21829   */\n      0x20\n        /* \"#utility.yul\":21816:21822   */\n      dup3\n        /* \"#utility.yul\":21808:21814   */\n      dup7\n        /* \"#utility.yul\":21804:21823   */\n      add\n        /* \"#utility.yul\":21800:21830   */\n      add\n        /* \"#utility.yul\":21794:21798   */\n      dup8\n        /* \"#utility.yul\":21774:21831   */\n      tag_395\n      jump\t// in\n    tag_587:\n      pop\n        /* \"#utility.yul\":21847:21850   */\n      swap1\n      swap6\n        /* \"#utility.yul\":21185:21856   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22282:22686   */\n    tag_372:\n        /* \"#utility.yul\":22484:22486   */\n      0x20\n        /* \"#utility.yul\":22466:22487   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":22523:22525   */\n      0x28\n        /* \"#utility.yul\":22503:22521   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":22496:22526   */\n      mstore\n        /* \"#utility.yul\":22562:22596   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":22557:22559   */\n      0x40\n        /* \"#utility.yul\":22542:22560   */\n      dup3\n      add\n        /* \"#utility.yul\":22535:22597   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":22628:22630   */\n      0x60\n        /* \"#utility.yul\":22613:22631   */\n      dup3\n      add\n        /* \"#utility.yul\":22606:22644   */\n      mstore\n        /* \"#utility.yul\":22676:22679   */\n      0x80\n        /* \"#utility.yul\":22661:22680   */\n      add\n      swap1\n        /* \"#utility.yul\":22282:22686   */\n      jump\t// out\n        /* \"#utility.yul\":22691:23252   */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22988:23003   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":22970:23004   */\n      dup3\n      mstore\n        /* \"#utility.yul\":23040:23055   */\n      dup6\n      and\n        /* \"#utility.yul\":23035:23037   */\n      0x20\n        /* \"#utility.yul\":23020:23038   */\n      dup3\n      add\n        /* \"#utility.yul\":23013:23056   */\n      mstore\n        /* \"#utility.yul\":23087:23089   */\n      0x40\n        /* \"#utility.yul\":23072:23090   */\n      dup2\n      add\n        /* \"#utility.yul\":23065:23099   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":23130:23132   */\n      0x60\n        /* \"#utility.yul\":23115:23133   */\n      dup2\n      add\n        /* \"#utility.yul\":23108:23142   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":22950:22953   */\n      0xa0\n        /* \"#utility.yul\":23173:23176   */\n      0x80\n        /* \"#utility.yul\":23158:23177   */\n      dup3\n      add\n        /* \"#utility.yul\":23151:23183   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":22913:22917   */\n      0x00\n      swap1\n        /* \"#utility.yul\":23200:23246   */\n      tag_591\n      swap1\n        /* \"#utility.yul\":23226:23245   */\n      dup4\n      add\n        /* \"#utility.yul\":23218:23224   */\n      dup5\n        /* \"#utility.yul\":23200:23246   */\n      tag_397\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":23192:23246   */\n      swap8\n        /* \"#utility.yul\":22691:23252   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220363025199168cd283c64998af8932af0deb17e3cd7bccc9b1a42bd7ef2d13c4f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_271": {
									"entryPoint": null,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_876": {
									"entryPoint": 73,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 91,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:10"
															},
															"nodeType": "YulIf",
															"src": "289:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:10"
															},
															"nodeType": "YulIf",
															"src": "359:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													}
												],
												"src": "146:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:10",
														"type": ""
													}
												],
												"src": "531:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:10",
																			"statements": []
																		},
																		"src": "1104:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:10"
															},
															"nodeType": "YulIf",
															"src": "748:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:10",
														"type": ""
													}
												],
												"src": "657:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:10",
														"type": ""
													}
												],
												"src": "1207:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:10"
															},
															"nodeType": "YulIf",
															"src": "1517:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:10",
																					"statements": []
																				},
																				"src": "1964:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:10",
														"type": ""
													}
												],
												"src": "1378:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2185 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x49 JUMP JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0x5B JUMP JUMPDEST PUSH3 0x21E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x57 DUP3 DUP3 PUSH3 0x152 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x14D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x128 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x149 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x134 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x16E JUMPI PUSH3 0x16E PUSH3 0xAD JUMP JUMPDEST PUSH3 0x186 DUP2 PUSH3 0x17F DUP5 SLOAD PUSH3 0xC3 JUMP JUMPDEST DUP5 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1BE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1A5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1EF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1CE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x20E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1F57 DUP1 PUSH3 0x22E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9416308E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x176 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1908 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x176 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x38B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x354 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x354 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0xA87 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH2 0x3FC DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x423 DUP4 DUP4 DUP4 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x44A SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x498 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x505 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC0D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x539 JUMPI POP PUSH2 0x539 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD92 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x634 JUMPI PUSH2 0x634 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6A8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69B JUMPI PUSH2 0x69B PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI PUSH2 0x6BA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CE DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP PUSH2 0x663 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x711 PUSH1 0x0 PUSH2 0xF2E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH2 0x757 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x780 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79D JUMPI PUSH2 0x79D PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DB SWAP1 DUP6 PUSH2 0x1B10 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x802 JUMPI PUSH2 0x802 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x82F PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x844 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP PUSH2 0x868 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0D JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x898 JUMPI PUSH2 0x898 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x907 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x916 DUP7 DUP7 PUSH2 0x1B10 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97E JUMPI DUP1 DUP4 PUSH2 0x929 DUP9 DUP4 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x939 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x951 DUP9 DUP5 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x961 JUMPI PUSH2 0x961 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x976 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90C JUMP JUMPDEST POP PUSH2 0x5AD CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51D JUMP JUMPDEST PUSH2 0x9A6 CALLER DUP4 DUP4 PUSH2 0xF80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C6 JUMPI POP PUSH2 0x9C6 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x5AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9A6 DUP3 DUP3 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB25 DUP2 DUP6 PUSH1 0x0 PUSH2 0xB06 DUP8 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0xB0F DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD2A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCAD JUMPI PUSH2 0xCAD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCCA JUMPI PUSH2 0xCCA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD22 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC92 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD7B SWAP3 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDFA JUMPI PUSH2 0xDFA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEA5 SWAP1 DUP5 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEB9 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP PUSH2 0xDDD JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF26 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST CALLER PUSH2 0x109F DUP2 DUP8 DUP8 PUSH2 0x1096 DUP9 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x5AD DUP9 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x111D SWAP1 DUP5 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x117D DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x132C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C0 JUMPI PUSH2 0x11C0 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1215 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1250 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x124D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12FC JUMPI PUSH2 0x125C PUSH2 0x1DEF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1295 JUMPI POP PUSH2 0x1270 PUSH2 0x1E0B JUMP JUMPDEST DUP1 PUSH2 0x127B JUMPI POP PUSH2 0x1297 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1370 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13AB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13A8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13B7 JUMPI PUSH2 0x125C PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141F DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14A2 JUMPI PUSH2 0x14A2 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C2 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D9 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x147D JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1574 DUP5 PUSH2 0x13E7 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15AC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1614 PUSH2 0x1467 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x163C DUP3 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1649 DUP3 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1684 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x166D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1460 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F6 DUP9 DUP4 DUP10 ADD PUSH2 0x161E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1718 DUP9 DUP4 DUP10 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173B DUP8 DUP3 DUP9 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1768 DUP7 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1776 PUSH1 0x20 DUP8 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179E DUP10 DUP4 DUP11 ADD PUSH2 0x161E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C0 DUP10 DUP4 DUP11 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E3 DUP9 DUP3 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x183B DUP3 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1848 DUP3 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x188D JUMPI PUSH2 0x187E DUP7 PUSH2 0x13E7 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x186D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B0 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18CE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1934 PUSH1 0x40 DUP6 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1959 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x196E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1995 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 PUSH1 0x20 DUP5 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CD DUP7 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x19DB PUSH1 0x20 DUP8 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17E3 DUP9 DUP3 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1460 DUP3 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1ACE JUMPI PUSH2 0x1ACE PUSH2 0x1AA9 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AEA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x354 PUSH2 0x1AA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B4B JUMPI PUSH2 0x1B4B PUSH2 0x1AA9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x354 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B8C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B98 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC9 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x1BD7 DUP5 SLOAD PUSH2 0x1AD6 JUMP JUMPDEST DUP5 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BFA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C41 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1C22 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C5F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CCA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CDC DUP2 DUP6 PUSH2 0x18BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DA0 SWAP1 DUP4 ADD DUP7 PUSH2 0x18BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DB2 DUP2 DUP7 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DC6 DUP2 DUP6 PUSH2 0x15A2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1460 DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1E08 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E19 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1E48 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E60 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E7A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1E89 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x147D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F16 SWAP1 DUP4 ADD DUP5 PUSH2 0x15A2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE ADDRESS 0x25 NOT SWAP2 PUSH9 0xCD283C64998AF8932A CREATE 0xDE 0xB1 PUSH31 0x3CD7BCCC9B1A42BD7EF2D13C4F64736F6C6343000811003368747470733A2F 0x2F PUSH8 0x616D652E6578616D PUSH17 0x6C652F6170692F6974656D2F7B69647D2E PUSH11 0x736F6E0000000000000000 ",
							"sourceMap": "184:1844:0:-:0;;;269:73;;;;;;;;;;1126:64:2;;;;;;;;;;;;;;;;;1169:13;1177:4;1169:7;:13::i;:::-;-1:-1:-1;949:32:1;736:10:7;949:18:1;:32::i;:::-;184:1844:0;;8180:88:2;8247:4;:13;8254:6;8247:4;:13;:::i;:::-;;8180:88;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:10;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:10;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:10;;;2580:26;2531:89;-1:-1:-1;;1335:1:10;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:10;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:10;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:10;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:10:o;:::-;184:1844:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 4486,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burn_1129": {
									"entryPoint": 2707,
									"id": 1129,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 4561,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 4908,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1050": {
									"entryPoint": 3085,
									"id": 1050,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 3474,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 4192,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 3968,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 2695,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_351": {
									"entryPoint": 3886,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 1460,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 704,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@brun_246": {
									"entryPoint": 992,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatchWithNumber_91": {
									"entryPoint": 1811,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintBatch_205": {
									"entryPoint": 1231,
									"id": 205,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_280": {
									"entryPoint": null,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_308": {
									"entryPoint": 1757,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 1309,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 2474,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 2459,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_175": {
									"entryPoint": 938,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 858,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenSupply_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_331": {
									"entryPoint": 2543,
									"id": 331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithNumber_163": {
									"entryPoint": 2174,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@uri_440": {
									"entryPoint": 1083,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23254:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1243:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1267:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1272:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1300:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1327:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1211:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1400:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1422:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1438:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1444:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1434:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1434:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1453:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1449:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1449:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1404:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1533:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1535:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1535:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1476:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1473:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1512:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1509:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1470:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:62:10"
															},
															"nodeType": "YulIf",
															"src": "1467:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1575:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1564:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1372:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1380:4:10",
														"type": ""
													}
												],
												"src": "1343:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:394:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1716:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1718:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1718:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1718:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1688:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:30:10"
															},
															"nodeType": "YulIf",
															"src": "1682:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1761:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1751:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1799:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1819:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1827:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1815:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1815:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1836:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1832:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1811:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1811:29:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:40:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1779:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1779:69:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1857:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1866:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1888:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1896:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1881:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1941:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1953:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1922:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1918:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1936:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1915:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:25:10"
															},
															"nodeType": "YulIf",
															"src": "1912:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1983:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1991:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1998:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2003:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1966:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2042:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2030:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2030:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2051:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2026:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2058:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1662:5:10",
														"type": ""
													}
												],
												"src": "1597:469:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:371:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2197:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2206:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2209:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2199:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2199:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2172:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2164:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:32:10"
															},
															"nodeType": "YulIf",
															"src": "2161:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2222:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2249:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2236:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2226:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2302:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2311:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2314:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2304:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2304:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2274:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2271:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:10"
															},
															"nodeType": "YulIf",
															"src": "2268:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2352:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2331:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2407:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2416:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2419:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2409:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2409:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2390:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2382:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2382:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2397:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2378:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2378:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:35:10"
															},
															"nodeType": "YulIf",
															"src": "2368:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:84:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2481:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2485:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2503:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2490:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2490:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2508:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "2442:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:74:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2117:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2128:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2140:6:10",
														"type": ""
													}
												],
												"src": "2071:451:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2679:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2679:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:32:10"
															},
															"nodeType": "YulIf",
															"src": "2641:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2702:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2712:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2773:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2760:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2801:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2839:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2811:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2581:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2592:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2604:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2612:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2620:6:10",
														"type": ""
													}
												],
												"src": "2527:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2924:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2970:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2982:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2972:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2945:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:32:10"
															},
															"nodeType": "YulIf",
															"src": "2934:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2995:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3018:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3005:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2890:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2901:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2913:6:10",
														"type": ""
													}
												],
												"src": "2854:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:373:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3119:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3113:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3103:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3146:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3162:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3171:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3166:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3233:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3247:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3257:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3251:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "3289:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3294:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3285:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3285:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3298:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3281:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3281:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "3317:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3324:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3313:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3313:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3328:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3309:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3309:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3303:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3274:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3274:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3192:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3189:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3203:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3205:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3214:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3217:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3210:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3210:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3205:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3185:3:10",
																"statements": []
															},
															"src": "3181:162:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3367:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3372:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3363:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3363:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3381:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:27:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3388:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3427:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3435:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3423:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3423:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3444:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3440:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3440:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3419:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3419:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3451:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3406:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3066:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3073:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3081:3:10",
														"type": ""
													}
												],
												"src": "3039:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3588:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3605:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3598:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3598:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3654:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3666:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3677:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3662:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3662:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3636:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3628:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3557:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3568:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3579:4:10",
														"type": ""
													}
												],
												"src": "3467:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3761:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3805:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3807:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3807:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3807:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3777:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:30:10"
															},
															"nodeType": "YulIf",
															"src": "3771:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3836:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3852:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3864:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3844:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3741:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3752:4:10",
														"type": ""
													}
												],
												"src": "3692:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3944:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3993:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4002:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4005:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3995:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3995:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3995:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3972:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3980:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3968:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3968:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3987:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3964:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3964:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3957:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:35:10"
															},
															"nodeType": "YulIf",
															"src": "3954:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4018:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4028:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4022:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4057:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4067:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4061:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4080:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4130:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4090:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4084:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4142:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4162:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4156:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4146:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4194:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4202:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4174:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4174:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4214:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4225:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4218:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4247:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4267:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4278:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4286:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4274:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4267:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4298:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4320:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4332:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4335:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4341:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4312:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4302:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4372:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4381:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4384:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4374:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4374:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4374:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4359:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4367:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4356:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:15:10"
															},
															"nodeType": "YulIf",
															"src": "4353:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4397:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4412:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4420:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4401:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4488:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4509:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4527:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4514:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4514:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4502:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4502:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4502:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4545:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4556:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4561:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4552:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4545:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4443:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4448:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4440:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4456:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4458:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4469:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4474:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4465:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4465:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4458:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4436:3:10",
																"statements": []
															},
															"src": "4432:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4583:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4592:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4583:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3918:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3926:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3934:5:10",
														"type": ""
													}
												],
												"src": "3880:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4661:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4710:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4719:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4712:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4689:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4697:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4685:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4685:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4704:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:35:10"
															},
															"nodeType": "YulIf",
															"src": "4671:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4735:89:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4783:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4791:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4811:6:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4798:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4798:20:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4820:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4744:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:80:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4735:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4635:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4643:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4651:5:10",
														"type": ""
													}
												],
												"src": "4609:221:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5015:688:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5062:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5071:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5074:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5064:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5064:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5064:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5036:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5045:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5032:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5032:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5028:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:33:10"
															},
															"nodeType": "YulIf",
															"src": "5025:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5087:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5116:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5097:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5135:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5166:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5162:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5149:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5139:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5190:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5200:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5194:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5245:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5254:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5257:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5247:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5247:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5247:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5233:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5241:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:14:10"
															},
															"nodeType": "YulIf",
															"src": "5227:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5270:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5324:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5333:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5280:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:61:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5350:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5383:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5394:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5379:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5379:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5366:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5354:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5427:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5436:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5439:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5429:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5429:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5429:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5413:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5423:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5410:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:16:10"
															},
															"nodeType": "YulIf",
															"src": "5407:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5452:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5495:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5506:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5491:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5491:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5517:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5462:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:63:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5534:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5550:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5538:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5611:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5620:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5623:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5613:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5613:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5613:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5597:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5607:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:16:10"
															},
															"nodeType": "YulIf",
															"src": "5591:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5636:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5667:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5678:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5646:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:51:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4957:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4968:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4980:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4988:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4996:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5004:6:10",
														"type": ""
													}
												],
												"src": "4835:868:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5952:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5961:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5964:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5954:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5954:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5954:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5926:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5935:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5922:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5947:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:33:10"
															},
															"nodeType": "YulIf",
															"src": "5915:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5977:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6006:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5987:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5987:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6069:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6054:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6035:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6082:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6096:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6096:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6086:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6137:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6147:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6141:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6192:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6204:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6194:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6194:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6194:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6180:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6188:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6177:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:14:10"
															},
															"nodeType": "YulIf",
															"src": "6174:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6217:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6271:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6280:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6227:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6217:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6297:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6330:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6341:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6313:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6301:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6374:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6383:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6386:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6376:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6376:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6376:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6360:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6370:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:16:10"
															},
															"nodeType": "YulIf",
															"src": "6354:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6399:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6442:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6453:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6438:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6464:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6409:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6481:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6514:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6525:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6497:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6485:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6559:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6568:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6571:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6561:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6561:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6561:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6545:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6555:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6542:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6542:16:10"
															},
															"nodeType": "YulIf",
															"src": "6539:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6584:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6626:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6637:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6594:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5839:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5850:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5862:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5870:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5878:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5886:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5894:6:10",
														"type": ""
													}
												],
												"src": "5708:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6793:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6839:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6848:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6851:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6841:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6841:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6841:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6814:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6823:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6810:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6806:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6806:32:10"
															},
															"nodeType": "YulIf",
															"src": "6803:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6864:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6891:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6878:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6878:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6868:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6910:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6920:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6914:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6965:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6974:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6977:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6967:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6967:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6967:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6953:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6961:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6950:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:14:10"
															},
															"nodeType": "YulIf",
															"src": "6947:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6990:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7004:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7015:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6994:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7070:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7079:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7082:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7072:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7072:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7072:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "7049:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7053:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7045:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7045:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7041:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:35:10"
															},
															"nodeType": "YulIf",
															"src": "7031:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7095:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7118:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7105:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "7099:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7130:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7140:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "7134:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7153:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7203:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7163:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "7157:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7215:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7235:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7229:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7229:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "7219:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7267:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "7275:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7247:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7247:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7287:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7298:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7291:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7320:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7328:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7313:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7340:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7351:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7359:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7371:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "7393:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7401:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "7404:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7397:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7397:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7410:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7385:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7375:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7447:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7447:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7428:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7436:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7425:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:19:10"
															},
															"nodeType": "YulIf",
															"src": "7422:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7485:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "7489:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7474:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7557:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7578:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7602:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "7583:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7583:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7571:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7571:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7571:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7620:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7631:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7636:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7627:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7627:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7620:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7512:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7517:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7509:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7509:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7525:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7527:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7538:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "7543:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7534:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7534:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7527:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7505:3:10",
																"statements": []
															},
															"src": "7501:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7658:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7668:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7683:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7716:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "7727:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7712:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7699:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7699:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7687:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7760:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7769:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7772:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7762:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7762:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7762:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7746:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7756:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7743:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:16:10"
															},
															"nodeType": "YulIf",
															"src": "7740:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7785:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7839:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7850:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7795:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6751:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6762:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6774:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6782:6:10",
														"type": ""
													}
												],
												"src": "6656:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7930:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7940:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7960:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7954:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7954:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7944:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7982:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7987:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7975:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8003:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8013:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8007:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8026:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8037:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8042:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8026:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8054:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8072:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8079:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8068:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8068:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8058:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8091:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8100:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8095:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8159:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8180:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8191:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8185:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8185:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8173:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8173:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8173:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8212:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8223:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8228:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8219:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8219:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8212:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8244:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8258:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8266:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8254:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8254:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8244:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8121:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8124:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8132:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8134:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8143:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8146:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8139:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8139:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8134:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8114:3:10",
																"statements": []
															},
															"src": "8110:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8288:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8295:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8288:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7907:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7914:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7922:3:10",
														"type": ""
													}
												],
												"src": "7869:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8460:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8477:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8488:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8470:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8500:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8549:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8545:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8508:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8500:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8429:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8440:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8451:4:10",
														"type": ""
													}
												],
												"src": "8309:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8676:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8686:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8698:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8709:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8694:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8694:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8686:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8728:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8743:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8759:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8764:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8755:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8755:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8768:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8751:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8751:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8739:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8739:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8721:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8645:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8656:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8667:4:10",
														"type": ""
													}
												],
												"src": "8575:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8887:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8933:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8942:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8945:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8935:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8935:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8935:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8908:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8917:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8904:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8904:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8900:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:32:10"
															},
															"nodeType": "YulIf",
															"src": "8897:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8958:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8981:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8968:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8958:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9000:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9010:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9000:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9051:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9084:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9095:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9080:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9061:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9061:38:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9051:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8837:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8848:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8860:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8868:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8876:6:10",
														"type": ""
													}
												],
												"src": "8783:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9194:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9240:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9249:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9252:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9242:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9242:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9242:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9215:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9224:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9211:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9236:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9207:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:32:10"
															},
															"nodeType": "YulIf",
															"src": "9204:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9265:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9294:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9275:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9313:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9343:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9354:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9339:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9326:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9317:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9411:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9420:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9423:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9413:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9413:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9413:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9380:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9401:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9394:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9394:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9387:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9387:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9377:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9377:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9370:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:40:10"
															},
															"nodeType": "YulIf",
															"src": "9367:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9436:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9446:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9436:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9152:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9163:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9175:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9183:6:10",
														"type": ""
													}
												],
												"src": "9110:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9595:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9604:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9607:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9597:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9597:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9597:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9570:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9591:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9562:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9562:32:10"
															},
															"nodeType": "YulIf",
															"src": "9559:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9620:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9649:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9630:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9668:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9701:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9712:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9697:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9697:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9678:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9507:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9518:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9530:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9538:6:10",
														"type": ""
													}
												],
												"src": "9462:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9874:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9921:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9930:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9933:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9923:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9923:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9923:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9895:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9904:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9891:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9916:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9887:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:33:10"
															},
															"nodeType": "YulIf",
															"src": "9884:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9946:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9975:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9956:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9956:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9946:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9994:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10027:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10038:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10023:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10004:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10004:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9994:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10051:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10089:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10074:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10061:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10051:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10102:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10129:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10140:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10125:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10112:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10102:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10153:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10184:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10195:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10180:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10167:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10167:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10157:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10243:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10252:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10255:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10245:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10245:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10245:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10215:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10223:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10212:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:30:10"
															},
															"nodeType": "YulIf",
															"src": "10209:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10268:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10299:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10310:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10295:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10295:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10319:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10278:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9808:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9819:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9831:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9839:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9847:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9855:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9863:6:10",
														"type": ""
													}
												],
												"src": "9727:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10408:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10454:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10463:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10466:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10456:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10456:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10456:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10429:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10438:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10425:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10425:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10450:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10421:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:32:10"
															},
															"nodeType": "YulIf",
															"src": "10418:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10479:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10508:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10489:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10489:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10374:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10385:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10397:6:10",
														"type": ""
													}
												],
												"src": "10338:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10703:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10720:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10731:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10754:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10765:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10750:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10770:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10743:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10743:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10793:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10804:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10789:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10809:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10782:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10782:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10782:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10864:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10875:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10860:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10880:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10853:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10853:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10903:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10915:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10926:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10911:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10903:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10680:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10694:4:10",
														"type": ""
													}
												],
												"src": "10529:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11115:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11132:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11143:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11125:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11125:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11166:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11177:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11162:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11182:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11155:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11155:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11216:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11201:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11221:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11194:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11194:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11265:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11277:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11265:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11092:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11106:4:10",
														"type": ""
													}
												],
												"src": "10941:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11476:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11493:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11504:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11486:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11486:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11486:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11538:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11523:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11543:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11516:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11516:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11577:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11562:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11582:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11555:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11555:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11555:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11637:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11648:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11633:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11633:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11653:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11626:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11674:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11686:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11697:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11682:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11674:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11453:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11467:4:10",
														"type": ""
													}
												],
												"src": "11302:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11744:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11768:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11773:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11764:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11754:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11801:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11804:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11794:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11825:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11828:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11818:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11818:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11818:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11712:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11891:89:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11918:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11920:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11920:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11920:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11911:5:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11904:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11904:13:10"
															},
															"nodeType": "YulIf",
															"src": "11901:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11949:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11960:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11971:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11967:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11956:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11956:18:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11949:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11873:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11883:3:10",
														"type": ""
													}
												],
												"src": "11844:136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12040:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12050:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12067:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12060:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12060:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12050:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12081:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12111:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12117:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12085:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12158:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12160:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12174:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12182:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12170:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12170:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12160:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12138:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12131:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12131:26:10"
															},
															"nodeType": "YulIf",
															"src": "12128:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12248:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12269:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12276:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12281:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12272:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12272:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12262:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12262:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12262:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12313:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12316:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12306:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12306:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12344:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12334:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12334:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12204:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12227:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12235:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12224:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12224:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12201:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12201:38:10"
															},
															"nodeType": "YulIf",
															"src": "12198:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12020:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12029:6:10",
														"type": ""
													}
												],
												"src": "11985:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12418:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12428:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12439:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12442:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12435:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12428:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12467:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12469:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12469:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12469:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12459:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12462:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12456:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12456:10:10"
															},
															"nodeType": "YulIf",
															"src": "12453:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12401:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12404:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12410:3:10",
														"type": ""
													}
												],
												"src": "12370:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12674:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12691:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12702:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12684:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12736:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12721:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12741:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12714:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12714:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12714:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12764:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12775:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12760:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12780:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12753:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12753:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12753:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12846:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12831:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12851:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12824:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12824:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12881:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12893:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12904:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12889:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12889:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12881:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12651:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12665:4:10",
														"type": ""
													}
												],
												"src": "12500:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13093:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13110:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13121:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13103:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13144:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13155:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13140:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13160:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13133:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13133:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13133:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13183:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13194:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13179:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13199:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13172:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13254:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13265:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13250:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13270:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13243:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13243:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13243:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13291:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13303:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13314:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13299:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13299:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13291:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13070:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13084:4:10",
														"type": ""
													}
												],
												"src": "12919:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13361:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13378:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13385:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13390:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13381:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13381:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13371:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13371:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13418:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13421:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13411:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13411:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13411:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13442:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13445:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13329:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13508:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13539:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13541:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13541:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13541:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13524:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13531:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13521:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13521:17:10"
															},
															"nodeType": "YulIf",
															"src": "13518:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13570:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13581:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13588:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13577:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13570:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13490:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13500:3:10",
														"type": ""
													}
												],
												"src": "13461:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13650:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13660:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13672:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13675:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13668:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13660:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13701:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13703:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13703:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13703:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13692:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13698:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13689:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13689:11:10"
															},
															"nodeType": "YulIf",
															"src": "13686:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13632:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13635:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13641:4:10",
														"type": ""
													}
												],
												"src": "13601:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13908:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13925:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13936:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13918:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13918:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13959:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13970:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13955:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13975:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13948:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13998:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14009:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13994:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14014:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13987:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13987:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14069:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14080:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14065:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14065:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14085:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14058:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14058:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14058:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14103:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14115:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14126:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14111:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14111:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14103:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13885:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13899:4:10",
														"type": ""
													}
												],
												"src": "13734:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14197:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14214:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14217:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14207:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14207:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14230:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14248:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14251:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "14238:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14230:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14180:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14188:4:10",
														"type": ""
													}
												],
												"src": "14141:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14348:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14381:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14395:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14405:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "14399:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14426:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "14430:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14419:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14419:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14419:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14449:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14471:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14475:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "14461:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14461:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "14453:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14493:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "14516:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14526:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "14533:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14545:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14529:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14529:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "14522:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14522:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14512:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14512:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "14497:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14587:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14589:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14604:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "14589:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "14569:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "14566:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14566:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "14563:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14623:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "14637:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14647:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "14654:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14659:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14650:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14650:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "14643:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14643:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14633:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14633:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "14627:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14677:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "14690:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "14681:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14775:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "14784:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "14791:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "14777:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14777:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14777:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "14725:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "14732:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "14722:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14722:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "14736:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14738:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "14751:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14758:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14747:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14747:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "14738:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "14718:3:10",
																			"statements": []
																		},
																		"src": "14714:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "14364:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14369:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14361:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14361:11:10"
															},
															"nodeType": "YulIf",
															"src": "14358:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "14320:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "14327:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "14332:10:10",
														"type": ""
													}
												],
												"src": "14267:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14902:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14912:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "14927:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14945:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "14948:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14941:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14941:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14958:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "14954:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14954:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "14937:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14937:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14933:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14933:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14923:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14923:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14969:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "14972:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14965:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14920:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "14912:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14879:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "14885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "14893:4:10",
														"type": ""
													}
												],
												"src": "14817:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15084:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15094:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15114:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15108:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "15098:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15161:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15163:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15163:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15163:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15133:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15141:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15130:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:30:10"
															},
															"nodeType": "YulIf",
															"src": "15127:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "15236:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "15274:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "15268:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15268:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "15242:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15242:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15282:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "15192:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15192:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15298:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15315:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "15302:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15325:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15344:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "15329:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15357:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "15370:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "15357:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15427:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15441:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "15460:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15472:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "15468:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15468:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "15456:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15456:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "15445:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15489:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "15533:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "15503:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15503:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "15493:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15551:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15560:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "15555:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15638:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15663:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "15681:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "15686:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "15677:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "15677:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "15671:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15671:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "15656:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15656:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15656:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15715:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15729:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15737:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15725:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15725:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "15715:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15756:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "15773:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "15784:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15769:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15769:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "15756:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15585:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15588:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15582:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15582:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "15597:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "15599:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "15608:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "15611:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15604:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15604:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15599:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "15578:3:10",
																					"statements": []
																				},
																				"src": "15574:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15858:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "15876:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "15903:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "15908:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "15899:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15899:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "15893:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15893:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "15880:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15943:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "15955:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "15982:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "15985:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "15978:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "15978:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "15994:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "15974:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "15974:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "16004:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "16000:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "16000:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "15970:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "15970:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "15966:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "15966:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "15951:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15951:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "15936:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15936:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15936:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15829:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "15838:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15826:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15826:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "15823:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "16044:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "16058:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "16061:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "16054:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "16054:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "16070:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16050:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16050:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "16037:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16037:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16037:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15420:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15425:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16100:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "16114:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "16118:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16163:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "16181:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "16200:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "16205:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "16196:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "16196:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "16190:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16190:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "16181:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "16144:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "16141:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "16250:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "16309:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "16316:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "16256:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16256:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "16243:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16243:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16243:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16092:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15400:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15408:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15397:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15397:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "15390:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "15069:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15075:3:10",
														"type": ""
													}
												],
												"src": "14988:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16519:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16536:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16547:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16529:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16581:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16566:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16586:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16559:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16559:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16559:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16609:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16620:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16605:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16625:34:10",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16598:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16598:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16680:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16691:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16676:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16676:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16696:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16669:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16669:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16669:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16711:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16723:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16734:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16719:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16719:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16711:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16496:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16510:4:10",
														"type": ""
													}
												],
												"src": "16345:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16923:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16940:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16951:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16933:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16933:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16933:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16974:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16985:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16970:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16970:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16990:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16963:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16963:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16963:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17013:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17024:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17009:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17029:34:10",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17002:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17002:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17002:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17084:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17095:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17080:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17080:18:10"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17100:6:10",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17073:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17073:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17116:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17128:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17139:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17124:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17124:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17116:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16900:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16914:4:10",
														"type": ""
													}
												],
												"src": "16749:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17283:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17293:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17305:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17316:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17301:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17293:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17335:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17346:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17328:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17328:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17328:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17373:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17384:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17369:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17389:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17362:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17362:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17244:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17255:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17263:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17274:4:10",
														"type": ""
													}
												],
												"src": "17154:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17581:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17598:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17609:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17591:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17591:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17632:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17643:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17628:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17628:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17648:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17621:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17621:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17621:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17671:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17682:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17667:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17667:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17687:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17660:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17660:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17742:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17753:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17738:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17758:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17731:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17731:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17731:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17771:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17783:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17794:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17779:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17779:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17771:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17558:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17572:4:10",
														"type": ""
													}
												],
												"src": "17407:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17983:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18000:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18011:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17993:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17993:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17993:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18034:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18045:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18030:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18030:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18050:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18023:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18023:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18023:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18073:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18084:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18069:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18089:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18062:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18062:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18062:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18144:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18155:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18140:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18160:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18133:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18133:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18133:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18180:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18192:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18203:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18188:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18188:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18180:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17960:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17974:4:10",
														"type": ""
													}
												],
												"src": "17809:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18447:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18464:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18475:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18457:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18457:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18457:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18487:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18530:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18542:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18553:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18538:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18538:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18501:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18501:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "18491:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18577:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18588:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18573:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "18597:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18605:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18593:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18566:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18566:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18625:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18662:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "18670:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18633:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18633:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18625:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18408:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18419:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18427:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18438:4:10",
														"type": ""
													}
												],
												"src": "18218:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18862:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18890:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18872:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18872:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18872:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18913:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18924:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18909:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18929:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18902:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18902:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18902:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18952:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18963:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18948:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18948:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18968:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18941:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18941:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18941:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19023:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19034:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19019:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19039:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19012:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19012:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19012:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19056:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19068:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19079:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19064:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19064:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19056:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18839:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18853:4:10",
														"type": ""
													}
												],
												"src": "18688:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19268:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19285:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19296:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19278:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19278:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19319:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19330:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19315:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19315:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19335:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19308:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19308:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19308:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19358:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19369:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19354:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19354:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19374:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19347:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19347:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19347:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19429:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19440:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19425:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19425:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19445:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19418:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19418:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19418:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19467:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19479:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19490:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19475:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19475:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19467:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19245:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19259:4:10",
														"type": ""
													}
												],
												"src": "19094:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19679:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19696:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19707:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19689:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19689:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19689:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19730:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19741:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19726:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19746:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19719:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19719:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19769:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19780:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19765:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19765:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19785:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19758:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19758:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19758:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19840:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19851:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19836:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19836:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19856:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19829:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19829:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19829:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19877:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19889:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19900:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19885:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19885:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19877:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19656:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19670:4:10",
														"type": ""
													}
												],
												"src": "19505:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20246:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20256:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20274:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20279:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20270:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20270:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20283:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20266:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20266:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20260:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20301:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20316:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20324:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20312:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20294:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20294:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20359:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20344:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "20368:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20376:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20364:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20337:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20337:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20400:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20411:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20396:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20416:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20389:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20389:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20429:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20472:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20484:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20495:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20480:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20480:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20443:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20443:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "20433:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20520:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20531:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20516:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "20540:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20548:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20536:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20536:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20509:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20509:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20568:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20611:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "20619:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "20582:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20582:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "20572:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20657:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20642:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "20667:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20675:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20663:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20635:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20635:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20695:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "20721:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "20729:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "20703:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20703:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20695:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20183:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20194:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20202:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20210:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20218:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20226:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20237:4:10",
														"type": ""
													}
												],
												"src": "19915:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20827:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20873:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20882:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20885:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20875:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20875:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20875:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20848:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20857:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20844:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20844:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20869:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20840:32:10"
															},
															"nodeType": "YulIf",
															"src": "20837:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20898:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20917:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20911:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20911:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "20902:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20960:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "20936:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20936:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20936:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20975:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20985:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "20975:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20816:6:10",
														"type": ""
													}
												],
												"src": "20747:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21044:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21089:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21118:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21121:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21124:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "21103:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21103:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21103:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "21139:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21150:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "21161:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21155:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21155:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "21146:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21146:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "21139:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "21060:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21060:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21078:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21057:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21057:23:10"
															},
															"nodeType": "YulIf",
															"src": "21054:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "21036:3:10",
														"type": ""
													}
												],
												"src": "21001:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21232:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21272:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21274:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "21248:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21248:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21266:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21245:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21245:26:10"
															},
															"nodeType": "YulIf",
															"src": "21242:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21290:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21302:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21302:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "21294:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21320:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21334:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "21330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21330:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "21324:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21360:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21366:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "21373:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21373:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "21391:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21369:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "21345:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21345:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21345:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21404:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21424:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21418:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21418:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "21408:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21438:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "21448:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21448:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "21442:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21473:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21483:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "21477:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21559:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21561:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "21519:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "21527:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "21516:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21516:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21539:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21547:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21535:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21535:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "21554:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "21532:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21532:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21513:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21513:45:10"
															},
															"nodeType": "YulIf",
															"src": "21510:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21577:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21592:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21598:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21588:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "21581:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21614:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "21634:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21628:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21628:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21618:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21665:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21667:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21653:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "21661:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21650:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21650:14:10"
															},
															"nodeType": "YulIf",
															"src": "21647:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21756:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "21758:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "21697:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "21702:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21693:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21693:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21711:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21689:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21689:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "21726:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "21732:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21732:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21722:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21722:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "21751:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21718:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21718:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21686:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21686:69:10"
															},
															"nodeType": "YulIf",
															"src": "21683:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21794:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21808:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "21816:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21804:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21804:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21825:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21800:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21800:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "21774:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21774:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21774:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21840:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "21847:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21840:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21224:3:10",
														"type": ""
													}
												],
												"src": "21185:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22035:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22052:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22063:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22045:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22045:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22045:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22086:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22097:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22082:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22102:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22075:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22075:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22136:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22121:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22141:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22114:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22114:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22196:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22207:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22192:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22212:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22185:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22185:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22244:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22256:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22267:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22252:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22244:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22012:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22026:4:10",
														"type": ""
													}
												],
												"src": "21861:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22456:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22473:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22484:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22466:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22466:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22507:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22518:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22503:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22523:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22496:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22496:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22496:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22546:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22557:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22542:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22562:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22535:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22535:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22617:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22628:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22613:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22613:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22633:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22606:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22606:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22606:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22653:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22665:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22676:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22661:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22661:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22653:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22433:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22447:4:10",
														"type": ""
													}
												],
												"src": "22282:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22922:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22932:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22950:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22955:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "22946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22946:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22959:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22942:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22942:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "22936:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22977:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22992:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "23000:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22988:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22988:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22970:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22970:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22970:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23024:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23035:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23020:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23020:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "23044:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "23052:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23040:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23040:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23013:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23013:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23013:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23076:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23087:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23072:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23072:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23092:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23065:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23065:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23119:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23130:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23115:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23135:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23108:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23108:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23173:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23158:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23179:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23151:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23151:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23151:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23192:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "23218:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23230:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23241:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23226:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23226:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "23200:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23200:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23192:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22859:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "22870:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22878:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22886:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22894:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22902:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22913:4:10",
														"type": ""
													}
												],
												"src": "22691:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9416308E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9416308E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x71AC14E6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x7824407F EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x92F2DBF EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x176 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1747 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x176 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH2 0x12D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x1908 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x176 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x153 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x38B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x354 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x354 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0xA87 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3FC JUMPI POP PUSH2 0x3FC DUP4 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x423 DUP4 DUP4 DUP4 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x44A SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x498 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x505 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC0D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x4 SLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x539 JUMPI POP PUSH2 0x539 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x5AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD92 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x634 JUMPI PUSH2 0x634 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6A8 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x69B JUMPI PUSH2 0x69B PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI PUSH2 0x6BA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6CE DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP PUSH2 0x663 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x711 PUSH1 0x0 PUSH2 0xF2E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x757 JUMPI PUSH2 0x757 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x780 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x79D JUMPI PUSH2 0x79D PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x7DB SWAP1 DUP6 PUSH2 0x1B10 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI DUP1 DUP4 PUSH1 0x4 SLOAD DUP4 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x802 JUMPI PUSH2 0x802 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 PUSH1 0x4 SLOAD DUP4 PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x82F PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x844 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP PUSH2 0x868 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0D JUMP JUMPDEST DUP3 PUSH1 0x4 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x898 JUMPI PUSH2 0x898 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x907 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 JUMPDEST PUSH2 0x916 DUP7 DUP7 PUSH2 0x1B10 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x97E JUMPI DUP1 DUP4 PUSH2 0x929 DUP9 DUP4 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x939 JUMPI PUSH2 0x939 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x951 DUP9 DUP5 PUSH2 0x1B52 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x961 JUMPI PUSH2 0x961 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x976 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90C JUMP JUMPDEST POP PUSH2 0x5AD CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x51D JUMP JUMPDEST PUSH2 0x9A6 CALLER DUP4 DUP4 PUSH2 0xF80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x9C6 JUMPI POP PUSH2 0x9C6 DUP6 CALLER PUSH2 0x26C JUMP JUMPDEST PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH2 0x5AD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH2 0x3DD DUP2 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9A6 DUP3 DUP3 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST CALLER PUSH2 0xB25 DUP2 DUP6 PUSH1 0x0 PUSH2 0xB06 DUP8 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0xB0F DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD2A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCAD JUMPI PUSH2 0xCAD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCCA JUMPI PUSH2 0xCCA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xD22 DUP2 PUSH2 0x1B39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC92 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD7B SWAP3 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x5AD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDFA JUMPI PUSH2 0xDFA PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE18 JUMPI PUSH2 0xE18 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEA5 SWAP1 DUP5 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xEB9 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST SWAP1 POP PUSH2 0xDDD JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF26 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11D1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST CALLER PUSH2 0x109F DUP2 DUP8 DUP8 PUSH2 0x1096 DUP9 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x5AD DUP9 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x111D SWAP1 DUP5 SWAP1 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x117D DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x132C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11C0 JUMPI PUSH2 0x11C0 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1215 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1250 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x124D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12FC JUMPI PUSH2 0x125C PUSH2 0x1DEF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1295 JUMPI POP PUSH2 0x1270 PUSH2 0x1E0B JUMP JUMPDEST DUP1 PUSH2 0x127B JUMPI POP PUSH2 0x1297 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1370 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13AB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13A8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1DD2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13B7 JUMPI PUSH2 0x125C PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141F DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1460 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14A2 JUMPI PUSH2 0x14A2 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x14C2 JUMPI PUSH2 0x14C2 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D9 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x147D JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x154E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1574 DUP5 PUSH2 0x13E7 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15AC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1614 PUSH2 0x1467 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x163C DUP3 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1649 DUP3 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1684 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x166D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1460 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F6 DUP9 DUP4 DUP10 ADD PUSH2 0x161E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1718 DUP9 DUP4 DUP10 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173B DUP8 DUP3 DUP9 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1768 DUP7 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x1776 PUSH1 0x20 DUP8 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179E DUP10 DUP4 DUP11 ADD PUSH2 0x161E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C0 DUP10 DUP4 DUP11 ADD PUSH2 0x161E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E3 DUP9 DUP3 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x183B DUP3 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1848 DUP3 DUP3 PUSH2 0x147D JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x188D JUMPI PUSH2 0x187E DUP7 PUSH2 0x13E7 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x186D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B0 DUP6 DUP3 DUP7 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18CE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1934 PUSH1 0x40 DUP6 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1959 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x196E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1995 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 PUSH1 0x20 DUP5 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CD DUP7 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 POP PUSH2 0x19DB PUSH1 0x20 DUP8 ADD PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17E3 DUP9 DUP3 DUP10 ADD PUSH2 0x168F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1460 DUP3 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1ACE JUMPI PUSH2 0x1ACE PUSH2 0x1AA9 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1AEA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x354 PUSH2 0x1AA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B4B JUMPI PUSH2 0x1B4B PUSH2 0x1AA9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x354 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B8C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B98 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC9 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x1BDD DUP2 PUSH2 0x1BD7 DUP5 SLOAD PUSH2 0x1AD6 JUMP JUMPDEST DUP5 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BFA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C41 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1C22 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C5F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CCA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CDC DUP2 DUP6 PUSH2 0x18BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DA0 SWAP1 DUP4 ADD DUP7 PUSH2 0x18BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DB2 DUP2 DUP7 PUSH2 0x18BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DC6 DUP2 DUP6 PUSH2 0x15A2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1460 DUP2 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1E08 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1E19 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1E48 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E60 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E7A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1E89 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x147D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F16 SWAP1 DUP4 ADD DUP5 PUSH2 0x15A2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE ADDRESS 0x25 NOT SWAP2 PUSH9 0xCD283C64998AF8932A CREATE 0xDE 0xB1 PUSH31 0x3CD7BCCC9B1A42BD7EF2D13C4F64736F6C6343000811003300000000000000 ",
							"sourceMap": "184:1844:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1262:310:2;1019:187:10;1250:88:0;;;;;;:::i;:::-;;:::i;:::-;;1692:333;;;;;;:::i;:::-;;:::i;1983:105:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1594:90:0:-;1665:11;;1594:90;;1346:240;;;;;;:::i;:::-;;:::i;4178:442:2:-;;;;;;:::i;:::-;;:::i;2636:524::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1721:103:1:-;;;:::i;350:461:0:-;;;;;;:::i;:::-;;:::i;232:26::-;;;;;;1070:87:1;1143:6;;1070:87;;-1:-1:-1;;;;;1143:6:1;;;8721:51:10;;8709:2;8694:18;1070:87:1;8575:203:10;819:421:0;;;;;;:::i;:::-;;:::i;3233:155:2:-;;;;;;:::i;:::-;;:::i;3460:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;1979:201:1:-;;;;;;:::i;:::-;;:::i;2239:231:2:-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;10731:2:10;2345:77:2;;;10713:21:10;10770:2;10750:18;;;10743:30;10809:34;10789:18;;;10782:62;-1:-1:-1;;;10860:18:10;;;10853:41;10911:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;2239:231;;;;;:::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;854:157:8;1250:88:0;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1315:15:0::1;1323:6;1315:7;:15::i;:::-;1250:88:::0;:::o;1692:333::-;-1:-1:-1;;;;;1820:23:0;;736:10:7;1820:23:0;;:66;;-1:-1:-1;1847:39:0;1864:7;736:10:7;3460:168:2;:::i;1847:39:0:-;1798:157;;;;-1:-1:-1;;;1798:157:0;;;;;;;:::i;:::-;1968:25;1974:7;1983:2;1987:5;1968;:25::i;:::-;2006:11;;2004:13;;;;;:::i;:::-;;;;-1:-1:-1;;;;1692:333:0:o;1983:105:2:-;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;1346:240:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1495:34:0::1;1506:2;1510:3;1515:7;1524:4;1495:10;:34::i;:::-;1568:3;:10;1554:11;;:24;;;;:::i;:::-;1540:11;:38:::0;-1:-1:-1;;;;1346:240:0:o;4178:442:2:-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;12702:2:10;4389:160:2;;;12684:21:10;12741:2;12721:18;;;12714:30;12780:34;12760:18;;;12753:62;-1:-1:-1;;;12831:18:10;;;12824:48;12889:19;;4389:160:2;12500:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;13121:2:10;2826:83:2;;;13103:21:10;13160:2;13140:18;;;13133:30;13199:34;13179:18;;;13172:62;-1:-1:-1;;;13250:18:10;;;13243:39;13299:19;;2826:83:2;12919:405:10;2826:83:2;2922:30;2969:8;:15;-1:-1:-1;;;;;2955:30:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;1721:103:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;350:461:0:-;1143:6:1;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;425:20:0::1;462:9;-1:-1:-1::0;;;;;448:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;448:24:0::1;;425:47;;483:24;524:9;-1:-1:-1::0;;;;;510:24:0::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;510:24:0::1;-1:-1:-1::0;562:11:0::1;::::0;483:51;;-1:-1:-1;545:160:0::1;592:11;::::0;580:23:::1;::::0;:9;:23:::1;:::i;:::-;575:1;:29;545:160;;;649:1;626:3;634:11;;630:1;:15;;;;:::i;:::-;626:20;;;;;;;;:::i;:::-;;;;;;:24;;;::::0;::::1;692:1;665:7;677:11;;673:1;:15;;;;:::i;:::-;665:24;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:28;606:3;::::1;::::0;::::1;:::i;:::-;;;;545:160;;;;715:40;726:10;738:3;743:7;715:40;;;;;;;;;;;::::0;:10:::1;:40::i;:::-;794:9;780:11;;:23;;;;:::i;:::-;766:11;:37:::0;-1:-1:-1;;;350:461:0:o;819:421::-;911:20;948:9;-1:-1:-1;;;;;934:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:24:0;;911:47;;969:24;1010:9;-1:-1:-1;;;;;996:24:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;996:24:0;-1:-1:-1;969:51:0;-1:-1:-1;1048:5:0;1031:136;1060:17;1072:5;1060:9;:17;:::i;:::-;1055:1;:23;1031:136;;;1117:1;1100:3;1104:9;1108:5;1117:1;1104:9;:::i;:::-;1100:14;;;;;;;;:::i;:::-;;;;;;;;;;:18;1154:1;1133:7;1141:9;1145:5;1141:1;:9;:::i;:::-;1133:18;;;;;;;;:::i;:::-;;;;;;;;;;:22;1080:3;;;;:::i;:::-;;;;1031:136;;;;1177:55;1199:10;1211:2;1215:3;1220:7;1177:55;;;;;;;;;;;;:21;:55::i;3233:155:2:-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;;;;;;:::i;:::-;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;1979:201:1:-;1143:6;;-1:-1:-1;;;;;1143:6:1;736:10:7;1290:23:1;1282:68;;;;-1:-1:-1;;;1282:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2068:22:1;::::1;2060:73;;;::::0;-1:-1:-1;;;2060:73:1;;13936:2:10;2060:73:1::1;::::0;::::1;13918:21:10::0;13975:2;13955:18;;;13948:30;14014:34;13994:18;;;13987:62;-1:-1:-1;;;14065:18:10;;;14058:36;14111:19;;2060:73:1::1;13734:402:10::0;2060:73:1::1;2144:28;2163:8;2144:18;:28::i;8180:88:2:-:0;8247:4;:13;8254:6;8247:4;:13;:::i;10564:648::-;-1:-1:-1;;;;;10691:18:2;;10683:66;;;;-1:-1:-1;;;10683:66:2;;16547:2:10;10683:66:2;;;16529:21:10;16586:2;16566:18;;;16559:30;16625:34;16605:18;;;16598:62;-1:-1:-1;;;16676:18:10;;;16669:33;16719:19;;10683:66:2;16345:399:10;10683:66:2;736:10:7;10806:102:2;736:10:7;10837:4:2;10762:16;10855:21;10873:2;10855:17;:21::i;:::-;10878:25;10896:6;10878:17;:25::i;:::-;-1:-1:-1;;10806:102:2;;;;;;;;;-1:-1:-1;10806:102:2;;-1:-1:-1;;;6262:1074:2;10806:102;10921:19;10943:13;;;;;;;;;;;-1:-1:-1;;;;;10943:19:2;;;;;;;;;;10981:21;;;;10973:70;;;;-1:-1:-1;;;10973:70:2;;16951:2:10;10973:70:2;;;16933:21:10;16990:2;16970:18;;;16963:30;17029:34;17009:18;;;17002:62;-1:-1:-1;;;17080:18:10;;;17073:34;17124:19;;10973:70:2;16749:400:10;10973:70:2;11079:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11079:19:2;;;;;;;;;;;;11101:20;;;11079:42;;11150:54;;17328:25:10;;;17369:18;;;17362:34;;;11079:19:2;;11150:54;;;;;;17301:18:10;11150:54:2;;;;;;;10672:540;;10564:648;;;:::o;9579:735::-;-1:-1:-1;;;;;9757:16:2;;9749:62;;;;-1:-1:-1;;;9749:62:2;;17609:2:10;9749:62:2;;;17591:21:10;17648:2;17628:18;;;17621:30;17687:34;17667:18;;;17660:62;-1:-1:-1;;;17738:18:10;;;17731:31;17779:19;;9749:62:2;17407:397:10;9749:62:2;9844:7;:14;9830:3;:10;:28;9822:81;;;;-1:-1:-1;;;9822:81:2;;;;;;;:::i;:::-;736:10:7;9916:16:2;10039:103;10063:3;:10;10059:1;:14;10039:103;;;10120:7;10128:1;10120:10;;;;;;;;:::i;:::-;;;;;;;10095:9;:17;10105:3;10109:1;10105:6;;;;;;;;:::i;:::-;;;;;;;10095:17;;;;;;;;;;;:21;10113:2;-1:-1:-1;;;;;10095:21:2;-1:-1:-1;;;;;10095:21:2;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10075:3:2;;-1:-1:-1;10075:3:2;;;:::i;:::-;;;;10039:103;;;;10195:2;-1:-1:-1;;;;;10159:53:2;10191:1;-1:-1:-1;;;;;10159:53:2;10173:8;-1:-1:-1;;;;;10159:53:2;;10199:3;10204:7;10159:53;;;;;;;:::i;:::-;;;;;;;;10225:81;10261:8;10279:1;10283:2;10287:3;10292:7;10301:4;10225:35;:81::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;2340:191:1:-;2433:6;;;-1:-1:-1;;;;;2450:17:1;;;-1:-1:-1;;;;;;2450:17:1;;;;;;;2483:40;;2433:6;;;2450:17;2433:6;;2483:40;;2414:16;;2483:40;2403:128;2340:191;:::o;12448:331:2:-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;12586:71;;;;-1:-1:-1;;;12586:71:2;;19707:2:10;12586:71:2;;;19689:21:10;19746:2;19726:18;;;19719:30;19785:34;19765:18;;;19758:62;-1:-1:-1;;;19836:18:10;;;19829:39;19885:19;;12586:71:2;19505:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;1159::10;;;12730::2;;1132:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;17328:25:10;;;17384:2;17369:18;;17362:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;17301:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;22063:2:10;15433:62:2;;;22045:21:10;22102:2;22082:18;;;22075:30;22141:34;22121:18;;;22114:62;-1:-1:-1;;;22192:18:10;;;22185:50;22252:19;;15433:62:2;21861:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:127::-;1272:10;1267:3;1263:20;1260:1;1253:31;1303:4;1300:1;1293:15;1327:4;1324:1;1317:15;1343:249;1453:2;1434:13;;-1:-1:-1;;1430:27:10;1418:40;;-1:-1:-1;;;;;1473:34:10;;1509:22;;;1470:62;1467:88;;;1535:18;;:::i;:::-;1571:2;1564:22;-1:-1:-1;;1343:249:10:o;1597:469::-;1662:5;-1:-1:-1;;;;;1688:6:10;1685:30;1682:56;;;1718:18;;:::i;:::-;1767:2;1761:9;1779:69;1836:2;1815:15;;-1:-1:-1;;1811:29:10;1842:4;1807:40;1761:9;1779:69;:::i;:::-;1866:6;1857:15;;1896:6;1888;1881:22;1936:3;1927:6;1922:3;1918:16;1915:25;1912:45;;;1953:1;1950;1943:12;1912:45;2003:6;1998:3;1991:4;1983:6;1979:17;1966:44;2058:1;2051:4;2042:6;2034;2030:19;2026:30;2019:41;;1597:469;;;;;:::o;2071:451::-;2140:6;2193:2;2181:9;2172:7;2168:23;2164:32;2161:52;;;2209:1;2206;2199:12;2161:52;2249:9;2236:23;-1:-1:-1;;;;;2274:6:10;2271:30;2268:50;;;2314:1;2311;2304:12;2268:50;2337:22;;2390:4;2382:13;;2378:27;-1:-1:-1;2368:55:10;;2419:1;2416;2409:12;2368:55;2442:74;2508:7;2503:2;2490:16;2485:2;2481;2477:11;2442:74;:::i;:::-;2432:84;2071:451;-1:-1:-1;;;;2071:451:10:o;2527:322::-;2604:6;2612;2620;2673:2;2661:9;2652:7;2648:23;2644:32;2641:52;;;2689:1;2686;2679:12;2641:52;2712:29;2731:9;2712:29;:::i;:::-;2702:39;2788:2;2773:18;;2760:32;;-1:-1:-1;2839:2:10;2824:18;;;2811:32;;2527:322;-1:-1:-1;;;2527:322:10:o;2854:180::-;2913:6;2966:2;2954:9;2945:7;2941:23;2937:32;2934:52;;;2982:1;2979;2972:12;2934:52;-1:-1:-1;3005:23:10;;2854:180;-1:-1:-1;2854:180:10:o;3039:423::-;3081:3;3119:5;3113:12;3146:6;3141:3;3134:19;3171:1;3181:162;3195:6;3192:1;3189:13;3181:162;;;3257:4;3313:13;;;3309:22;;3303:29;3285:11;;;3281:20;;3274:59;3210:12;3181:162;;;3185:3;3388:1;3381:4;3372:6;3367:3;3363:16;3359:27;3352:38;3451:4;3444:2;3440:7;3435:2;3427:6;3423:15;3419:29;3414:3;3410:39;3406:50;3399:57;;;3039:423;;;;:::o;3467:220::-;3616:2;3605:9;3598:21;3579:4;3636:45;3677:2;3666:9;3662:18;3654:6;3636:45;:::i;3692:183::-;3752:4;-1:-1:-1;;;;;3777:6:10;3774:30;3771:56;;;3807:18;;:::i;:::-;-1:-1:-1;3852:1:10;3848:14;3864:4;3844:25;;3692:183::o;3880:724::-;3934:5;3987:3;3980:4;3972:6;3968:17;3964:27;3954:55;;4005:1;4002;3995:12;3954:55;4041:6;4028:20;4067:4;4090:43;4130:2;4090:43;:::i;:::-;4162:2;4156:9;4174:31;4202:2;4194:6;4174:31;:::i;:::-;4240:18;;;4332:1;4328:10;;;;4316:23;;4312:32;;;4274:15;;;;-1:-1:-1;4356:15:10;;;4353:35;;;4384:1;4381;4374:12;4353:35;4420:2;4412:6;4408:15;4432:142;4448:6;4443:3;4440:15;4432:142;;;4514:17;;4502:30;;4552:12;;;;4465;;4432:142;;;-1:-1:-1;4592:6:10;3880:724;-1:-1:-1;;;;;;3880:724:10:o;4609:221::-;4651:5;4704:3;4697:4;4689:6;4685:17;4681:27;4671:55;;4722:1;4719;4712:12;4671:55;4744:80;4820:3;4811:6;4798:20;4791:4;4783:6;4779:17;4744:80;:::i;4835:868::-;4980:6;4988;4996;5004;5057:3;5045:9;5036:7;5032:23;5028:33;5025:53;;;5074:1;5071;5064:12;5025:53;5097:29;5116:9;5097:29;:::i;:::-;5087:39;;5177:2;5166:9;5162:18;5149:32;-1:-1:-1;;;;;5241:2:10;5233:6;5230:14;5227:34;;;5257:1;5254;5247:12;5227:34;5280:61;5333:7;5324:6;5313:9;5309:22;5280:61;:::i;:::-;5270:71;;5394:2;5383:9;5379:18;5366:32;5350:48;;5423:2;5413:8;5410:16;5407:36;;;5439:1;5436;5429:12;5407:36;5462:63;5517:7;5506:8;5495:9;5491:24;5462:63;:::i;:::-;5452:73;;5578:2;5567:9;5563:18;5550:32;5534:48;;5607:2;5597:8;5594:16;5591:36;;;5623:1;5620;5613:12;5591:36;;5646:51;5689:7;5678:8;5667:9;5663:24;5646:51;:::i;:::-;5636:61;;;4835:868;;;;;;;:::o;5708:943::-;5862:6;5870;5878;5886;5894;5947:3;5935:9;5926:7;5922:23;5918:33;5915:53;;;5964:1;5961;5954:12;5915:53;5987:29;6006:9;5987:29;:::i;:::-;5977:39;;6035:38;6069:2;6058:9;6054:18;6035:38;:::i;:::-;6025:48;;6124:2;6113:9;6109:18;6096:32;-1:-1:-1;;;;;6188:2:10;6180:6;6177:14;6174:34;;;6204:1;6201;6194:12;6174:34;6227:61;6280:7;6271:6;6260:9;6256:22;6227:61;:::i;:::-;6217:71;;6341:2;6330:9;6326:18;6313:32;6297:48;;6370:2;6360:8;6357:16;6354:36;;;6386:1;6383;6376:12;6354:36;6409:63;6464:7;6453:8;6442:9;6438:24;6409:63;:::i;:::-;6399:73;;6525:3;6514:9;6510:19;6497:33;6481:49;;6555:2;6545:8;6542:16;6539:36;;;6571:1;6568;6561:12;6539:36;;6594:51;6637:7;6626:8;6615:9;6611:24;6594:51;:::i;:::-;6584:61;;;5708:943;;;;;;;;:::o;6656:1208::-;6774:6;6782;6835:2;6823:9;6814:7;6810:23;6806:32;6803:52;;;6851:1;6848;6841:12;6803:52;6891:9;6878:23;-1:-1:-1;;;;;6961:2:10;6953:6;6950:14;6947:34;;;6977:1;6974;6967:12;6947:34;7015:6;7004:9;7000:22;6990:32;;7060:7;7053:4;7049:2;7045:13;7041:27;7031:55;;7082:1;7079;7072:12;7031:55;7118:2;7105:16;7140:4;7163:43;7203:2;7163:43;:::i;:::-;7235:2;7229:9;7247:31;7275:2;7267:6;7247:31;:::i;:::-;7313:18;;;7401:1;7397:10;;;;7389:19;;7385:28;;;7347:15;;;;-1:-1:-1;7425:19:10;;;7422:39;;;7457:1;7454;7447:12;7422:39;7481:11;;;;7501:148;7517:6;7512:3;7509:15;7501:148;;;7583:23;7602:3;7583:23;:::i;:::-;7571:36;;7534:12;;;;7627;;;;7501:148;;;7668:6;-1:-1:-1;;7712:18:10;;7699:32;;-1:-1:-1;;7743:16:10;;;7740:36;;;7772:1;7769;7762:12;7740:36;;7795:63;7850:7;7839:8;7828:9;7824:24;7795:63;:::i;:::-;7785:73;;;6656:1208;;;;;:::o;7869:435::-;7922:3;7960:5;7954:12;7987:6;7982:3;7975:19;8013:4;8042:2;8037:3;8033:12;8026:19;;8079:2;8072:5;8068:14;8100:1;8110:169;8124:6;8121:1;8118:13;8110:169;;;8185:13;;8173:26;;8219:12;;;;8254:15;;;;8146:1;8139:9;8110:169;;;-1:-1:-1;8295:3:10;;7869:435;-1:-1:-1;;;;;7869:435:10:o;8309:261::-;8488:2;8477:9;8470:21;8451:4;8508:56;8560:2;8549:9;8545:18;8537:6;8508:56;:::i;8783:322::-;8860:6;8868;8876;8929:2;8917:9;8908:7;8904:23;8900:32;8897:52;;;8945:1;8942;8935:12;8897:52;8981:9;8968:23;8958:33;;9038:2;9027:9;9023:18;9010:32;9000:42;;9061:38;9095:2;9084:9;9080:18;9061:38;:::i;:::-;9051:48;;8783:322;;;;;:::o;9110:347::-;9175:6;9183;9236:2;9224:9;9215:7;9211:23;9207:32;9204:52;;;9252:1;9249;9242:12;9204:52;9275:29;9294:9;9275:29;:::i;:::-;9265:39;;9354:2;9343:9;9339:18;9326:32;9401:5;9394:13;9387:21;9380:5;9377:32;9367:60;;9423:1;9420;9413:12;9367:60;9446:5;9436:15;;;9110:347;;;;;:::o;9462:260::-;9530:6;9538;9591:2;9579:9;9570:7;9566:23;9562:32;9559:52;;;9607:1;9604;9597:12;9559:52;9630:29;9649:9;9630:29;:::i;:::-;9620:39;;9678:38;9712:2;9701:9;9697:18;9678:38;:::i;:::-;9668:48;;9462:260;;;;;:::o;9727:606::-;9831:6;9839;9847;9855;9863;9916:3;9904:9;9895:7;9891:23;9887:33;9884:53;;;9933:1;9930;9923:12;9884:53;9956:29;9975:9;9956:29;:::i;:::-;9946:39;;10004:38;10038:2;10027:9;10023:18;10004:38;:::i;:::-;9994:48;;10089:2;10078:9;10074:18;10061:32;10051:42;;10140:2;10129:9;10125:18;10112:32;10102:42;;10195:3;10184:9;10180:19;10167:33;-1:-1:-1;;;;;10215:6:10;10212:30;10209:50;;;10255:1;10252;10245:12;10209:50;10278:49;10319:7;10310:6;10299:9;10295:22;10278:49;:::i;10338:186::-;10397:6;10450:2;10438:9;10429:7;10425:23;10421:32;10418:52;;;10466:1;10463;10456:12;10418:52;10489:29;10508:9;10489:29;:::i;10941:356::-;11143:2;11125:21;;;11162:18;;;11155:30;11221:34;11216:2;11201:18;;11194:62;11288:2;11273:18;;10941:356::o;11302:405::-;11504:2;11486:21;;;11543:2;11523:18;;;11516:30;11582:34;11577:2;11562:18;;11555:62;-1:-1:-1;;;11648:2:10;11633:18;;11626:39;11697:3;11682:19;;11302:405::o;11712:127::-;11773:10;11768:3;11764:20;11761:1;11754:31;11804:4;11801:1;11794:15;11828:4;11825:1;11818:15;11844:136;11883:3;11911:5;11901:39;;11920:18;;:::i;:::-;-1:-1:-1;;;11956:18:10;;11844:136::o;11985:380::-;12064:1;12060:12;;;;12107;;;12128:61;;12182:4;12174:6;12170:17;12160:27;;12128:61;12235:2;12227:6;12224:14;12204:18;12201:38;12198:161;;12281:10;12276:3;12272:20;12269:1;12262:31;12316:4;12313:1;12306:15;12344:4;12341:1;12334:15;12198:161;;11985:380;;;:::o;12370:125::-;12435:9;;;12456:10;;;12453:36;;;12469:18;;:::i;13329:127::-;13390:10;13385:3;13381:20;13378:1;13371:31;13421:4;13418:1;13411:15;13445:4;13442:1;13435:15;13461:135;13500:3;13521:17;;;13518:43;;13541:18;;:::i;:::-;-1:-1:-1;13588:1:10;13577:13;;13461:135::o;13601:128::-;13668:9;;;13689:11;;;13686:37;;;13703:18;;:::i;14267:545::-;14369:2;14364:3;14361:11;14358:448;;;14405:1;14430:5;14426:2;14419:17;14475:4;14471:2;14461:19;14545:2;14533:10;14529:19;14526:1;14522:27;14516:4;14512:38;14581:4;14569:10;14566:20;14563:47;;;-1:-1:-1;14604:4:10;14563:47;14659:2;14654:3;14650:12;14647:1;14643:20;14637:4;14633:31;14623:41;;14714:82;14732:2;14725:5;14722:13;14714:82;;;14777:17;;;14758:1;14747:13;14714:82;;14358:448;14267:545;;;:::o;14988:1352::-;15114:3;15108:10;-1:-1:-1;;;;;15133:6:10;15130:30;15127:56;;;15163:18;;:::i;:::-;15192:97;15282:6;15242:38;15274:4;15268:11;15242:38;:::i;:::-;15236:4;15192:97;:::i;:::-;15344:4;;15408:2;15397:14;;15425:1;15420:663;;;;16127:1;16144:6;16141:89;;;-1:-1:-1;16196:19:10;;;16190:26;16141:89;-1:-1:-1;;14945:1:10;14941:11;;;14937:24;14933:29;14923:40;14969:1;14965:11;;;14920:57;16243:81;;15390:944;;15420:663;14214:1;14207:14;;;14251:4;14238:18;;-1:-1:-1;;15456:20:10;;;15574:236;15588:7;15585:1;15582:14;15574:236;;;15677:19;;;15671:26;15656:42;;15769:27;;;;15737:1;15725:14;;;;15604:19;;15574:236;;;15578:3;15838:6;15829:7;15826:19;15823:201;;;15899:19;;;15893:26;-1:-1:-1;;15982:1:10;15978:14;;;15994:3;15974:24;15970:37;15966:42;15951:58;15936:74;;15823:201;-1:-1:-1;;;;;16070:1:10;16054:14;;;16050:22;16037:36;;-1:-1:-1;14988:1352:10:o;17809:404::-;18011:2;17993:21;;;18050:2;18030:18;;;18023:30;18089:34;18084:2;18069:18;;18062:62;-1:-1:-1;;;18155:2:10;18140:18;;18133:38;18203:3;18188:19;;17809:404::o;18218:465::-;18475:2;18464:9;18457:21;18438:4;18501:56;18553:2;18542:9;18538:18;18530:6;18501:56;:::i;:::-;18605:9;18597:6;18593:22;18588:2;18577:9;18573:18;18566:50;18633:44;18670:6;18662;18633:44;:::i;:::-;18625:52;18218:465;-1:-1:-1;;;;;18218:465:10:o;18688:401::-;18890:2;18872:21;;;18929:2;18909:18;;;18902:30;18968:34;18963:2;18948:18;;18941:62;-1:-1:-1;;;19034:2:10;19019:18;;19012:35;19079:3;19064:19;;18688:401::o;19094:406::-;19296:2;19278:21;;;19335:2;19315:18;;;19308:30;19374:34;19369:2;19354:18;;19347:62;-1:-1:-1;;;19440:2:10;19425:18;;19418:40;19490:3;19475:19;;19094:406::o;19915:827::-;-1:-1:-1;;;;;20312:15:10;;;20294:34;;20364:15;;20359:2;20344:18;;20337:43;20274:3;20411:2;20396:18;;20389:31;;;20237:4;;20443:57;;20480:19;;20472:6;20443:57;:::i;:::-;20548:9;20540:6;20536:22;20531:2;20520:9;20516:18;20509:50;20582:44;20619:6;20611;20582:44;:::i;:::-;20568:58;;20675:9;20667:6;20663:22;20657:3;20646:9;20642:19;20635:51;20703:33;20729:6;20721;20703:33;:::i;:::-;20695:41;19915:827;-1:-1:-1;;;;;;;;19915:827:10:o;20747:249::-;20816:6;20869:2;20857:9;20848:7;20844:23;20840:32;20837:52;;;20885:1;20882;20875:12;20837:52;20917:9;20911:16;20936:30;20960:5;20936:30;:::i;21001:179::-;21036:3;21078:1;21060:16;21057:23;21054:120;;;21124:1;21121;21118;21103:23;-1:-1:-1;21161:1:10;21155:8;21150:3;21146:18;21054:120;21001:179;:::o;21185:671::-;21224:3;21266:4;21248:16;21245:26;21242:39;;;21185:671;:::o;21242:39::-;21308:2;21302:9;-1:-1:-1;;21373:16:10;21369:25;;21366:1;21302:9;21345:50;21424:4;21418:11;21448:16;-1:-1:-1;;;;;21554:2:10;21547:4;21539:6;21535:17;21532:25;21527:2;21519:6;21516:14;21513:45;21510:58;;;21561:5;;;;;21185:671;:::o;21510:58::-;21598:6;21592:4;21588:17;21577:28;;21634:3;21628:10;21661:2;21653:6;21650:14;21647:27;;;21667:5;;;;;;21185:671;:::o;21647:27::-;21751:2;21732:16;21726:4;21722:27;21718:36;21711:4;21702:6;21697:3;21693:16;21689:27;21686:69;21683:82;;;21758:5;;;;;;21185:671;:::o;21683:82::-;21774:57;21825:4;21816:6;21808;21804:19;21800:30;21794:4;21774:57;:::i;:::-;-1:-1:-1;21847:3:10;;21185:671;-1:-1:-1;;;;;21185:671:10:o;22282:404::-;22484:2;22466:21;;;22523:2;22503:18;;;22496:30;22562:34;22557:2;22542:18;;22535:62;-1:-1:-1;;;22628:2:10;22613:18;;22606:38;22676:3;22661:19;;22282:404::o;22691:561::-;-1:-1:-1;;;;;22988:15:10;;;22970:34;;23040:15;;23035:2;23020:18;;23013:43;23087:2;23072:18;;23065:34;;;23130:2;23115:18;;23108:34;;;22950:3;23173;23158:19;;23151:32;;;22913:4;;23200:46;;23226:19;;23218:6;23200:46;:::i;:::-;23192:54;22691:561;-1:-1:-1;;;;;;;22691:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1604600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2700",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"brun(address,uint256,uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"mintBatchWithNumber(uint256)": "infinite",
								"owner()": "2390",
								"renounceOwnership()": "28140",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26727",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "578",
								"tokenSupply()": "2351",
								"totalSupply()": "2326",
								"transferOwnership(address)": "28422",
								"transferWithNumber(uint256,uint256,address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 269,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH data",
									"source": 2,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 949,
									"end": 981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8254,
									"end": 8260,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 8247,
									"end": 8260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 2028,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220363025199168cd283c64998af8932af0deb17e3cd7bccc9b1a42bd7ef2d13c4f64736f6c63430008110033",
									".code": [
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "9416308E"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "9416308E"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "71AC14E6"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "7824407F"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "92F2DBF"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 2028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1262,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1250,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1692,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1692,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1684,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1594,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1684,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1346,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1346,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1721,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 350,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 350,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 350,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8709,
											"end": 8711,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8575,
											"end": 8778,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 819,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 819,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3700,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10731,
											"end": 10733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10770,
											"end": 10772,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10750,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10750,
											"end": 10768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10750,
											"end": 10768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10743,
											"end": 10773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10809,
											"end": 10843,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10782,
											"end": 10844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 10894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10930,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10911,
											"end": 10930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1323,
											"end": 1329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1315,
											"end": 1330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1315,
											"end": 1330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1692,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1820,
											"end": 1886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1864,
											"end": 1871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1886,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1847,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1798,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1798,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1974,
											"end": 1981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1968,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1968,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2004,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2069,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1346,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1506,
											"end": 1508,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1513,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1524,
											"end": 1528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1495,
											"end": 1529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 1529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1495,
											"end": 1529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1571,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1554,
											"end": 1578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12702,
											"end": 12704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12684,
											"end": 12705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12743,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12721,
											"end": 12739,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12721,
											"end": 12739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12714,
											"end": 12744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12780,
											"end": 12814,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 12760,
											"end": 12778,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12760,
											"end": 12778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12753,
											"end": 12815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12824,
											"end": 12872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12889,
											"end": 12908,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12889,
											"end": 12908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12500,
											"end": 12914,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4560,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13121,
											"end": 13123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13103,
											"end": 13124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13162,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13140,
											"end": 13158,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13140,
											"end": 13158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13133,
											"end": 13163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13199,
											"end": 13233,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13250,
											"end": 13268,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13250,
											"end": 13268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13250,
											"end": 13268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13243,
											"end": 13282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13318,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13299,
											"end": 13318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 12919,
											"end": 13324,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2955,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3088,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3101,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3078,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3059,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3039,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1813,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1786,
											"end": 1816,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1786,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 811,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 350,
											"end": 811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 448,
											"end": 472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 472,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 472,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 510,
											"end": 534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 510,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 562,
											"end": 573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 580,
											"end": 603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 580,
											"end": 603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 580,
											"end": 603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 604,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 629,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 645,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 631,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 630,
											"end": 645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 630,
											"end": 645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 626,
											"end": 646,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 677,
											"end": 688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 688,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 673,
											"end": 688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 673,
											"end": 688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 665,
											"end": 689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 606,
											"end": 609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 726,
											"end": 736,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 738,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 743,
											"end": 750,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 715,
											"end": 755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 715,
											"end": 755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 794,
											"end": 803,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 780,
											"end": 791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 791,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 780,
											"end": 803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 780,
											"end": 803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 766,
											"end": 777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 350,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 819,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 934,
											"end": 958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1060,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1104,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1100,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1145,
											"end": 1150,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1141,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1133,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1080,
											"end": 1083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1199,
											"end": 1209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1177,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3328,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3886,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4048,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1282,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13936,
											"end": 13938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13918,
											"end": 13939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 13977,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13955,
											"end": 13973,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13955,
											"end": 13973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13955,
											"end": 13973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 13978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14014,
											"end": 14048,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13994,
											"end": 14012,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13994,
											"end": 14012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13987,
											"end": 14049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14065,
											"end": 14083,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14065,
											"end": 14083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14065,
											"end": 14083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14130,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14111,
											"end": 14130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13734,
											"end": 14136,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2060,
											"end": 2133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2163,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2144,
											"end": 2172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8180,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8247,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16547,
											"end": 16549,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16529,
											"end": 16550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16586,
											"end": 16588,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 16566,
											"end": 16584,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16566,
											"end": 16584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16559,
											"end": 16589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16625,
											"end": 16659,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 16605,
											"end": 16623,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16605,
											"end": 16623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16605,
											"end": 16623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16598,
											"end": 16660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16676,
											"end": 16694,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16676,
											"end": 16694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16676,
											"end": 16694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16669,
											"end": 16702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16719,
											"end": 16738,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 16719,
											"end": 16738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 16345,
											"end": 16744,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10683,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10873,
											"end": 10875,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10855,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10878,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10878,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10806,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10921,
											"end": 10940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16951,
											"end": 16953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16933,
											"end": 16954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16990,
											"end": 16992,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16970,
											"end": 16988,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16970,
											"end": 16988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16970,
											"end": 16988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17029,
											"end": 17063,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 17009,
											"end": 17027,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17009,
											"end": 17027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17009,
											"end": 17027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17073,
											"end": 17107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17124,
											"end": 17143,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 17124,
											"end": 17143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 16749,
											"end": 17149,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10973,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11092,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11121,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17387,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17301,
											"end": 17319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11204,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10672,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10564,
											"end": 11212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9579,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17609,
											"end": 17611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17591,
											"end": 17612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17648,
											"end": 17650,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 17628,
											"end": 17646,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17628,
											"end": 17646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17628,
											"end": 17646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17621,
											"end": 17651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17687,
											"end": 17721,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 17667,
											"end": 17685,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 17667,
											"end": 17685,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17660,
											"end": 17722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17731,
											"end": 17762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17779,
											"end": 17798,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 17779,
											"end": 17798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 17407,
											"end": 17804,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9749,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9822,
											"end": 9903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9822,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10063,
											"end": 10073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10059,
											"end": 10073,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10120,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10108,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10105,
											"end": 10111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10105,
											"end": 10111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10112,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10095,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10130,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10075,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10195,
											"end": 10197,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10173,
											"end": 10181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10211,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10159,
											"end": 10212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10212,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10261,
											"end": 10269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10283,
											"end": 10285,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10299,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10225,
											"end": 10306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6467,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6559,
											"end": 6625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6824,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6862,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6945,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 7137,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6791,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7193,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7253,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19707,
											"end": 19709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19689,
											"end": 19710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19746,
											"end": 19748,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 19726,
											"end": 19744,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19726,
											"end": 19744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19726,
											"end": 19744,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19785,
											"end": 19819,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 19765,
											"end": 19783,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19765,
											"end": 19783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19765,
											"end": 19783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19758,
											"end": 19820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19829,
											"end": 19868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19885,
											"end": 19904,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 19885,
											"end": 19904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 19505,
											"end": 19910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 5264,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5428,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5451,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5548,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5724,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17328,
											"end": 17353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17384,
											"end": 17386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17369,
											"end": 17387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17362,
											"end": 17396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17301,
											"end": 17319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 5828,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 15684,
											"end": 15692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 14992,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14992,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14988,
											"end": 15511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 14988,
											"end": 15511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 15377,
											"end": 15391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22063,
											"end": 22065,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22045,
											"end": 22066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22102,
											"end": 22104,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 22082,
											"end": 22100,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 22082,
											"end": 22100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22082,
											"end": 22100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22075,
											"end": 22105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22141,
											"end": 22175,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 22121,
											"end": 22139,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 22121,
											"end": 22139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22121,
											"end": 22139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22114,
											"end": 22176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22192,
											"end": 22210,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 22192,
											"end": 22210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22192,
											"end": 22210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22185,
											"end": 22235,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22252,
											"end": 22271,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 22252,
											"end": 22271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 21861,
											"end": 22277,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 15238,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 14215,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 14215,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 14211,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 14417,
											"end": 14467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1211,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1282,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1307,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1332,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1343,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1457,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1467,
											"end": 1555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1535,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1682,
											"end": 1738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1718,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1840,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1779,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 1779,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1939,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1940,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 1912,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 2010,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 2066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2196,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2161,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2259,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2316,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2268,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2394,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2382,
											"end": 2395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2405,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2368,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 2442,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2442,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2516,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2522,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 2641,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 2712,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2741,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2843,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2843,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2849,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2964,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2934,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 3034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 3034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3202,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3332,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3181,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3446,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3427,
											"end": 3433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3448,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3417,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3687,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3467,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3605,
											"end": 3614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 3677,
											"end": 3679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 3636,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3875,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 3692,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3804,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3827,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3771,
											"end": 3827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3807,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3807,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3864,
											"end": 3868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 4604,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 3880,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3968,
											"end": 3985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3964,
											"end": 3991,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3954,
											"end": 4009,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4007,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 4009,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3954,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4028,
											"end": 4048,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4090,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4090,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4090,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4202,
											"end": 4204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4174,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4205,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4174,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4339,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4344,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4274,
											"end": 4289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4353,
											"end": 4388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4386,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4353,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4412,
											"end": 4418,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4440,
											"end": 4455,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4531,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 4432,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4592,
											"end": 4598,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 4604,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 4604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4830,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4609,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4656,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4701,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4708,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4671,
											"end": 4726,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4726,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4671,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 4820,
											"end": 4823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4818,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4783,
											"end": 4789,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4744,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4994,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5060,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5045,
											"end": 5054,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5043,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5055,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5025,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5116,
											"end": 5125,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5097,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5126,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5097,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5126,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5181,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5244,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5261,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5227,
											"end": 5261,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5259,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5261,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5227,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 5333,
											"end": 5340,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5330,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5322,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5280,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5341,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 5280,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5341,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5379,
											"end": 5397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5398,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5350,
											"end": 5398,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5350,
											"end": 5398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5426,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5462,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5525,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5582,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5610,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5613,
											"end": 5625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 5689,
											"end": 5696,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 5646,
											"end": 5697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5697,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 5646,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 5703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5935,
											"end": 5944,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5926,
											"end": 5933,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5922,
											"end": 5945,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 5951,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5968,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5915,
											"end": 5968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5962,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5954,
											"end": 5966,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5915,
											"end": 5968,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 5915,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5987,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6016,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 5987,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6016,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6069,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6054,
											"end": 6072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6035,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6113,
											"end": 6122,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6128,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6191,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6227,
											"end": 6288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6288,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6345,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6370,
											"end": 6372,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6360,
											"end": 6368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6357,
											"end": 6373,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6390,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 6354,
											"end": 6390,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6388,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6354,
											"end": 6390,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 6354,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6464,
											"end": 6471,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6409,
											"end": 6472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6472,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6409,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6472,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6530,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6545,
											"end": 6553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6542,
											"end": 6558,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6569,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6573,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6637,
											"end": 6644,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6615,
											"end": 6624,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6611,
											"end": 6635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6594,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6645,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6594,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 6651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6823,
											"end": 6832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6821,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 6853,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6891,
											"end": 6900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6901,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6963,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6964,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6975,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6967,
											"end": 6979,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7013,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7067,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7057,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7049,
											"end": 7051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7068,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 7031,
											"end": 7086,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7080,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7084,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7086,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 7031,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7121,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7144,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7203,
											"end": 7205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7163,
											"end": 7206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7247,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 7275,
											"end": 7277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7247,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 7247,
											"end": 7278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7247,
											"end": 7278,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 7247,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7407,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7385,
											"end": 7413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7385,
											"end": 7413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7385,
											"end": 7413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7444,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7444,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7444,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7422,
											"end": 7461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7461,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7422,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7492,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7492,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7517,
											"end": 7523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7524,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7602,
											"end": 7605,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 7583,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7606,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 7583,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7607,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7546,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7546,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 7501,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7731,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7772,
											"end": 7773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 7774,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7850,
											"end": 7857,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7839,
											"end": 7847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 7795,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7869,
											"end": 8304,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7869,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 7993,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 7985,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 7994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8017,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8040,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8045,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8131,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8198,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8199,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8146,
											"end": 8147,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 8110,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8295,
											"end": 8298,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8298,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7869,
											"end": 8304,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 8304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8570,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 8309,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8491,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8451,
											"end": 8455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8508,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8560,
											"end": 8562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8508,
											"end": 8564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8917,
											"end": 8926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8915,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 8932,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8949,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8897,
											"end": 8949,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8945,
											"end": 8946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8943,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8949,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8897,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 8990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8991,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 8991,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 8991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9027,
											"end": 9036,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9042,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9000,
											"end": 9042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9000,
											"end": 9042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9061,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 9095,
											"end": 9097,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9061,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9061,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9061,
											"end": 9099,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 9061,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9051,
											"end": 9099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 9105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9236,
											"end": 9238,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9224,
											"end": 9233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9222,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9234,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9207,
											"end": 9239,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 9204,
											"end": 9256,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9254,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9256,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 9204,
											"end": 9256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9294,
											"end": 9303,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9275,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9304,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 9275,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9265,
											"end": 9304,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9265,
											"end": 9304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9343,
											"end": 9352,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9326,
											"end": 9358,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9401,
											"end": 9406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9407,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9408,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9409,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 9367,
											"end": 9427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9425,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9427,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 9367,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9451,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9451,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9530,
											"end": 9536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9591,
											"end": 9593,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9579,
											"end": 9588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9570,
											"end": 9577,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9589,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9594,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9559,
											"end": 9611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9607,
											"end": 9608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9605,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9597,
											"end": 9609,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9611,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 9559,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 9649,
											"end": 9658,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9630,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9659,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 9630,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9697,
											"end": 9715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9678,
											"end": 9716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9716,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 9678,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 10333,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9727,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9831,
											"end": 9837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9919,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9904,
											"end": 9913,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9895,
											"end": 9902,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9914,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9887,
											"end": 9920,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9884,
											"end": 9937,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9884,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9884,
											"end": 9937,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9933,
											"end": 9934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9923,
											"end": 9935,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9884,
											"end": 9937,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9884,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9956,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9985,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9956,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9985,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10038,
											"end": 10040,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10027,
											"end": 10036,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10023,
											"end": 10041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 10004,
											"end": 10042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10042,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 10004,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10078,
											"end": 10087,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10074,
											"end": 10092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10093,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10144,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10102,
											"end": 10144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10102,
											"end": 10144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10195,
											"end": 10198,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10184,
											"end": 10193,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10200,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10215,
											"end": 10221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10212,
											"end": 10242,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10259,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 10209,
											"end": 10259,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10255,
											"end": 10256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10257,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10259,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 10209,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 10319,
											"end": 10326,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 10278,
											"end": 10327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10338,
											"end": 10524,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 10338,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10436,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10448,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10421,
											"end": 10453,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10468,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10489,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 10489,
											"end": 10518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11297,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 10941,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11125,
											"end": 11146,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11155,
											"end": 11185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11255,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11216,
											"end": 11218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11194,
											"end": 11256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11288,
											"end": 11290,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11273,
											"end": 11291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11273,
											"end": 11291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 11297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11707,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 11302,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11504,
											"end": 11506,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11486,
											"end": 11507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11545,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11616,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11577,
											"end": 11579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11648,
											"end": 11650,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11626,
											"end": 11665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11839,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 11712,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11783,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 11768,
											"end": 11771,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11804,
											"end": 11808,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11801,
											"end": 11802,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11794,
											"end": 11809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11825,
											"end": 11826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11844,
											"end": 11980,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 11844,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11883,
											"end": 11886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11901,
											"end": 11940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 11920,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11956,
											"end": 11974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11956,
											"end": 11974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11844,
											"end": 11980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12365,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 11985,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12064,
											"end": 12065,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12060,
											"end": 12072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12072,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12107,
											"end": 12119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12107,
											"end": 12119,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12107,
											"end": 12119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 12128,
											"end": 12189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12186,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 12174,
											"end": 12180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12187,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12189,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 12128,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12227,
											"end": 12233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12238,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12239,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 12198,
											"end": 12359,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12281,
											"end": 12291,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12276,
											"end": 12279,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12269,
											"end": 12270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12316,
											"end": 12320,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12306,
											"end": 12321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12344,
											"end": 12348,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12341,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12349,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12359,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 12198,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12370,
											"end": 12495,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 12370,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12435,
											"end": 12444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12456,
											"end": 12466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12456,
											"end": 12466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12456,
											"end": 12466,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12453,
											"end": 12489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12469,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12469,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 12469,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13329,
											"end": 13456,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 13329,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13390,
											"end": 13400,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 13385,
											"end": 13388,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 13381,
											"end": 13401,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 13378,
											"end": 13379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13402,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13425,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 13418,
											"end": 13419,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13445,
											"end": 13449,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13442,
											"end": 13443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13596,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 13461,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13500,
											"end": 13503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13538,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13521,
											"end": 13538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13521,
											"end": 13538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13518,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 13518,
											"end": 13561,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 13541,
											"end": 13559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13588,
											"end": 13589,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13577,
											"end": 13590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13577,
											"end": 13590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13461,
											"end": 13596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13729,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 13601,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13668,
											"end": 13677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13668,
											"end": 13677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13668,
											"end": 13677,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13689,
											"end": 13700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13689,
											"end": 13700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13689,
											"end": 13700,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13686,
											"end": 13723,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13686,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13686,
											"end": 13723,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 13703,
											"end": 13721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14812,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 14267,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14371,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14364,
											"end": 14367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14372,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14358,
											"end": 14806,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14358,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 14358,
											"end": 14806,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14430,
											"end": 14435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14426,
											"end": 14428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14475,
											"end": 14479,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14471,
											"end": 14473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14461,
											"end": 14480,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14545,
											"end": 14547,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14533,
											"end": 14543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14526,
											"end": 14527,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 14522,
											"end": 14549,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14512,
											"end": 14550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14581,
											"end": 14585,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14569,
											"end": 14579,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14566,
											"end": 14586,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14604,
											"end": 14608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14661,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14654,
											"end": 14657,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14647,
											"end": 14648,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 14643,
											"end": 14663,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14633,
											"end": 14664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14623,
											"end": 14664,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14623,
											"end": 14664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14732,
											"end": 14734,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14725,
											"end": 14730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14722,
											"end": 14735,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14759,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14747,
											"end": 14760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 14714,
											"end": 14796,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14358,
											"end": 14806,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 14358,
											"end": 14806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 16340,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 14988,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15114,
											"end": 15117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15108,
											"end": 15118,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15133,
											"end": 15139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15130,
											"end": 15160,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15183,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 15127,
											"end": 15183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 15163,
											"end": 15181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15192,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 15282,
											"end": 15288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 15274,
											"end": 15278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15268,
											"end": 15279,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 15242,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15280,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 15242,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15236,
											"end": 15240,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15192,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15192,
											"end": 15289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15192,
											"end": 15289,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 15192,
											"end": 15289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15410,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15425,
											"end": 15426,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16127,
											"end": 16128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16144,
											"end": 16150,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16230,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 16141,
											"end": 16230,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16196,
											"end": 16215,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16196,
											"end": 16215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16190,
											"end": 16216,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16230,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 16141,
											"end": 16230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14945,
											"end": 14946,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 14941,
											"end": 14952,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 14952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 14952,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14937,
											"end": 14961,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 14962,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14923,
											"end": 14963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14969,
											"end": 14970,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14965,
											"end": 14976,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14965,
											"end": 14976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14965,
											"end": 14976,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14977,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16243,
											"end": 16324,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16243,
											"end": 16324,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 15390,
											"end": 16334,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 15420,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14221,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14251,
											"end": 14255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15456,
											"end": 15476,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15476,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15456,
											"end": 15476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15588,
											"end": 15595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15582,
											"end": 15596,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15696,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15696,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15671,
											"end": 15697,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15656,
											"end": 15698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15656,
											"end": 15698,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15796,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15796,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15737,
											"end": 15738,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15725,
											"end": 15739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15623,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 15574,
											"end": 15810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15578,
											"end": 15581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15829,
											"end": 15836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15826,
											"end": 15845,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15823,
											"end": 16024,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15823,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 15823,
											"end": 16024,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15899,
											"end": 15918,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15899,
											"end": 15918,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15899,
											"end": 15918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15893,
											"end": 15919,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15978,
											"end": 15992,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15978,
											"end": 15992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15978,
											"end": 15992,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 15997,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 15974,
											"end": 15998,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15970,
											"end": 16007,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15966,
											"end": 16008,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 16009,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15936,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15936,
											"end": 16010,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15823,
											"end": 16024,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 15823,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16070,
											"end": 16071,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16054,
											"end": 16068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16068,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16050,
											"end": 16072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16037,
											"end": 16073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16037,
											"end": 16073,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14988,
											"end": 16340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17809,
											"end": 18213,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 17809,
											"end": 18213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18011,
											"end": 18013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17993,
											"end": 18014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18050,
											"end": 18052,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18030,
											"end": 18048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18023,
											"end": 18053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18089,
											"end": 18123,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 18084,
											"end": 18086,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18069,
											"end": 18087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18069,
											"end": 18087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18062,
											"end": 18124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18155,
											"end": 18157,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18140,
											"end": 18158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18140,
											"end": 18158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18133,
											"end": 18171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18203,
											"end": 18206,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 18188,
											"end": 18207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18188,
											"end": 18207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17809,
											"end": 18213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18218,
											"end": 18683,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 18218,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18475,
											"end": 18477,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18464,
											"end": 18473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18457,
											"end": 18478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18438,
											"end": 18442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 18553,
											"end": 18555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18542,
											"end": 18551,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18536,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18501,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 18501,
											"end": 18557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18501,
											"end": 18557,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 18501,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18605,
											"end": 18614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18597,
											"end": 18603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18593,
											"end": 18615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18577,
											"end": 18586,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18573,
											"end": 18591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18566,
											"end": 18616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18633,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 18670,
											"end": 18676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18662,
											"end": 18668,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18633,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 18633,
											"end": 18677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18633,
											"end": 18677,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 18633,
											"end": 18677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18625,
											"end": 18677,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 18218,
											"end": 18683,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18218,
											"end": 18683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 19089,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 18688,
											"end": 19089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18890,
											"end": 18892,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18872,
											"end": 18893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18872,
											"end": 18893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18872,
											"end": 18893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18929,
											"end": 18931,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18909,
											"end": 18927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 18932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18968,
											"end": 19002,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 18963,
											"end": 18965,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18948,
											"end": 18966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18948,
											"end": 18966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18941,
											"end": 19003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19034,
											"end": 19036,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 19019,
											"end": 19037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19019,
											"end": 19037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19047,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19079,
											"end": 19082,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 19064,
											"end": 19083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 19089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19500,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 19094,
											"end": 19500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19296,
											"end": 19298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19278,
											"end": 19299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19278,
											"end": 19299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19278,
											"end": 19299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19335,
											"end": 19337,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 19315,
											"end": 19333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19315,
											"end": 19333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19315,
											"end": 19333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19308,
											"end": 19338,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19374,
											"end": 19408,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 19369,
											"end": 19371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19354,
											"end": 19372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19354,
											"end": 19372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19347,
											"end": 19409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19440,
											"end": 19442,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 19425,
											"end": 19443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19425,
											"end": 19443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19418,
											"end": 19458,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19490,
											"end": 19493,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 19475,
											"end": 19494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19475,
											"end": 19494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19915,
											"end": 20742,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 19915,
											"end": 20742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20312,
											"end": 20327,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20312,
											"end": 20327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20312,
											"end": 20327,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20294,
											"end": 20328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20294,
											"end": 20328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20364,
											"end": 20379,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20364,
											"end": 20379,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20359,
											"end": 20361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20344,
											"end": 20362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20344,
											"end": 20362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20337,
											"end": 20380,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20277,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 20411,
											"end": 20413,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20396,
											"end": 20414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20389,
											"end": 20420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20389,
											"end": 20420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20389,
											"end": 20420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20237,
											"end": 20241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20237,
											"end": 20241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 20443,
											"end": 20500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20480,
											"end": 20499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20480,
											"end": 20499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20472,
											"end": 20478,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20443,
											"end": 20500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20500,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 20443,
											"end": 20500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20548,
											"end": 20557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20540,
											"end": 20546,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20536,
											"end": 20558,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20531,
											"end": 20533,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20520,
											"end": 20529,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20516,
											"end": 20534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20509,
											"end": 20559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 20619,
											"end": 20625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20611,
											"end": 20617,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 20582,
											"end": 20626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20582,
											"end": 20626,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 20582,
											"end": 20626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20568,
											"end": 20626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20568,
											"end": 20626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20675,
											"end": 20684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20667,
											"end": 20673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20663,
											"end": 20685,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20657,
											"end": 20660,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 20646,
											"end": 20655,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20642,
											"end": 20661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20635,
											"end": 20686,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 20729,
											"end": 20735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20721,
											"end": 20727,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 20703,
											"end": 20736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20703,
											"end": 20736,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 20703,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20695,
											"end": 20736,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 19915,
											"end": 20742,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19915,
											"end": 20742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20747,
											"end": 20996,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 20747,
											"end": 20996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20869,
											"end": 20871,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20857,
											"end": 20866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20848,
											"end": 20855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20844,
											"end": 20867,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20872,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 20837,
											"end": 20889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20837,
											"end": 20889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 20837,
											"end": 20889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20885,
											"end": 20886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20882,
											"end": 20883,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20875,
											"end": 20887,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20837,
											"end": 20889,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 20837,
											"end": 20889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20917,
											"end": 20926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20911,
											"end": 20927,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20936,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 20960,
											"end": 20965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20936,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 20936,
											"end": 20966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21001,
											"end": 21180,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 21001,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21036,
											"end": 21039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21078,
											"end": 21079,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 21060,
											"end": 21076,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 21057,
											"end": 21080,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21054,
											"end": 21174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21054,
											"end": 21174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 21054,
											"end": 21174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21124,
											"end": 21125,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21121,
											"end": 21122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21118,
											"end": 21119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21103,
											"end": 21126,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21161,
											"end": 21162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21155,
											"end": 21163,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21150,
											"end": 21153,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 21054,
											"end": 21174,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 21054,
											"end": 21174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21001,
											"end": 21180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21001,
											"end": 21180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21224,
											"end": 21227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21266,
											"end": 21270,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 21248,
											"end": 21264,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 21245,
											"end": 21271,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21242,
											"end": 21281,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21242,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 21242,
											"end": 21281,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21242,
											"end": 21281,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 21242,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21308,
											"end": 21310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21302,
											"end": 21311,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21373,
											"end": 21389,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 21369,
											"end": 21394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21369,
											"end": 21394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21366,
											"end": 21367,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21302,
											"end": 21311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21395,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 21424,
											"end": 21428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21418,
											"end": 21429,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21448,
											"end": 21464,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21554,
											"end": 21556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21547,
											"end": 21551,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21539,
											"end": 21545,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21535,
											"end": 21552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21532,
											"end": 21557,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21527,
											"end": 21529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21525,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21516,
											"end": 21530,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21513,
											"end": 21558,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 21510,
											"end": 21568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21510,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 21510,
											"end": 21568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21561,
											"end": 21566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21510,
											"end": 21568,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 21510,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21598,
											"end": 21604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21592,
											"end": 21596,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21588,
											"end": 21605,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21577,
											"end": 21605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21577,
											"end": 21605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21628,
											"end": 21638,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21661,
											"end": 21663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21653,
											"end": 21659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21650,
											"end": 21664,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21647,
											"end": 21674,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21647,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 21647,
											"end": 21674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21667,
											"end": 21672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21647,
											"end": 21674,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 21647,
											"end": 21674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21751,
											"end": 21753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21732,
											"end": 21748,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 21726,
											"end": 21730,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21722,
											"end": 21749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21718,
											"end": 21754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21711,
											"end": 21715,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21702,
											"end": 21708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21697,
											"end": 21700,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21689,
											"end": 21716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21686,
											"end": 21755,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21683,
											"end": 21765,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21683,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 21683,
											"end": 21765,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21683,
											"end": 21765,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 21683,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 21825,
											"end": 21829,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21816,
											"end": 21822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21808,
											"end": 21814,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21804,
											"end": 21823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21800,
											"end": 21830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21798,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 21774,
											"end": 21831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21774,
											"end": 21831,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 21774,
											"end": 21831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21847,
											"end": 21850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21847,
											"end": 21850,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 21185,
											"end": 21856,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21185,
											"end": 21856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22282,
											"end": 22686,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 22282,
											"end": 22686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22484,
											"end": 22486,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22466,
											"end": 22487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22466,
											"end": 22487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22466,
											"end": 22487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22523,
											"end": 22525,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 22503,
											"end": 22521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22503,
											"end": 22521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22503,
											"end": 22521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22526,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22562,
											"end": 22596,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 22557,
											"end": 22559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22542,
											"end": 22560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22542,
											"end": 22560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22535,
											"end": 22597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22628,
											"end": 22630,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22613,
											"end": 22631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22613,
											"end": 22631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22606,
											"end": 22644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22676,
											"end": 22679,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 22661,
											"end": 22680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22661,
											"end": 22680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22282,
											"end": 22686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22691,
											"end": 23252,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 22691,
											"end": 23252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22988,
											"end": 23003,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22988,
											"end": 23003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22988,
											"end": 23003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22970,
											"end": 23004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22970,
											"end": 23004,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23040,
											"end": 23055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23040,
											"end": 23055,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23020,
											"end": 23038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23020,
											"end": 23038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23087,
											"end": 23089,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23072,
											"end": 23090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23072,
											"end": 23090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23065,
											"end": 23099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23065,
											"end": 23099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23065,
											"end": 23099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23130,
											"end": 23132,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 23115,
											"end": 23133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23115,
											"end": 23133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23108,
											"end": 23142,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22950,
											"end": 22953,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 23173,
											"end": 23176,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 23158,
											"end": 23177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23158,
											"end": 23177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23151,
											"end": 23183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23151,
											"end": 23183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23151,
											"end": 23183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22913,
											"end": 22917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22913,
											"end": 22917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23200,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 23200,
											"end": 23246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23226,
											"end": 23245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23226,
											"end": 23245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23218,
											"end": 23224,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23200,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 23200,
											"end": 23246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23200,
											"end": 23246,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 23200,
											"end": 23246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23192,
											"end": 23246,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 22691,
											"end": 23252,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22691,
											"end": 23252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							},
							"sourceList": [
								"ex/NFTERC1155.sol",
								"node_modules/@openzeppelin/contracts/access/Ownable.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"brun(address,uint256,uint256)": "092f2dbf",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"mintBatchWithNumber(uint256)": "71ac14e6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenSupply()": "7824407f",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"transferWithNumber(uint256,uint256,address)": "9416308e",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"brun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"mintBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/NFTERC1155.sol\":\"BEEItems\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/NFTERC1155.sol\":{\"keccak256\":\"0x68d78189b0abdf969f3ad377abc44bb24f07cd2d9d1a977d789edad4eb884359\",\"urls\":[\"bzz-raw://7142a8dcfc5abd89d711373dfbd2e71002a926c4f1c343c6e1b5597dcea67f13\",\"dweb:/ipfs/QmRFU24c6BCxpp1Meaxmnq5cvWg2cj3JNW66UREewF7VyC\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "ex/NFTERC1155.sol:BEEItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "ex/NFTERC1155.sol:BEEItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "ex/NFTERC1155.sol:BEEItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 255,
								"contract": "ex/NFTERC1155.sol:BEEItems",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "ex/NFTERC1155.sol:BEEItems",
								"label": "tokenSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 255,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1177:1181  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1176  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1169:1182  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1126:1190  constructor(string memory uri_) {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_17)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  tag_10\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8254:8260  newuri */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8251  _uri */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8247:8260  _uri = newuri */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8180:8268  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_12:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1188   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_20:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_21:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_22:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_24\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_26\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_27:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_28:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  dup7\n    /* \"#utility.yul\":1145:1147   */\n  dup5\n    /* \"#utility.yul\":1137:1143   */\n  dup4\n    /* \"#utility.yul\":1133:1148   */\n  add\n    /* \"#utility.yul\":1129:1153   */\n  add\n    /* \"#utility.yul\":1122:1157   */\n  mstore\n    /* \"#utility.yul\":1176:1182   */\n  dup1\n    /* \"#utility.yul\":1166:1182   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1188   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1193:1573   */\ntag_13:\n    /* \"#utility.yul\":1272:1273   */\n  0x01\n    /* \"#utility.yul\":1268:1280   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1315:1327   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1336:1397   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1390:1394   */\n  0x7f\n    /* \"#utility.yul\":1382:1388   */\n  dup3\n    /* \"#utility.yul\":1378:1395   */\n  and\n    /* \"#utility.yul\":1368:1395   */\n  swap2\n  pop\n    /* \"#utility.yul\":1336:1397   */\ntag_32:\n    /* \"#utility.yul\":1443:1445   */\n  0x20\n    /* \"#utility.yul\":1435:1441   */\n  dup3\n    /* \"#utility.yul\":1432:1446   */\n  lt\n    /* \"#utility.yul\":1412:1430   */\n  dup2\n    /* \"#utility.yul\":1409:1447   */\n  sub\n    /* \"#utility.yul\":1406:1567   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1489:1499   */\n  0x4e487b71\n    /* \"#utility.yul\":1484:1487   */\n  0xe0\n    /* \"#utility.yul\":1480:1500   */\n  shl\n    /* \"#utility.yul\":1477:1478   */\n  0x00\n    /* \"#utility.yul\":1470:1501   */\n  mstore\n    /* \"#utility.yul\":1524:1528   */\n  0x22\n    /* \"#utility.yul\":1521:1522   */\n  0x04\n    /* \"#utility.yul\":1514:1529   */\n  mstore\n    /* \"#utility.yul\":1552:1556   */\n  0x24\n    /* \"#utility.yul\":1549:1550   */\n  0x00\n    /* \"#utility.yul\":1542:1557   */\n  revert\n    /* \"#utility.yul\":1406:1567   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1193:1573   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1704:2249   */\ntag_15:\n    /* \"#utility.yul\":1806:1808   */\n  0x1f\n    /* \"#utility.yul\":1801:1804   */\n  dup3\n    /* \"#utility.yul\":1798:1809   */\n  gt\n    /* \"#utility.yul\":1795:2243   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1867:1872   */\n  dup2\n    /* \"#utility.yul\":1863:1865   */\n  dup2\n    /* \"#utility.yul\":1856:1873   */\n  mstore\n    /* \"#utility.yul\":1912:1916   */\n  0x20\n    /* \"#utility.yul\":1908:1910   */\n  dup2\n    /* \"#utility.yul\":1898:1917   */\n  keccak256\n    /* \"#utility.yul\":1982:1984   */\n  0x1f\n    /* \"#utility.yul\":1970:1980   */\n  dup6\n    /* \"#utility.yul\":1966:1985   */\n  add\n    /* \"#utility.yul\":1963:1964   */\n  0x05\n    /* \"#utility.yul\":1959:1986   */\n  shr\n    /* \"#utility.yul\":1953:1957   */\n  dup2\n    /* \"#utility.yul\":1949:1987   */\n  add\n    /* \"#utility.yul\":2018:2022   */\n  0x20\n    /* \"#utility.yul\":2006:2016   */\n  dup7\n    /* \"#utility.yul\":2003:2023   */\n  lt\n    /* \"#utility.yul\":2000:2047   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2041:2045   */\n  dup1\n    /* \"#utility.yul\":2000:2047   */\ntag_37:\n    /* \"#utility.yul\":2096:2098   */\n  0x1f\n    /* \"#utility.yul\":2091:2094   */\n  dup6\n    /* \"#utility.yul\":2087:2099   */\n  add\n    /* \"#utility.yul\":2084:2085   */\n  0x05\n    /* \"#utility.yul\":2080:2100   */\n  shr\n    /* \"#utility.yul\":2074:2078   */\n  dup3\n    /* \"#utility.yul\":2070:2101   */\n  add\n    /* \"#utility.yul\":2060:2101   */\n  swap2\n  pop\n    /* \"#utility.yul\":2151:2233   */\ntag_38:\n    /* \"#utility.yul\":2169:2171   */\n  dup2\n    /* \"#utility.yul\":2162:2167   */\n  dup2\n    /* \"#utility.yul\":2159:2172   */\n  lt\n    /* \"#utility.yul\":2151:2233   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2214:2231   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2195:2196   */\n  0x01\n    /* \"#utility.yul\":2184:2197   */\n  add\n    /* \"#utility.yul\":2151:2233   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2155:2158   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1795:2243   */\ntag_36:\n    /* \"#utility.yul\":1704:2249   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2425:3777   */\ntag_11:\n    /* \"#utility.yul\":2545:2555   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2567:2597   */\n  dup2\n  gt\n    /* \"#utility.yul\":2564:2620   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2600:2618   */\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2629:2726   */\n  tag_45\n    /* \"#utility.yul\":2719:2725   */\n  dup2\n    /* \"#utility.yul\":2679:2717   */\n  tag_46\n    /* \"#utility.yul\":2711:2715   */\n  dup5\n    /* \"#utility.yul\":2705:2716   */\n  sload\n    /* \"#utility.yul\":2679:2717   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2673:2677   */\n  dup5\n    /* \"#utility.yul\":2629:2726   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2781:2785   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2845:2847   */\n  0x1f\n    /* \"#utility.yul\":2834:2848   */\n  dup4\n  gt\n    /* \"#utility.yul\":2862:2863   */\n  0x01\n    /* \"#utility.yul\":2857:3520   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3564:3565   */\n  0x00\n    /* \"#utility.yul\":3581:3587   */\n  dup5\n    /* \"#utility.yul\":3578:3667   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3633:3652   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3627:3653   */\n  mload\n    /* \"#utility.yul\":3578:3667   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2382:2383   */\n  0x03\n    /* \"#utility.yul\":2378:2389   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2374:2398   */\n  shr\n    /* \"#utility.yul\":2370:2399   */\n  not\n    /* \"#utility.yul\":2360:2400   */\n  and\n    /* \"#utility.yul\":2406:2407   */\n  0x01\n    /* \"#utility.yul\":2402:2413   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2357:2414   */\n  or\n    /* \"#utility.yul\":3680:3761   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2827:3771   */\n  jump(tag_40)\n    /* \"#utility.yul\":2857:3520   */\ntag_48:\n    /* \"#utility.yul\":1651:1652   */\n  0x00\n    /* \"#utility.yul\":1644:1658   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1688:1692   */\n  0x20\n    /* \"#utility.yul\":1675:1693   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2893:2913   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3011:3247   */\ntag_52:\n    /* \"#utility.yul\":3025:3032   */\n  dup3\n    /* \"#utility.yul\":3022:3023   */\n  dup2\n    /* \"#utility.yul\":3019:3033   */\n  lt\n    /* \"#utility.yul\":3011:3247   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3114:3133   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3108:3134   */\n  mload\n    /* \"#utility.yul\":3093:3135   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3206:3233   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3174:3175   */\n  0x01\n    /* \"#utility.yul\":3162:3176   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3041:3060   */\n  dup5\n  add\n    /* \"#utility.yul\":3011:3247   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3015:3018   */\n  pop\n    /* \"#utility.yul\":3275:3281   */\n  dup6\n    /* \"#utility.yul\":3266:3273   */\n  dup3\n    /* \"#utility.yul\":3263:3282   */\n  lt\n    /* \"#utility.yul\":3260:3461   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3336:3355   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3330:3356   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3419:3420   */\n  0x03\n    /* \"#utility.yul\":3415:3429   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3431:3434   */\n  0xf8\n    /* \"#utility.yul\":3411:3435   */\n  and\n    /* \"#utility.yul\":3407:3444   */\n  shr\n    /* \"#utility.yul\":3403:3445   */\n  not\n    /* \"#utility.yul\":3388:3446   */\n  and\n    /* \"#utility.yul\":3373:3447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3260:3461   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3507:3508   */\n  0x01\n    /* \"#utility.yul\":3491:3505   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3487:3509   */\n  add\n    /* \"#utility.yul\":3474:3510   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2425:3777   */\n  jump\t// out\ntag_17:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":574:15738  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3559:3563  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3601  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3610  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3583:3620  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2325:2332  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2353:2374  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8191:8212   */\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x2b\n        /* \"#utility.yul\":8228:8246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8221:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8321   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8267:8285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8260:8322   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8331:8372   */\n      mstore\n        /* \"#utility.yul\":8389:8408   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2345:2422  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2449  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2453  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2440:2462  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2239:2470  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1262:1572  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1364:1368  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1442  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1459:1511  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1511  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1401:1564  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_53\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1528:1564  super.supportsInterface(interfaceId) */\n      tag_53\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2043:2056  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2076:2080  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2069:2080  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1983:2088  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4431  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4411:4471  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4452:4456  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4435:4471  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8988:9009   */\n      mstore\n        /* \"#utility.yul\":9045:9047   */\n      0x32\n        /* \"#utility.yul\":9025:9043   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9018:9048   */\n      mstore\n        /* \"#utility.yul\":9084:9118   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9064:9082   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9057:9119   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9135:9153   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9128:9176   */\n      mstore\n        /* \"#utility.yul\":9193:9212   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n      tag_55\n        /* \"#utility.yul\":8804:9218   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4389:4549  require(... */\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4583:4587  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4589:4591  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4593:4596  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4598:4605  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4607:4611  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4582  _safeBatchTransferFrom */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4560:4612  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4178:4620  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2792:2808  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2856  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2853:2863  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2842  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2849  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2834:2863  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9425:9427   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9407:9428   */\n      mstore\n        /* \"#utility.yul\":9464:9466   */\n      0x29\n        /* \"#utility.yul\":9444:9462   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9437:9467   */\n      mstore\n        /* \"#utility.yul\":9503:9537   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9483:9501   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9476:9538   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9554:9572   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9547:9586   */\n      mstore\n        /* \"#utility.yul\":9603:9622   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9223:9628   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2826:2909  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2952  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2977  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2969:2984  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2955:2985  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2922:2985  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3003:3012  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3030  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3037  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3037  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3096  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3097:3098  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3088:3099  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3104  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3105:3106  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3101:3107  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3087  balanceOf */\n      tag_15\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3078:3108  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3072  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3073:3074  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3075  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3059:3108  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3039:3042  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2998:3120  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3139:3152  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2636:3160  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3361:3369  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3371:3379  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3346  _setApprovalForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3328:3380  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3233:3388  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3700:4101  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3928  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3968  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3953  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3460:3628  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3932:3968  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10239:10241   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10221:10242   */\n      mstore\n        /* \"#utility.yul\":10278:10280   */\n      0x29\n        /* \"#utility.yul\":10258:10276   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10251:10281   */\n      mstore\n        /* \"#utility.yul\":10317:10351   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10297:10315   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10290:10352   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10368:10386   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10361:10400   */\n      mstore\n        /* \"#utility.yul\":10417:10436   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n      tag_55\n        /* \"#utility.yul\":10037:10442   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3886:4037  require(... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4066:4070  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4072:4074  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4076:4078  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4080:4086  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4088:4092  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4065  _safeTransferFrom */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4048:4093  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6496  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6489:6503  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6478  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6485  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6475:6503  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10649:10651   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10631:10652   */\n      mstore\n        /* \"#utility.yul\":10688:10690   */\n      0x28\n        /* \"#utility.yul\":10668:10686   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10661:10691   */\n      mstore\n        /* \"#utility.yul\":10727:10761   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10707:10725   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10700:10762   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10778:10796   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10771:10809   */\n      mstore\n        /* \"#utility.yul\":10826:10845   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10447:10851   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6467:6548  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6583  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6559:6625  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6638:6654  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6782  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6779:6789  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6776  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6775:6789  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6821  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6827  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6828:6829  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6824:6830  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6811:6830  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6845:6859  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6869  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6870:6871  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6889:6908  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6924  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6911:6930  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6862:6872  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6953:6974  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6945:7021  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7078  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7084  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7107  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7154  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7065:7074  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7107  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7137:7164  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6796:7176  {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6791:6794  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7176  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7225  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7217:7221  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7207:7215  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7230  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7232:7239  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7193:7240  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7289:7297  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7303  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7305:7307  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7309:7312  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7321  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7323:7327  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7288  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7253:7328  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6456:7336  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6262:7336  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12603:12611  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12599  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12594:12611  owner != operator */\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12475:12477   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12457:12478   */\n      mstore\n        /* \"#utility.yul\":12514:12516   */\n      0x29\n        /* \"#utility.yul\":12494:12512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12487:12517   */\n      mstore\n        /* \"#utility.yul\":12553:12587   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12533:12551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12526:12588   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12604:12622   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12597:12636   */\n      mstore\n        /* \"#utility.yul\":12653:12672   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12273:12678   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12586:12657  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12686  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12693  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12703  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12668:12714  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12730:12771  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12448:12779  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5272:5288  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5330  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5418:5422  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5424:5426  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      tag_155\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5446:5448  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5445  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5428:5449  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5469:5475  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5468  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5451:5476  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5483  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5496:5515  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5531  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5518:5537  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5556:5577  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5548:5624  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5702  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5741  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5682:5702  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5724:5751  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12857:12882   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12913:12915   */\n      0x20\n        /* \"#utility.yul\":12898:12916   */\n      dup2\n      add\n        /* \"#utility.yul\":12891:12925   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12830:12848   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5769:5815  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5859:5867  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5873  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5875:5877  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5879:5881  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5883:5889  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5891:5895  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5858  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5828:5896  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5253:5904  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5084:5904  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14716:15529  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14956:14969  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14952:15522  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15035  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15036:15044  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15046:15050  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15052:15055  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15057:15064  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15066:15070  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14992:15071  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_173\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x01\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_175\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      dup1\n      0x08c379a0\n      sub\n      tag_178\n      jumpi\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      tag_183\n      jumpi\n      pop\n      jump(tag_177)\n    tag_183:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15384:15390  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15377:15391  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      pop\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15066:15087   */\n      mstore\n        /* \"#utility.yul\":15123:15125   */\n      0x34\n        /* \"#utility.yul\":15103:15121   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15096:15126   */\n      mstore\n        /* \"#utility.yul\":15162:15196   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15142:15160   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15135:15197   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15213:15231   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15206:15256   */\n      mstore\n        /* \"#utility.yul\":15273:15292   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15433:15495  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14882:15298   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14988:15511  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_175:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15213  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15308  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15238:15288  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15671:15672  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15603:15619  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15654  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15657:15673  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15632:15673  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15695:15702  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15689  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15690:15691  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15692  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_94\n      jump\t// in\n    tag_196:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15684:15702  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15722:15727  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:15735  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13964:14708  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14179:14192  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14175:14701  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14253  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_200\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14254:14262  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14264:14268  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14270:14272  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14274:14280  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:14286  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14215:14287  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_203\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14211:14690  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_204:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14337:14392  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14333:14487  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14417:14467  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_217:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_228:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_230:\n        /* \"#utility.yul\":360:389   */\n      tag_231\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_217\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_234:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_236:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_237\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_218\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_219:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_242:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_242)\n    tag_244:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_29:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_237\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_219\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_86:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_220:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_250\n      tag_86\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_221:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_253\n      tag_86\n      jump\t// in\n    tag_253:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_222:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_255:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_256\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_257\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_258:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_259:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_259)\n    tag_261:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_223:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_263:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_265\n      tag_86\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_266\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_220\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_267:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4855   */\n    tag_32:\n        /* \"#utility.yul\":4066:4072   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup1\n        /* \"#utility.yul\":4082:4088   */\n      0x00\n        /* \"#utility.yul\":4090:4096   */\n      dup1\n        /* \"#utility.yul\":4098:4104   */\n      0x00\n        /* \"#utility.yul\":4151:4154   */\n      0xa0\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4130:4137   */\n      dup9\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4155   */\n      slt\n        /* \"#utility.yul\":4119:4172   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4119:4172   */\n    tag_269:\n        /* \"#utility.yul\":4191:4220   */\n      tag_270\n        /* \"#utility.yul\":4210:4219   */\n      dup7\n        /* \"#utility.yul\":4191:4220   */\n      tag_217\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4181:4220   */\n      swap5\n      pop\n        /* \"#utility.yul\":4239:4277   */\n      tag_271\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup8\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4239:4277   */\n      tag_217\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4229:4277   */\n      swap4\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup7\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4300:4332   */\n      calldataload\n        /* \"#utility.yul\":4351:4369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4392:4394   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4395   */\n      gt\n        /* \"#utility.yul\":4378:4412   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4405:4406   */\n      dup1\n        /* \"#utility.yul\":4398:4410   */\n      revert\n        /* \"#utility.yul\":4378:4412   */\n    tag_272:\n        /* \"#utility.yul\":4431:4492   */\n      tag_273\n        /* \"#utility.yul\":4484:4491   */\n      dup10\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4464:4473   */\n      dup11\n        /* \"#utility.yul\":4460:4482   */\n      add\n        /* \"#utility.yul\":4431:4492   */\n      tag_222\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4421:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x60\n        /* \"#utility.yul\":4534:4543   */\n      dup9\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n        /* \"#utility.yul\":4501:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      dup1\n        /* \"#utility.yul\":4564:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4577   */\n      gt\n        /* \"#utility.yul\":4558:4594   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4558:4594   */\n    tag_274:\n        /* \"#utility.yul\":4613:4676   */\n      tag_275\n        /* \"#utility.yul\":4668:4675   */\n      dup10\n        /* \"#utility.yul\":4657:4665   */\n      dup4\n        /* \"#utility.yul\":4646:4655   */\n      dup11\n        /* \"#utility.yul\":4642:4666   */\n      add\n        /* \"#utility.yul\":4613:4676   */\n      tag_222\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4603:4676   */\n      swap4\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4733   */\n      add\n        /* \"#utility.yul\":4701:4734   */\n      calldataload\n        /* \"#utility.yul\":4685:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      dup1\n        /* \"#utility.yul\":4749:4757   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      gt\n        /* \"#utility.yul\":4743:4779   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup1\n        /* \"#utility.yul\":4765:4777   */\n      revert\n        /* \"#utility.yul\":4743:4779   */\n    tag_276:\n      pop\n        /* \"#utility.yul\":4798:4849   */\n      tag_277\n        /* \"#utility.yul\":4841:4848   */\n      dup9\n        /* \"#utility.yul\":4830:4838   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup10\n        /* \"#utility.yul\":4815:4839   */\n      add\n        /* \"#utility.yul\":4798:4849   */\n      tag_223\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4788:4849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4855   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:6068   */\n    tag_36:\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":4986:4992   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5014:5037   */\n      sub\n        /* \"#utility.yul\":5010:5042   */\n      slt\n        /* \"#utility.yul\":5007:5059   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5007:5059   */\n    tag_279:\n        /* \"#utility.yul\":5095:5104   */\n      dup3\n        /* \"#utility.yul\":5082:5105   */\n      calldataload\n        /* \"#utility.yul\":5124:5142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5165:5167   */\n      dup1\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      gt\n        /* \"#utility.yul\":5151:5185   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5151:5185   */\n    tag_280:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5208:5217   */\n      dup6\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5271   */\n      dup6\n        /* \"#utility.yul\":5257:5261   */\n      0x1f\n        /* \"#utility.yul\":5253:5255   */\n      dup4\n        /* \"#utility.yul\":5249:5262   */\n      add\n        /* \"#utility.yul\":5245:5272   */\n      slt\n        /* \"#utility.yul\":5235:5290   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5283:5284   */\n      dup1\n        /* \"#utility.yul\":5276:5288   */\n      revert\n        /* \"#utility.yul\":5235:5290   */\n    tag_281:\n        /* \"#utility.yul\":5322:5324   */\n      dup2\n        /* \"#utility.yul\":5309:5325   */\n      calldataload\n        /* \"#utility.yul\":5344:5348   */\n      0x20\n        /* \"#utility.yul\":5367:5410   */\n      tag_282\n        /* \"#utility.yul\":5407:5409   */\n      dup3\n        /* \"#utility.yul\":5367:5410   */\n      tag_221\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5439:5441   */\n      0x40\n        /* \"#utility.yul\":5433:5442   */\n      mload\n        /* \"#utility.yul\":5451:5482   */\n      tag_283\n        /* \"#utility.yul\":5479:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5451:5482   */\n      tag_220\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5517:5535   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5606   */\n      0x05\n        /* \"#utility.yul\":5601:5611   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5593:5612   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5617   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5551:5566   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5648   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5626:5665   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5626:5665   */\n    tag_284:\n        /* \"#utility.yul\":5685:5696   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5705:5853   */\n    tag_285:\n        /* \"#utility.yul\":5721:5727   */\n      dup4\n        /* \"#utility.yul\":5716:5719   */\n      dup7\n        /* \"#utility.yul\":5713:5728   */\n      lt\n        /* \"#utility.yul\":5705:5853   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5787:5810   */\n      tag_288\n        /* \"#utility.yul\":5806:5809   */\n      dup7\n        /* \"#utility.yul\":5787:5810   */\n      tag_217\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5775:5811   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5738:5750   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5831:5843   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5705:5853   */\n      jump(tag_285)\n    tag_287:\n        /* \"#utility.yul\":5872:5878   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5916:5934   */\n      dup7\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5947:5963   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5944:5980   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5973:5974   */\n      dup1\n        /* \"#utility.yul\":5966:5978   */\n      revert\n        /* \"#utility.yul\":5944:5980   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":5999:6062   */\n      tag_290\n        /* \"#utility.yul\":6054:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6051   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup7\n        /* \"#utility.yul\":6028:6052   */\n      add\n        /* \"#utility.yul\":5999:6062   */\n      tag_222\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5989:6062   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4860:6068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6508   */\n    tag_224:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6158:6170   */\n      mload\n        /* \"#utility.yul\":6191:6197   */\n      dup1\n        /* \"#utility.yul\":6186:6189   */\n      dup5\n        /* \"#utility.yul\":6179:6198   */\n      mstore\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6241:6244   */\n      dup6\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap5\n      pop\n        /* \"#utility.yul\":6283:6285   */\n      dup1\n        /* \"#utility.yul\":6276:6281   */\n      dup5\n        /* \"#utility.yul\":6272:6286   */\n      add\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6314:6483   */\n    tag_292:\n        /* \"#utility.yul\":6328:6334   */\n      dup4\n        /* \"#utility.yul\":6325:6326   */\n      dup2\n        /* \"#utility.yul\":6322:6335   */\n      lt\n        /* \"#utility.yul\":6314:6483   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6389:6402   */\n      dup2\n      mload\n        /* \"#utility.yul\":6377:6403   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6423:6435   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6458:6473   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6350:6351   */\n      0x01\n        /* \"#utility.yul\":6343:6352   */\n      add\n        /* \"#utility.yul\":6314:6483   */\n      jump(tag_292)\n    tag_294:\n      pop\n        /* \"#utility.yul\":6499:6502   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6073:6508   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6774   */\n    tag_39:\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup2\n        /* \"#utility.yul\":6674:6695   */\n      mstore\n        /* \"#utility.yul\":6655:6659   */\n      0x00\n        /* \"#utility.yul\":6712:6768   */\n      tag_237\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup4\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6712:6768   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":6779:7126   */\n    tag_42:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6884:6891   */\n      dup6\n        /* \"#utility.yul\":6880:6903   */\n      sub\n        /* \"#utility.yul\":6876:6908   */\n      slt\n        /* \"#utility.yul\":6873:6925   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6921:6922   */\n      0x00\n        /* \"#utility.yul\":6918:6919   */\n      dup1\n        /* \"#utility.yul\":6911:6923   */\n      revert\n        /* \"#utility.yul\":6873:6925   */\n    tag_298:\n        /* \"#utility.yul\":6944:6973   */\n      tag_299\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6944:6973   */\n      tag_217\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6934:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7026   */\n      add\n        /* \"#utility.yul\":6995:7027   */\n      calldataload\n        /* \"#utility.yul\":7070:7075   */\n      dup1\n        /* \"#utility.yul\":7063:7076   */\n      iszero\n        /* \"#utility.yul\":7056:7077   */\n      iszero\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7046:7078   */\n      eq\n        /* \"#utility.yul\":7036:7096   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7089:7090   */\n      dup1\n        /* \"#utility.yul\":7082:7094   */\n      revert\n        /* \"#utility.yul\":7036:7096   */\n    tag_300:\n        /* \"#utility.yul\":7115:7120   */\n      dup1\n        /* \"#utility.yul\":7105:7120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6779:7126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7391   */\n    tag_46:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7207:7213   */\n      dup1\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7248:7257   */\n      dup4\n        /* \"#utility.yul\":7239:7246   */\n      dup6\n        /* \"#utility.yul\":7235:7258   */\n      sub\n        /* \"#utility.yul\":7231:7263   */\n      slt\n        /* \"#utility.yul\":7228:7280   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7273:7274   */\n      dup1\n        /* \"#utility.yul\":7266:7278   */\n      revert\n        /* \"#utility.yul\":7228:7280   */\n    tag_302:\n        /* \"#utility.yul\":7299:7328   */\n      tag_303\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7299:7328   */\n      tag_217\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7289:7328   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7385   */\n      tag_304\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup5\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7347:7385   */\n      tag_217\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7337:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:8002   */\n    tag_51:\n        /* \"#utility.yul\":7500:7506   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup1\n        /* \"#utility.yul\":7516:7522   */\n      0x00\n        /* \"#utility.yul\":7524:7530   */\n      dup1\n        /* \"#utility.yul\":7532:7538   */\n      0x00\n        /* \"#utility.yul\":7585:7588   */\n      0xa0\n        /* \"#utility.yul\":7573:7582   */\n      dup7\n        /* \"#utility.yul\":7564:7571   */\n      dup9\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7589   */\n      slt\n        /* \"#utility.yul\":7553:7606   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7553:7606   */\n    tag_306:\n        /* \"#utility.yul\":7625:7654   */\n      tag_307\n        /* \"#utility.yul\":7644:7653   */\n      dup7\n        /* \"#utility.yul\":7625:7654   */\n      tag_217\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7615:7654   */\n      swap5\n      pop\n        /* \"#utility.yul\":7673:7711   */\n      tag_308\n        /* \"#utility.yul\":7707:7709   */\n      0x20\n        /* \"#utility.yul\":7696:7705   */\n      dup8\n        /* \"#utility.yul\":7692:7710   */\n      add\n        /* \"#utility.yul\":7673:7711   */\n      tag_217\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7663:7711   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7762   */\n      calldataload\n        /* \"#utility.yul\":7720:7762   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7798:7807   */\n      dup7\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7781:7813   */\n      calldataload\n        /* \"#utility.yul\":7771:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7864:7867   */\n      0x80\n        /* \"#utility.yul\":7853:7862   */\n      dup7\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7836:7869   */\n      calldataload\n        /* \"#utility.yul\":7892:7910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7884:7890   */\n      dup2\n        /* \"#utility.yul\":7881:7911   */\n      gt\n        /* \"#utility.yul\":7878:7928   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7924:7925   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup1\n        /* \"#utility.yul\":7914:7926   */\n      revert\n        /* \"#utility.yul\":7878:7928   */\n    tag_309:\n        /* \"#utility.yul\":7947:7996   */\n      tag_277\n        /* \"#utility.yul\":7988:7995   */\n      dup9\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7968:7977   */\n      dup10\n        /* \"#utility.yul\":7964:7986   */\n      add\n        /* \"#utility.yul\":7947:7996   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":8419:8799   */\n    tag_64:\n        /* \"#utility.yul\":8498:8499   */\n      0x01\n        /* \"#utility.yul\":8494:8506   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8541:8553   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8562:8623   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8616:8620   */\n      0x7f\n        /* \"#utility.yul\":8608:8614   */\n      dup3\n        /* \"#utility.yul\":8604:8621   */\n      and\n        /* \"#utility.yul\":8594:8621   */\n      swap2\n      pop\n        /* \"#utility.yul\":8562:8623   */\n    tag_313:\n        /* \"#utility.yul\":8669:8671   */\n      0x20\n        /* \"#utility.yul\":8661:8667   */\n      dup3\n        /* \"#utility.yul\":8658:8672   */\n      lt\n        /* \"#utility.yul\":8638:8656   */\n      dup2\n        /* \"#utility.yul\":8635:8673   */\n      sub\n        /* \"#utility.yul\":8632:8793   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8715:8725   */\n      0x4e487b71\n        /* \"#utility.yul\":8710:8713   */\n      0xe0\n        /* \"#utility.yul\":8706:8726   */\n      shl\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8696:8727   */\n      mstore\n        /* \"#utility.yul\":8750:8754   */\n      0x22\n        /* \"#utility.yul\":8747:8748   */\n      0x04\n        /* \"#utility.yul\":8740:8755   */\n      mstore\n        /* \"#utility.yul\":8778:8782   */\n      0x24\n        /* \"#utility.yul\":8775:8776   */\n      0x00\n        /* \"#utility.yul\":8768:8783   */\n      revert\n        /* \"#utility.yul\":8632:8793   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":8419:8799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9633:9760   */\n    tag_94:\n        /* \"#utility.yul\":9694:9704   */\n      0x4e487b71\n        /* \"#utility.yul\":9689:9692   */\n      0xe0\n        /* \"#utility.yul\":9685:9705   */\n      shl\n        /* \"#utility.yul\":9682:9683   */\n      0x00\n        /* \"#utility.yul\":9675:9706   */\n      mstore\n        /* \"#utility.yul\":9725:9729   */\n      0x32\n        /* \"#utility.yul\":9722:9723   */\n      0x04\n        /* \"#utility.yul\":9715:9730   */\n      mstore\n        /* \"#utility.yul\":9749:9753   */\n      0x24\n        /* \"#utility.yul\":9746:9747   */\n      0x00\n        /* \"#utility.yul\":9739:9754   */\n      revert\n        /* \"#utility.yul\":9765:9892   */\n    tag_225:\n        /* \"#utility.yul\":9826:9836   */\n      0x4e487b71\n        /* \"#utility.yul\":9821:9824   */\n      0xe0\n        /* \"#utility.yul\":9817:9837   */\n      shl\n        /* \"#utility.yul\":9814:9815   */\n      0x00\n        /* \"#utility.yul\":9807:9838   */\n      mstore\n        /* \"#utility.yul\":9857:9861   */\n      0x11\n        /* \"#utility.yul\":9854:9855   */\n      0x04\n        /* \"#utility.yul\":9847:9862   */\n      mstore\n        /* \"#utility.yul\":9881:9885   */\n      0x24\n        /* \"#utility.yul\":9878:9879   */\n      0x00\n        /* \"#utility.yul\":9871:9886   */\n      revert\n        /* \"#utility.yul\":9897:10032   */\n    tag_100:\n        /* \"#utility.yul\":9936:9939   */\n      0x00\n        /* \"#utility.yul\":9957:9974   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9954:9997   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":9977:9995   */\n      tag_321\n      tag_225\n      jump\t// in\n    tag_321:\n      pop\n        /* \"#utility.yul\":10024:10025   */\n      0x01\n        /* \"#utility.yul\":10013:10026   */\n      add\n      swap1\n        /* \"#utility.yul\":9897:10032   */\n      jump\t// out\n        /* \"#utility.yul\":10856:11257   */\n    tag_124:\n        /* \"#utility.yul\":11058:11060   */\n      0x20\n        /* \"#utility.yul\":11040:11061   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11097:11099   */\n      0x25\n        /* \"#utility.yul\":11077:11095   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11070:11100   */\n      mstore\n        /* \"#utility.yul\":11136:11170   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11131:11133   */\n      0x40\n        /* \"#utility.yul\":11116:11134   */\n      dup3\n      add\n        /* \"#utility.yul\":11109:11171   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11202:11204   */\n      0x60\n        /* \"#utility.yul\":11187:11205   */\n      dup3\n      add\n        /* \"#utility.yul\":11180:11215   */\n      mstore\n        /* \"#utility.yul\":11247:11250   */\n      0x80\n        /* \"#utility.yul\":11232:11251   */\n      add\n      swap1\n        /* \"#utility.yul\":10856:11257   */\n      jump\t// out\n        /* \"#utility.yul\":11262:11668   */\n    tag_137:\n        /* \"#utility.yul\":11464:11466   */\n      0x20\n        /* \"#utility.yul\":11446:11467   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11503:11505   */\n      0x2a\n        /* \"#utility.yul\":11483:11501   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11476:11506   */\n      mstore\n        /* \"#utility.yul\":11542:11576   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11537:11539   */\n      0x40\n        /* \"#utility.yul\":11522:11540   */\n      dup3\n      add\n        /* \"#utility.yul\":11515:11577   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11608:11610   */\n      0x60\n        /* \"#utility.yul\":11593:11611   */\n      dup3\n      add\n        /* \"#utility.yul\":11586:11626   */\n      mstore\n        /* \"#utility.yul\":11658:11661   */\n      0x80\n        /* \"#utility.yul\":11643:11662   */\n      add\n      swap1\n        /* \"#utility.yul\":11262:11668   */\n      jump\t// out\n        /* \"#utility.yul\":11673:11798   */\n    tag_139:\n        /* \"#utility.yul\":11738:11747   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11759:11769   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11756:11792   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":11772:11790   */\n      tag_53\n      tag_225\n      jump\t// in\n        /* \"#utility.yul\":11803:12268   */\n    tag_142:\n        /* \"#utility.yul\":12060:12062   */\n      0x40\n        /* \"#utility.yul\":12049:12058   */\n      dup2\n        /* \"#utility.yul\":12042:12063   */\n      mstore\n        /* \"#utility.yul\":12023:12027   */\n      0x00\n        /* \"#utility.yul\":12086:12142   */\n      tag_330\n        /* \"#utility.yul\":12138:12140   */\n      0x40\n        /* \"#utility.yul\":12127:12136   */\n      dup4\n        /* \"#utility.yul\":12123:12141   */\n      add\n        /* \"#utility.yul\":12115:12121   */\n      dup6\n        /* \"#utility.yul\":12086:12142   */\n      tag_224\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12190:12199   */\n      dup3\n        /* \"#utility.yul\":12182:12188   */\n      dup2\n        /* \"#utility.yul\":12178:12200   */\n      sub\n        /* \"#utility.yul\":12173:12175   */\n      0x20\n        /* \"#utility.yul\":12162:12171   */\n      dup5\n        /* \"#utility.yul\":12158:12176   */\n      add\n        /* \"#utility.yul\":12151:12201   */\n      mstore\n        /* \"#utility.yul\":12218:12262   */\n      tag_331\n        /* \"#utility.yul\":12255:12261   */\n      dup2\n        /* \"#utility.yul\":12247:12253   */\n      dup6\n        /* \"#utility.yul\":12218:12262   */\n      tag_224\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12210:12262   */\n      swap6\n        /* \"#utility.yul\":11803:12268   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12936:13763   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13333:13348   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13315:13349   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13385:13400   */\n      dup6\n      and\n        /* \"#utility.yul\":13380:13382   */\n      0x20\n        /* \"#utility.yul\":13365:13383   */\n      dup3\n      add\n        /* \"#utility.yul\":13358:13401   */\n      mstore\n        /* \"#utility.yul\":13295:13298   */\n      0xa0\n        /* \"#utility.yul\":13432:13434   */\n      0x40\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13441   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13258:13262   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13464:13521   */\n      tag_335\n      swap1\n        /* \"#utility.yul\":13501:13520   */\n      dup4\n      add\n        /* \"#utility.yul\":13493:13499   */\n      dup7\n        /* \"#utility.yul\":13464:13521   */\n      tag_224\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13569:13578   */\n      dup3\n        /* \"#utility.yul\":13561:13567   */\n      dup2\n        /* \"#utility.yul\":13557:13579   */\n      sub\n        /* \"#utility.yul\":13552:13554   */\n      0x60\n        /* \"#utility.yul\":13541:13550   */\n      dup5\n        /* \"#utility.yul\":13537:13555   */\n      add\n        /* \"#utility.yul\":13530:13580   */\n      mstore\n        /* \"#utility.yul\":13603:13647   */\n      tag_336\n        /* \"#utility.yul\":13640:13646   */\n      dup2\n        /* \"#utility.yul\":13632:13638   */\n      dup7\n        /* \"#utility.yul\":13603:13647   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13589:13647   */\n      swap1\n      pop\n        /* \"#utility.yul\":13696:13705   */\n      dup3\n        /* \"#utility.yul\":13688:13694   */\n      dup2\n        /* \"#utility.yul\":13684:13706   */\n      sub\n        /* \"#utility.yul\":13678:13681   */\n      0x80\n        /* \"#utility.yul\":13667:13676   */\n      dup5\n        /* \"#utility.yul\":13663:13682   */\n      add\n        /* \"#utility.yul\":13656:13707   */\n      mstore\n        /* \"#utility.yul\":13724:13757   */\n      tag_337\n        /* \"#utility.yul\":13750:13756   */\n      dup2\n        /* \"#utility.yul\":13742:13748   */\n      dup6\n        /* \"#utility.yul\":13724:13757   */\n      tag_219\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13716:13757   */\n      swap9\n        /* \"#utility.yul\":12936:13763   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13768:14017   */\n    tag_174:\n        /* \"#utility.yul\":13837:13843   */\n      0x00\n        /* \"#utility.yul\":13890:13892   */\n      0x20\n        /* \"#utility.yul\":13878:13887   */\n      dup3\n        /* \"#utility.yul\":13869:13876   */\n      dup5\n        /* \"#utility.yul\":13865:13888   */\n      sub\n        /* \"#utility.yul\":13861:13893   */\n      slt\n        /* \"#utility.yul\":13858:13910   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13903:13904   */\n      dup1\n        /* \"#utility.yul\":13896:13908   */\n      revert\n        /* \"#utility.yul\":13858:13910   */\n    tag_339:\n        /* \"#utility.yul\":13938:13947   */\n      dup2\n        /* \"#utility.yul\":13932:13948   */\n      mload\n        /* \"#utility.yul\":13957:13987   */\n      tag_237\n        /* \"#utility.yul\":13981:13986   */\n      dup2\n        /* \"#utility.yul\":13957:13987   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":14022:14201   */\n    tag_180:\n        /* \"#utility.yul\":14057:14060   */\n      0x00\n        /* \"#utility.yul\":14099:14100   */\n      0x03\n        /* \"#utility.yul\":14081:14097   */\n      returndatasize\n        /* \"#utility.yul\":14078:14101   */\n      gt\n        /* \"#utility.yul\":14075:14195   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":14145:14146   */\n      0x04\n        /* \"#utility.yul\":14142:14143   */\n      0x00\n        /* \"#utility.yul\":14139:14140   */\n      dup1\n        /* \"#utility.yul\":14124:14147   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14182:14183   */\n      0x00\n        /* \"#utility.yul\":14176:14184   */\n      mload\n        /* \"#utility.yul\":14171:14174   */\n      0xe0\n        /* \"#utility.yul\":14167:14185   */\n      shr\n        /* \"#utility.yul\":14075:14195   */\n    tag_342:\n        /* \"#utility.yul\":14022:14201   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14206:14877   */\n    tag_182:\n        /* \"#utility.yul\":14245:14248   */\n      0x00\n        /* \"#utility.yul\":14287:14291   */\n      0x44\n        /* \"#utility.yul\":14269:14285   */\n      returndatasize\n        /* \"#utility.yul\":14266:14292   */\n      lt\n        /* \"#utility.yul\":14263:14302   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":14206:14877   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14263:14302   */\n    tag_344:\n        /* \"#utility.yul\":14329:14331   */\n      0x40\n        /* \"#utility.yul\":14323:14332   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14394:14410   */\n      returndatasize\n        /* \"#utility.yul\":14390:14415   */\n      dup2\n      add\n        /* \"#utility.yul\":14387:14388   */\n      0x04\n        /* \"#utility.yul\":14323:14332   */\n      dup4\n        /* \"#utility.yul\":14366:14416   */\n      returndatacopy\n        /* \"#utility.yul\":14445:14449   */\n      dup2\n        /* \"#utility.yul\":14439:14450   */\n      mload\n        /* \"#utility.yul\":14469:14485   */\n      returndatasize\n        /* \"#utility.yul\":14504:14522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14575:14577   */\n      dup2\n        /* \"#utility.yul\":14568:14572   */\n      0x24\n        /* \"#utility.yul\":14560:14566   */\n      dup5\n        /* \"#utility.yul\":14556:14573   */\n      add\n        /* \"#utility.yul\":14553:14578   */\n      gt\n        /* \"#utility.yul\":14548:14550   */\n      dup2\n        /* \"#utility.yul\":14540:14546   */\n      dup5\n        /* \"#utility.yul\":14537:14551   */\n      gt\n        /* \"#utility.yul\":14534:14579   */\n      or\n        /* \"#utility.yul\":14531:14589   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14582:14587   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14206:14877   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14531:14589   */\n    tag_345:\n        /* \"#utility.yul\":14619:14625   */\n      dup3\n        /* \"#utility.yul\":14613:14617   */\n      dup6\n        /* \"#utility.yul\":14609:14626   */\n      add\n        /* \"#utility.yul\":14598:14626   */\n      swap2\n      pop\n        /* \"#utility.yul\":14655:14658   */\n      dup2\n        /* \"#utility.yul\":14649:14659   */\n      mload\n        /* \"#utility.yul\":14682:14684   */\n      dup2\n        /* \"#utility.yul\":14674:14680   */\n      dup2\n        /* \"#utility.yul\":14671:14685   */\n      gt\n        /* \"#utility.yul\":14668:14695   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14688:14693   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14206:14877   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14668:14695   */\n    tag_346:\n        /* \"#utility.yul\":14772:14774   */\n      dup5\n        /* \"#utility.yul\":14753:14769   */\n      returndatasize\n        /* \"#utility.yul\":14747:14751   */\n      dup8\n        /* \"#utility.yul\":14743:14770   */\n      add\n        /* \"#utility.yul\":14739:14775   */\n      add\n        /* \"#utility.yul\":14732:14736   */\n      0x20\n        /* \"#utility.yul\":14723:14729   */\n      dup3\n        /* \"#utility.yul\":14718:14721   */\n      dup6\n        /* \"#utility.yul\":14714:14730   */\n      add\n        /* \"#utility.yul\":14710:14737   */\n      add\n        /* \"#utility.yul\":14707:14776   */\n      gt\n        /* \"#utility.yul\":14704:14786   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14779:14784   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14206:14877   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14704:14786   */\n    tag_347:\n        /* \"#utility.yul\":14795:14852   */\n      tag_348\n        /* \"#utility.yul\":14846:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14843   */\n      dup3\n        /* \"#utility.yul\":14829:14835   */\n      dup7\n        /* \"#utility.yul\":14825:14844   */\n      add\n        /* \"#utility.yul\":14821:14851   */\n      add\n        /* \"#utility.yul\":14815:14819   */\n      dup8\n        /* \"#utility.yul\":14795:14852   */\n      tag_220\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":14868:14871   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14206:14877   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15707   */\n    tag_190:\n        /* \"#utility.yul\":15505:15507   */\n      0x20\n        /* \"#utility.yul\":15487:15508   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15544:15546   */\n      0x28\n        /* \"#utility.yul\":15524:15542   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15517:15547   */\n      mstore\n        /* \"#utility.yul\":15583:15617   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15578:15580   */\n      0x40\n        /* \"#utility.yul\":15563:15581   */\n      dup3\n      add\n        /* \"#utility.yul\":15556:15618   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15649:15651   */\n      0x60\n        /* \"#utility.yul\":15634:15652   */\n      dup3\n      add\n        /* \"#utility.yul\":15627:15665   */\n      mstore\n        /* \"#utility.yul\":15697:15700   */\n      0x80\n        /* \"#utility.yul\":15682:15701   */\n      add\n      swap1\n        /* \"#utility.yul\":15303:15707   */\n      jump\t// out\n        /* \"#utility.yul\":15712:16273   */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16009:16024   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15991:16025   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16061:16076   */\n      dup6\n      and\n        /* \"#utility.yul\":16056:16058   */\n      0x20\n        /* \"#utility.yul\":16041:16059   */\n      dup3\n      add\n        /* \"#utility.yul\":16034:16077   */\n      mstore\n        /* \"#utility.yul\":16108:16110   */\n      0x40\n        /* \"#utility.yul\":16093:16111   */\n      dup2\n      add\n        /* \"#utility.yul\":16086:16120   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16151:16153   */\n      0x60\n        /* \"#utility.yul\":16136:16154   */\n      dup2\n      add\n        /* \"#utility.yul\":16129:16163   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15971:15974   */\n      0xa0\n        /* \"#utility.yul\":16194:16197   */\n      0x80\n        /* \"#utility.yul\":16179:16198   */\n      dup3\n      add\n        /* \"#utility.yul\":16172:16204   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15934:15938   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16221:16267   */\n      tag_352\n      swap1\n        /* \"#utility.yul\":16247:16266   */\n      dup4\n      add\n        /* \"#utility.yul\":16239:16245   */\n      dup5\n        /* \"#utility.yul\":16221:16267   */\n      tag_219\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16213:16267   */\n      swap8\n        /* \"#utility.yul\":15712:16273   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206d237c68c3f7ec3bf01178d77250f64946dfe8ea7b438ab21d69ca7dc1d9dea764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_876": {
									"entryPoint": 70,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3779:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:951:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:10"
															},
															"nodeType": "YulIf",
															"src": "268:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:10"
															},
															"nodeType": "YulIf",
															"src": "405:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:10"
															},
															"nodeType": "YulIf",
															"src": "489:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:10"
															},
															"nodeType": "YulIf",
															"src": "581:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:10"
															},
															"nodeType": "YulIf",
															"src": "764:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:10"
															},
															"nodeType": "YulIf",
															"src": "903:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:10",
																"statements": []
															},
															"src": "984:129:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1145:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1133:15:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:24:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1176:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1166:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "146:1042:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1248:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1258:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1275:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1289:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1319:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1293:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1368:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1382:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1378:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1346:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:26:10"
															},
															"nodeType": "YulIf",
															"src": "1336:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1484:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1489:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1480:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1480:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1524:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1514:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1514:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1542:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1412:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1435:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:38:10"
															},
															"nodeType": "YulIf",
															"src": "1406:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1228:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1237:6:10",
														"type": ""
													}
												],
												"src": "1193:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1654:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1644:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1644:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1675:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1667:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1617:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1625:4:10",
														"type": ""
													}
												],
												"src": "1578:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1818:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1832:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1842:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1836:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1863:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1867:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1886:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1908:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1898:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1890:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1930:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1953:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1963:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1970:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1982:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1959:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1959:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1934:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2024:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2026:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2041:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2026:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2006:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2018:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2003:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "2000:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2060:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2074:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2084:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2091:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2096:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2087:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2080:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2080:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2070:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2070:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2064:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2114:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2127:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2118:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2212:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2221:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2228:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2214:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2214:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2214:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2162:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2169:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2159:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2159:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2173:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2175:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2188:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2195:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2184:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2184:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2175:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2155:3:10",
																			"statements": []
																		},
																		"src": "2151:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1801:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1798:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:11:10"
															},
															"nodeType": "YulIf",
															"src": "1795:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1764:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1769:10:10",
														"type": ""
													}
												],
												"src": "1704:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2339:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2364:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2382:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2385:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2378:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2378:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2395:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2391:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2391:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2374:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2374:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2370:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2370:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2409:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2402:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2349:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2316:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2330:4:10",
														"type": ""
													}
												],
												"src": "2254:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2531:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2551:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2545:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2535:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2600:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2586:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2590:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2582:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2582:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2594:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2578:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2567:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:30:10"
															},
															"nodeType": "YulIf",
															"src": "2564:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2673:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2711:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2705:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2705:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2679:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2629:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2629:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2735:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2752:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2739:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2781:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2766:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2794:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2807:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2794:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2864:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2878:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2897:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2909:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2905:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2905:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2893:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2893:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2882:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2926:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2970:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2940:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2940:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2930:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2988:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2992:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3075:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3100:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3118:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3123:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3114:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3114:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3108:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3108:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3093:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3093:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3093:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3152:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3166:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3174:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3162:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3162:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3152:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3193:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3210:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3221:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3206:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3206:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3193:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3022:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3025:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3019:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3019:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3034:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3036:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3045:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3048:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3041:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3041:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3036:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3015:3:10",
																					"statements": []
																				},
																				"src": "3011:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3295:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3313:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3340:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3345:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3336:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3336:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3330:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3330:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3317:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3380:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3392:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3419:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3422:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3415:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3415:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3431:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3411:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3411:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3441:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3437:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3437:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3407:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3407:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3403:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3403:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3388:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3388:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3373:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3373:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3373:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3266:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3275:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3263:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3260:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3481:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3495:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3498:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3491:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3491:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3507:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3487:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3487:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3474:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3474:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2857:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3537:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3551:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3555:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3600:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3618:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3637:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3642:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3633:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3633:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3627:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3627:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3618:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3581:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3578:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3687:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3746:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3753:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3693:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3693:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3680:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3680:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3680:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3529:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2837:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2834:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "2827:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2506:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2512:3:10",
														"type": ""
													}
												],
												"src": "2425:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200165e3803806200165e83398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113b080620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc1565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c04565b610226565b60405190151581526020016100a9565b6100e86100e3366004610c28565b610276565b6040516100a99190610c87565b610108610103366004610de6565b61030a565b005b61011d610118366004610e90565b6103a1565b6040516100a99190610f96565b610108610138366004610fa9565b6104cb565b6100c561014b366004610fe5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611018565b6104da565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025757506001600160e01b031982166303a24d0760e21b145b8061022057506301ffc9a760e01b6001600160e01b0319831614610220565b6060600280546102859061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061107d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103265750610326853361014b565b61038d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b61039a8585858585610561565b5050505050565b606081518351146104065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042257610422610c9a565b60405190808252806020026020018201604052801561044b578160200160208202803683370190505b50905060005b84518110156104c35761049685828151811061046f5761046f6110b7565b6020026020010151858381518110610489576104896110b7565b602002602001015161018c565b8282815181106104a8576104a86110b7565b60209081029190910101526104bc816110e3565b9050610451565b509392505050565b6104d633838361073e565b5050565b6001600160a01b0385163314806104f657506104f6853361014b565b6105545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b61039a858585858561081e565b81518351146105c35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e95760405162461bcd60e51b81526004016101f4906110fc565b3360005b84518110156106d057600085828151811061060a5761060a6110b7565b602002602001015190506000858381518110610628576106286110b7565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106785760405162461bcd60e51b81526004016101f490611141565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b590849061118b565b92505081905550505050806106c9906110e3565b90506105ed565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161072092919061119e565b60405180910390a4610736818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b0316036107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f4906110fc565b3361085d81878761085488610a9f565b61039a88610a9f565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f490611141565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db90849061118b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610aea565b50505050505050565b6001600160a01b0384163b156107365760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098890899089908890889088906004016111cc565b6020604051808303816000875af19250505080156109c3575060408051601f3d908101601f191682019092526109c09181019061122a565b60015b610a6f576109cf611247565b806308c379a003610a0857506109e3611263565b806109ee5750610a0a565b8060405162461bcd60e51b81526004016101f49190610c87565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad957610ad96110b7565b602090810291909101015292915050565b6001600160a01b0384163b156107365760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2e9089908990889088908890600401611335565b6020604051808303816000875af1925050508015610b69575060408051601f3d908101601f19168201909252610b669181019061122a565b60015b610b75576109cf611247565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b80356001600160a01b0381168114610bbc57600080fd5b919050565b60008060408385031215610bd457600080fd5b610bdd83610ba5565b946020939093013593505050565b6001600160e01b031981168114610c0157600080fd5b50565b600060208284031215610c1657600080fd5b8135610c2181610beb565b9392505050565b600060208284031215610c3a57600080fd5b5035919050565b6000815180845260005b81811015610c6757602081850181015186830182015201610c4b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c216020830184610c41565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cd657610cd6610c9a565b6040525050565b600067ffffffffffffffff821115610cf757610cf7610c9a565b5060051b60200190565b600082601f830112610d1257600080fd5b81356020610d1f82610cdd565b604051610d2c8282610cb0565b83815260059390931b8501820192828101915086841115610d4c57600080fd5b8286015b84811015610d675780358352918301918301610d50565b509695505050505050565b600082601f830112610d8357600080fd5b813567ffffffffffffffff811115610d9d57610d9d610c9a565b604051610db4601f8301601f191660200182610cb0565b818152846020838601011115610dc957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610dfe57600080fd5b610e0786610ba5565b9450610e1560208701610ba5565b9350604086013567ffffffffffffffff80821115610e3257600080fd5b610e3e89838a01610d01565b94506060880135915080821115610e5457600080fd5b610e6089838a01610d01565b93506080880135915080821115610e7657600080fd5b50610e8388828901610d72565b9150509295509295909350565b60008060408385031215610ea357600080fd5b823567ffffffffffffffff80821115610ebb57600080fd5b818501915085601f830112610ecf57600080fd5b81356020610edc82610cdd565b604051610ee98282610cb0565b83815260059390931b8501820192828101915089841115610f0957600080fd5b948201945b83861015610f2e57610f1f86610ba5565b82529482019490820190610f0e565b96505086013592505080821115610f4457600080fd5b50610f5185828601610d01565b9150509250929050565b600081518084526020808501945080840160005b83811015610f8b57815187529582019590820190600101610f6f565b509495945050505050565b602081526000610c216020830184610f5b565b60008060408385031215610fbc57600080fd5b610fc583610ba5565b915060208301358015158114610fda57600080fd5b809150509250929050565b60008060408385031215610ff857600080fd5b61100183610ba5565b915061100f60208401610ba5565b90509250929050565b600080600080600060a0868803121561103057600080fd5b61103986610ba5565b945061104760208701610ba5565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107157600080fd5b610e8388828901610d72565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110f5576110f56110cd565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610220576102206110cd565b6040815260006111b16040830185610f5b565b82810360208401526111c38185610f5b565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111f890830186610f5b565b828103606084015261120a8186610f5b565b9050828103608084015261121e8185610c41565b98975050505050505050565b60006020828403121561123c57600080fd5b8151610c2181610beb565b600060033d11156112605760046000803e5060005160e01c5b90565b600060443d10156112715790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112a157505050505090565b82850191508151818111156112b95750505050505090565b843d87010160208285010111156112d35750505050505090565b6112e260208286010187610cb0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136f90830184610c41565b97965050505050505056fea26469706673582212206d237c68c3f7ec3bf01178d77250f64946dfe8ea7b438ab21d69ca7dc1d9dea764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x165E CODESIZE SUB DUP1 PUSH3 0x165E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x29E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEF PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x12C JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x158 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1A8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1EE PUSH3 0x58 JUMP JUMPDEST PUSH3 0x206 DUP2 PUSH3 0x1FF DUP5 SLOAD PUSH3 0x143 JUMP JUMPDEST DUP5 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x23E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x225 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x26F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x24E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x28E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x13B0 DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x257 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x220 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x326 JUMPI POP PUSH2 0x326 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x496 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46F JUMPI PUSH2 0x46F PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BC DUP2 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x451 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F6 JUMPI POP PUSH2 0x4F6 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C9 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x736 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x39A DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAEA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6F JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA08 JUMPI POP PUSH2 0x9E3 PUSH2 0x1263 JUMP JUMPDEST DUP1 PUSH2 0x9EE JUMPI POP PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB69 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB66 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB75 JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD1F DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2C DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD67 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD50 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9D PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE07 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE15 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3E DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE60 DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEDC DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE9 DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF1F DUP7 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF51 DUP6 DUP3 DUP7 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF8B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF6F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1001 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x100F PUSH1 0x20 DUP5 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1039 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0x1047 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1091 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10F5 JUMPI PUSH2 0x10F5 PUSH2 0x10CD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH2 0x220 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C3 DUP2 DUP6 PUSH2 0xF5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F8 SWAP1 DUP4 ADD DUP7 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x120A DUP2 DUP7 PUSH2 0xF5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x121E DUP2 DUP6 PUSH2 0xC41 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1260 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1271 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12A1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12D3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12E2 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB0 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x136F SWAP1 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x237C68C3F7EC3BF01178D77250F6 0x49 CHAINID 0xDF 0xE8 0xEA PUSH28 0x438AB21D69CA7DC1D9DEA764736F6C63430008110033000000000000 ",
							"sourceMap": "574:15164:2:-:0;;;1126:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:13;1177:4;1169:7;:13::i;:::-;1126:64;574:15164;;8180:88;8247:4;:13;8254:6;8247:4;:13;:::i;:::-;;8180:88;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:10;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:10;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:10;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:10;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:10;;;3627:26;3578:89;-1:-1:-1;;2382:1:10;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:10;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:10;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:10;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:10:o;:::-;574:15164:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1447": {
									"entryPoint": 2719,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1291": {
									"entryPoint": null,
									"id": 1291,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1419": {
									"entryPoint": 2372,
									"id": 1419,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1354": {
									"entryPoint": 2794,
									"id": 1354,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1935": {
									"entryPoint": null,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_865": {
									"entryPoint": 1377,
									"id": 865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_739": {
									"entryPoint": 2078,
									"id": 739,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1272": {
									"entryPoint": 1854,
									"id": 1272,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_532": {
									"entryPoint": 929,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_468": {
									"entryPoint": 396,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1646": {
									"entryPoint": null,
									"id": 1646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_645": {
									"entryPoint": 778,
									"id": 645,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_605": {
									"entryPoint": 1242,
									"id": 605,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_549": {
									"entryPoint": 1227,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_428": {
									"entryPoint": 550,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_440": {
									"entryPoint": 630,
									"id": 440,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16275:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:10"
															},
															"nodeType": "YulIf",
															"src": "1291:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:10",
														"type": ""
													}
												],
												"src": "1211:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:10",
																"statements": []
															},
															"src": "1538:162:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1396:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:10",
														"type": ""
													}
												],
												"src": "1824:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:10"
															},
															"nodeType": "YulIf",
															"src": "2305:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:10",
														"type": ""
													}
												],
												"src": "2181:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:10"
															},
															"nodeType": "YulIf",
															"src": "2514:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:10",
														"type": ""
													}
												],
												"src": "2435:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:10"
															},
															"nodeType": "YulIf",
															"src": "2697:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:10"
															},
															"nodeType": "YulIf",
															"src": "3096:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:10",
																"statements": []
															},
															"src": "3175:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:10",
														"type": ""
													}
												],
												"src": "2623:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:10"
															},
															"nodeType": "YulIf",
															"src": "3414:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:10"
															},
															"nodeType": "YulIf",
															"src": "3517:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:10"
															},
															"nodeType": "YulIf",
															"src": "3713:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:10",
														"type": ""
													}
												],
												"src": "3352:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:33:10"
															},
															"nodeType": "YulIf",
															"src": "4119:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4191:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4239:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4286:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4290:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4341:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4351:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4345:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4396:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4398:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4384:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4381:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:14:10"
															},
															"nodeType": "YulIf",
															"src": "4378:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4421:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4484:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4431:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4505:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4574:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4561:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:16:10"
															},
															"nodeType": "YulIf",
															"src": "4558:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4668:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4613:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4685:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4701:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4689:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4772:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4749:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4759:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4746:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:16:10"
															},
															"nodeType": "YulIf",
															"src": "4743:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4788:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4830:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4841:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4798:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4054:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4066:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4090:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4098:6:10",
														"type": ""
													}
												],
												"src": "3912:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:32:10"
															},
															"nodeType": "YulIf",
															"src": "5007:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5095:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5124:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5118:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:14:10"
															},
															"nodeType": "YulIf",
															"src": "5151:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5198:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5274:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5276:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5253:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5257:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:10"
															},
															"nodeType": "YulIf",
															"src": "5235:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5322:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5309:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5303:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5357:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5367:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5361:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5419:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5433:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5423:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5479:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5451:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5491:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5502:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5495:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5532:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5544:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5555:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5575:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5597:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5605:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5614:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5579:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5649:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5640:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:19:10"
															},
															"nodeType": "YulIf",
															"src": "5626:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5674:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5693:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5678:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5761:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5782:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5806:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5787:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5787:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5824:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5840:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5831:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5713:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5729:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5731:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5747:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5731:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5709:3:10",
																"statements": []
															},
															"src": "5705:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5862:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5872:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5887:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5931:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5891:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5964:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5966:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5966:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5966:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5950:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5960:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:16:10"
															},
															"nodeType": "YulIf",
															"src": "5944:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5989:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6043:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6054:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5999:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4955:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4966:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4986:6:10",
														"type": ""
													}
												],
												"src": "4860:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6164:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6276:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6283:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6262:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6295:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6304:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6299:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6363:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6395:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6389:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6389:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6448:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6458:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6336:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6347:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6343:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6318:3:10",
																"statements": []
															},
															"src": "6314:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6499:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6111:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6118:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6126:3:10",
														"type": ""
													}
												],
												"src": "6073:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6664:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6712:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6644:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6655:4:10",
														"type": ""
													}
												],
												"src": "6513:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6921:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6911:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6884:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:32:10"
															},
															"nodeType": "YulIf",
															"src": "6873:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6944:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6995:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6986:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7082:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7070:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7063:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7063:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7056:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:40:10"
															},
															"nodeType": "YulIf",
															"src": "7036:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7115:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6832:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6844:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6852:6:10",
														"type": ""
													}
												],
												"src": "6779:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7218:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7264:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7266:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7239:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:32:10"
															},
															"nodeType": "YulIf",
															"src": "7228:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7299:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7347:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7176:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7187:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7199:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7207:6:10",
														"type": ""
													}
												],
												"src": "7131:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:33:10"
															},
															"nodeType": "YulIf",
															"src": "7553:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7625:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7663:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7673:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7771:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7781:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7822:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7853:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7864:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7836:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7826:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7912:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:30:10"
															},
															"nodeType": "YulIf",
															"src": "7878:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7964:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7988:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7947:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7516:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7524:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7532:6:10",
														"type": ""
													}
												],
												"src": "7396:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8287:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8381:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8393:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8404:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8389:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8389:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8381:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8158:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8172:4:10",
														"type": ""
													}
												],
												"src": "8007:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8474:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8484:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8501:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8484:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8515:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8545:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8551:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8541:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8541:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8519:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8592:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8594:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8608:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8616:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8604:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8604:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8594:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8572:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:26:10"
															},
															"nodeType": "YulIf",
															"src": "8562:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8703:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8710:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8715:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8706:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8706:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8696:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8696:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8696:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8747:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8750:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8740:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8740:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8740:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8775:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8778:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8768:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8768:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8638:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8661:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8635:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:38:10"
															},
															"nodeType": "YulIf",
															"src": "8632:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8454:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8463:6:10",
														"type": ""
													}
												],
												"src": "8419:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8978:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8988:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9040:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9018:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9068:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9079:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9084:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9139:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9150:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9135:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9155:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9185:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9197:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9208:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9193:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9193:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9185:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8955:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8969:4:10",
														"type": ""
													}
												],
												"src": "8804:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9397:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9414:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9425:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9407:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9448:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9459:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9444:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9437:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9498:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9483:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9503:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9476:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9476:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9558:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9569:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9554:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9574:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9547:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9547:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9595:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9607:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9618:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9603:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9595:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9374:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9388:4:10",
														"type": ""
													}
												],
												"src": "9223:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9665:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9682:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9694:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9685:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9675:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9722:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9725:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9715:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9715:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9715:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9746:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9749:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9739:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9633:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9797:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9814:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9821:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9826:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9817:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9807:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9807:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9807:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9854:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9857:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9847:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9878:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9881:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9871:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9871:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9871:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9765:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9944:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9975:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9977:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9977:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9977:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9960:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9971:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9967:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9957:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9957:17:10"
															},
															"nodeType": "YulIf",
															"src": "9954:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10006:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10017:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10024:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10006:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9926:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9936:3:10",
														"type": ""
													}
												],
												"src": "9897:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10211:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10228:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10239:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10221:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10262:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10273:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10258:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10278:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10251:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10301:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10312:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10297:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10317:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10290:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10290:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10290:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10372:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10383:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10368:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10388:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10361:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10361:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10361:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10409:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10421:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10432:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10417:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10409:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10188:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10202:4:10",
														"type": ""
													}
												],
												"src": "10037:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10621:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10638:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10649:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10631:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10631:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10672:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10683:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10668:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10688:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10661:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10661:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10711:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10722:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10707:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10707:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10727:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10700:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10700:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10782:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10793:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10778:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10778:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10798:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10771:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10771:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10818:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10830:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10841:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10826:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10818:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10598:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10612:4:10",
														"type": ""
													}
												],
												"src": "10447:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11030:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11047:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11058:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11040:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11040:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11092:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11077:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11097:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11070:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11070:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11070:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11120:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11131:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11116:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11116:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11136:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11109:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11109:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11109:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11202:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11187:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11207:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11180:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11180:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11224:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11236:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11232:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11232:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11224:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11007:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11021:4:10",
														"type": ""
													}
												],
												"src": "10856:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11436:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11453:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11446:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11446:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11498:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11483:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11503:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11476:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11476:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11526:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11537:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11522:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11522:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11542:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11515:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11515:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11515:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11597:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11608:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11593:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11613:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11586:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11586:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11586:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11635:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11647:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11643:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11635:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11413:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11427:4:10",
														"type": ""
													}
												],
												"src": "11262:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11721:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11731:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11742:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11745:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11731:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11770:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11772:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11772:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11772:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11762:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11765:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:10:10"
															},
															"nodeType": "YulIf",
															"src": "11756:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11704:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11707:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11713:3:10",
														"type": ""
													}
												],
												"src": "11673:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12049:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12060:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12072:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12115:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12127:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12138:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12123:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12086:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12086:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12076:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12173:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12158:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12182:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12190:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12178:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12151:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12210:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12247:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12255:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12218:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12218:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12210:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11993:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12004:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12012:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12023:4:10",
														"type": ""
													}
												],
												"src": "11803:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12447:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12464:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12475:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12457:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12457:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12457:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12498:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12509:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12494:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12494:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12487:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12487:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12537:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12548:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12533:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12553:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12608:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12619:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12604:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12604:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12624:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12597:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12645:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12657:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12668:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12645:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12424:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12438:4:10",
														"type": ""
													}
												],
												"src": "12273:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12812:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12822:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12834:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12845:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12830:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12822:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12864:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12875:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12857:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12913:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12898:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12918:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12891:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12773:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12784:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12792:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12803:4:10",
														"type": ""
													}
												],
												"src": "12683:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13267:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13277:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13295:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13300:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13291:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13291:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13304:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13287:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13281:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13322:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13337:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13345:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13333:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13315:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13315:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13369:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13380:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13358:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13437:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13450:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13493:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13464:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13464:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13454:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13541:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13552:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13537:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13537:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13561:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13557:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13530:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13530:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13589:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13632:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13640:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13603:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13603:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13593:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13667:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13678:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13663:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13688:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13696:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13684:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13656:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13656:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13716:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13742:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13750:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13724:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13716:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13204:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13215:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13223:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13231:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13239:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13247:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13258:4:10",
														"type": ""
													}
												],
												"src": "12936:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13848:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13894:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13903:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13906:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13896:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13896:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13896:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13869:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13878:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13865:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13865:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13890:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13861:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:32:10"
															},
															"nodeType": "YulIf",
															"src": "13858:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13919:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13938:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13932:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13923:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13981:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13957:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13957:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13957:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13996:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14006:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13814:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13825:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13837:6:10",
														"type": ""
													}
												],
												"src": "13768:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14065:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14110:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14142:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14145:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14124:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14124:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14124:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14160:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14171:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14182:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14176:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14176:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14167:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14167:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14160:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14081:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14081:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14099:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14078:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14078:23:10"
															},
															"nodeType": "YulIf",
															"src": "14075:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14057:3:10",
														"type": ""
													}
												],
												"src": "14022:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14253:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14293:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14295:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14269:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14269:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14287:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14266:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14266:26:10"
															},
															"nodeType": "YulIf",
															"src": "14263:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14311:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14329:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14323:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14315:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14341:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14355:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14351:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14351:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14345:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14381:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14387:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14394:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14394:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14412:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14390:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14366:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14366:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14366:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14425:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14445:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14439:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14429:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14459:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14469:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14469:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14463:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14494:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14504:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14498:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14580:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14582:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14540:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14548:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14537:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14537:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14560:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14568:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14556:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14556:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14575:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14553:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14553:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14534:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14534:45:10"
															},
															"nodeType": "YulIf",
															"src": "14531:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14598:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14613:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14619:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14609:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14609:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14602:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14635:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14655:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14649:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14649:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14639:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14686:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14688:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14674:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14682:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14671:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14671:14:10"
															},
															"nodeType": "YulIf",
															"src": "14668:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14777:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14779:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14718:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14723:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14714:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14714:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14732:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14710:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14710:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14747:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14753:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14753:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14743:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14743:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14772:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14739:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14739:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14707:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14707:69:10"
															},
															"nodeType": "YulIf",
															"src": "14704:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14815:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14829:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14837:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14825:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14825:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14846:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14821:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14821:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14795:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14795:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14795:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14861:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14868:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14861:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14245:3:10",
														"type": ""
													}
												],
												"src": "14206:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15056:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15073:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15084:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15066:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15066:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15066:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15103:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15123:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15096:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15096:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15096:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15146:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15157:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15142:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15142:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15162:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15135:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15135:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15217:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15228:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15213:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15213:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15233:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15206:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15206:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15206:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15265:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15277:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15288:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15273:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15265:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15033:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15047:4:10",
														"type": ""
													}
												],
												"src": "14882:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15477:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15494:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15505:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15487:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15528:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15539:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15524:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15524:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15544:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15517:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15517:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15517:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15567:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15578:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15563:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15583:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15556:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15556:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15638:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15649:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15634:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15654:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15627:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15627:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15627:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15674:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15686:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15697:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15682:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15682:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15674:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15454:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15468:4:10",
														"type": ""
													}
												],
												"src": "15303:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15943:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15953:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15971:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15976:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15967:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15980:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15963:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15963:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15957:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15998:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16013:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16021:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16009:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15991:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15991:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16045:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16056:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16041:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16034:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16034:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16113:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16140:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16151:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16136:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16136:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16156:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16129:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16129:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16129:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16183:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16194:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16179:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16200:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16172:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16172:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16213:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16239:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16251:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16262:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16247:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16247:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16221:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16221:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16213:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15880:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15891:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15899:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15907:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15915:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15923:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15934:4:10",
														"type": ""
													}
												],
												"src": "15712:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc1565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c04565b610226565b60405190151581526020016100a9565b6100e86100e3366004610c28565b610276565b6040516100a99190610c87565b610108610103366004610de6565b61030a565b005b61011d610118366004610e90565b6103a1565b6040516100a99190610f96565b610108610138366004610fa9565b6104cb565b6100c561014b366004610fe5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611018565b6104da565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025757506001600160e01b031982166303a24d0760e21b145b8061022057506301ffc9a760e01b6001600160e01b0319831614610220565b6060600280546102859061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061107d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103265750610326853361014b565b61038d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b61039a8585858585610561565b5050505050565b606081518351146104065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042257610422610c9a565b60405190808252806020026020018201604052801561044b578160200160208202803683370190505b50905060005b84518110156104c35761049685828151811061046f5761046f6110b7565b6020026020010151858381518110610489576104896110b7565b602002602001015161018c565b8282815181106104a8576104a86110b7565b60209081029190910101526104bc816110e3565b9050610451565b509392505050565b6104d633838361073e565b5050565b6001600160a01b0385163314806104f657506104f6853361014b565b6105545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b61039a858585858561081e565b81518351146105c35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e95760405162461bcd60e51b81526004016101f4906110fc565b3360005b84518110156106d057600085828151811061060a5761060a6110b7565b602002602001015190506000858381518110610628576106286110b7565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106785760405162461bcd60e51b81526004016101f490611141565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b590849061118b565b92505081905550505050806106c9906110e3565b90506105ed565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161072092919061119e565b60405180910390a4610736818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b0316036107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f4906110fc565b3361085d81878761085488610a9f565b61039a88610a9f565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f490611141565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db90849061118b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610aea565b50505050505050565b6001600160a01b0384163b156107365760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098890899089908890889088906004016111cc565b6020604051808303816000875af19250505080156109c3575060408051601f3d908101601f191682019092526109c09181019061122a565b60015b610a6f576109cf611247565b806308c379a003610a0857506109e3611263565b806109ee5750610a0a565b8060405162461bcd60e51b81526004016101f49190610c87565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad957610ad96110b7565b602090810291909101015292915050565b6001600160a01b0384163b156107365760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2e9089908990889088908890600401611335565b6020604051808303816000875af1925050508015610b69575060408051601f3d908101601f19168201909252610b669181019061122a565b60015b610b75576109cf611247565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b80356001600160a01b0381168114610bbc57600080fd5b919050565b60008060408385031215610bd457600080fd5b610bdd83610ba5565b946020939093013593505050565b6001600160e01b031981168114610c0157600080fd5b50565b600060208284031215610c1657600080fd5b8135610c2181610beb565b9392505050565b600060208284031215610c3a57600080fd5b5035919050565b6000815180845260005b81811015610c6757602081850181015186830182015201610c4b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c216020830184610c41565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cd657610cd6610c9a565b6040525050565b600067ffffffffffffffff821115610cf757610cf7610c9a565b5060051b60200190565b600082601f830112610d1257600080fd5b81356020610d1f82610cdd565b604051610d2c8282610cb0565b83815260059390931b8501820192828101915086841115610d4c57600080fd5b8286015b84811015610d675780358352918301918301610d50565b509695505050505050565b600082601f830112610d8357600080fd5b813567ffffffffffffffff811115610d9d57610d9d610c9a565b604051610db4601f8301601f191660200182610cb0565b818152846020838601011115610dc957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610dfe57600080fd5b610e0786610ba5565b9450610e1560208701610ba5565b9350604086013567ffffffffffffffff80821115610e3257600080fd5b610e3e89838a01610d01565b94506060880135915080821115610e5457600080fd5b610e6089838a01610d01565b93506080880135915080821115610e7657600080fd5b50610e8388828901610d72565b9150509295509295909350565b60008060408385031215610ea357600080fd5b823567ffffffffffffffff80821115610ebb57600080fd5b818501915085601f830112610ecf57600080fd5b81356020610edc82610cdd565b604051610ee98282610cb0565b83815260059390931b8501820192828101915089841115610f0957600080fd5b948201945b83861015610f2e57610f1f86610ba5565b82529482019490820190610f0e565b96505086013592505080821115610f4457600080fd5b50610f5185828601610d01565b9150509250929050565b600081518084526020808501945080840160005b83811015610f8b57815187529582019590820190600101610f6f565b509495945050505050565b602081526000610c216020830184610f5b565b60008060408385031215610fbc57600080fd5b610fc583610ba5565b915060208301358015158114610fda57600080fd5b809150509250929050565b60008060408385031215610ff857600080fd5b61100183610ba5565b915061100f60208401610ba5565b90509250929050565b600080600080600060a0868803121561103057600080fd5b61103986610ba5565b945061104760208701610ba5565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107157600080fd5b610e8388828901610d72565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110f5576110f56110cd565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610220576102206110cd565b6040815260006111b16040830185610f5b565b82810360208401526111c38185610f5b565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111f890830186610f5b565b828103606084015261120a8186610f5b565b9050828103608084015261121e8185610c41565b98975050505050505050565b60006020828403121561123c57600080fd5b8151610c2181610beb565b600060033d11156112605760046000803e5060005160e01c5b90565b600060443d10156112715790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112a157505050505090565b82850191508151818111156112b95750505050505090565b843d87010160208285010111156112d35750505050505090565b6112e260208286010187610cb0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136f90830184610c41565b97965050505050505056fea26469706673582212206d237c68c3f7ec3bf01178d77250f64946dfe8ea7b438ab21d69ca7dc1d9dea764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x257 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x220 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x326 JUMPI POP PUSH2 0x326 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x496 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46F JUMPI PUSH2 0x46F PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BC DUP2 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x451 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F6 JUMPI POP PUSH2 0x4F6 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C9 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x736 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x39A DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAEA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6F JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA08 JUMPI POP PUSH2 0x9E3 PUSH2 0x1263 JUMP JUMPDEST DUP1 PUSH2 0x9EE JUMPI POP PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB69 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB66 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB75 JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD1F DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2C DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD67 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD50 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9D PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE07 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE15 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3E DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE60 DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEDC DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE9 DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF1F DUP7 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF51 DUP6 DUP3 DUP7 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF8B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF6F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1001 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x100F PUSH1 0x20 DUP5 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1039 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0x1047 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1091 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10F5 JUMPI PUSH2 0x10F5 PUSH2 0x10CD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH2 0x220 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C3 DUP2 DUP6 PUSH2 0xF5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F8 SWAP1 DUP4 ADD DUP7 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x120A DUP2 DUP7 PUSH2 0xF5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x121E DUP2 DUP6 PUSH2 0xC41 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1260 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1271 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12A1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12D3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12E2 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB0 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x136F SWAP1 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x237C68C3F7EC3BF01178D77250F6 0x49 CHAINID 0xDF 0xE8 0xEA PUSH28 0x438AB21D69CA7DC1D9DEA764736F6C63430008110033000000000000 ",
							"sourceMap": "574:15164:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:231;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2239:231:2;;;;;;;;1262:310;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1262:310:2;1019:187:10;1983:105:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4178:442::-;;;;;;:::i;:::-;;:::i;:::-;;2636:524;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3233:155::-;;;;;;:::i;:::-;;:::i;3460:168::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3583:27:2;;;3559:4;3583:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3460:168;3700:401;;;;;;:::i;:::-;;:::i;2239:231::-;2325:7;-1:-1:-1;;;;;2353:21:2;;2345:77;;;;-1:-1:-1;;;2345:77:2;;8209:2:10;2345:77:2;;;8191:21:10;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:10;;;8331:41;8389:19;;2345:77:2;;;;;;;;;-1:-1:-1;2440:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2440:22:2;;;;;;;;;;2239:231;;;;;:::o;1262:310::-;1364:4;-1:-1:-1;;;;;;1401:41:2;;-1:-1:-1;;;1401:41:2;;:110;;-1:-1:-1;;;;;;;1459:52:2;;-1:-1:-1;;;1459:52:2;1401:110;:163;;;-1:-1:-1;;;;;;;;;;963:40:8;;;1528:36:2;854:157:8;1983:105:2;2043:13;2076:4;2069:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:105;;;:::o;4178:442::-;-1:-1:-1;;;;;4411:20:2;;736:10:7;4411:20:2;;:60;;-1:-1:-1;4435:36:2;4452:4;736:10:7;3460:168:2;:::i;4435:36::-;4389:160;;;;-1:-1:-1;;;4389:160:2;;9006:2:10;4389:160:2;;;8988:21:10;9045:2;9025:18;;;9018:30;9084:34;9064:18;;;9057:62;-1:-1:-1;;;9135:18:10;;;9128:48;9193:19;;4389:160:2;8804:414:10;4389:160:2;4560:52;4583:4;4589:2;4593:3;4598:7;4607:4;4560:22;:52::i;:::-;4178:442;;;;;:::o;2636:524::-;2792:16;2853:3;:10;2834:8;:15;:29;2826:83;;;;-1:-1:-1;;;2826:83:2;;9425:2:10;2826:83:2;;;9407:21:10;9464:2;9444:18;;;9437:30;9503:34;9483:18;;;9476:62;-1:-1:-1;;;9554:18:10;;;9547:39;9603:19;;2826:83:2;9223:405:10;2826:83:2;2922:30;2969:8;:15;2955:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:30:2;;2922:63;;3003:9;2998:122;3022:8;:15;3018:1;:19;2998:122;;;3078:30;3088:8;3097:1;3088:11;;;;;;;;:::i;:::-;;;;;;;3101:3;3105:1;3101:6;;;;;;;;:::i;:::-;;;;;;;3078:9;:30::i;:::-;3059:13;3073:1;3059:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3039:3;;;:::i;:::-;;;2998:122;;;-1:-1:-1;3139:13:2;2636:524;-1:-1:-1;;;2636:524:2:o;3233:155::-;3328:52;736:10:7;3361:8:2;3371;3328:18;:52::i;:::-;3233:155;;:::o;3700:401::-;-1:-1:-1;;;;;3908:20:2;;736:10:7;3908:20:2;;:60;;-1:-1:-1;3932:36:2;3949:4;736:10:7;3460:168:2;:::i;3932:36::-;3886:151;;;;-1:-1:-1;;;3886:151:2;;10239:2:10;3886:151:2;;;10221:21:10;10278:2;10258:18;;;10251:30;10317:34;10297:18;;;10290:62;-1:-1:-1;;;10368:18:10;;;10361:39;10417:19;;3886:151:2;10037:405:10;3886:151:2;4048:45;4066:4;4072:2;4076;4080:6;4088:4;4048:17;:45::i;6262:1074::-;6489:7;:14;6475:3;:10;:28;6467:81;;;;-1:-1:-1;;;6467:81:2;;10649:2:10;6467:81:2;;;10631:21:10;10688:2;10668:18;;;10661:30;10727:34;10707:18;;;10700:62;-1:-1:-1;;;10778:18:10;;;10771:38;10826:19;;6467:81:2;10447:404:10;6467:81:2;-1:-1:-1;;;;;6567:16:2;;6559:66;;;;-1:-1:-1;;;6559:66:2;;;;;;;:::i;:::-;736:10:7;6638:16:2;6755:421;6779:3;:10;6775:1;:14;6755:421;;;6811:10;6824:3;6828:1;6824:6;;;;;;;;:::i;:::-;;;;;;;6811:19;;6845:14;6862:7;6870:1;6862:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6889:19;6911:13;;;;;;;;;;-1:-1:-1;;;;;6911:19:2;;;;;;;;;;;;6862:10;;-1:-1:-1;6953:21:2;;;;6945:76;;;;-1:-1:-1;;;6945:76:2;;;;;;;:::i;:::-;7065:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7065:19:2;;;;;;;;;;7087:20;;;7065:42;;7137:17;;;;;;;:27;;7087:20;;7065:9;7137:27;;7087:20;;7137:27;:::i;:::-;;;;;;;;6796:380;;;6791:3;;;;:::i;:::-;;;6755:421;;;;7223:2;-1:-1:-1;;;;;7193:47:2;7217:4;-1:-1:-1;;;;;7193:47:2;7207:8;-1:-1:-1;;;;;7193:47:2;;7227:3;7232:7;7193:47;;;;;;;:::i;:::-;;;;;;;;7253:75;7289:8;7299:4;7305:2;7309:3;7314:7;7323:4;7253:35;:75::i;:::-;6456:880;6262:1074;;;;;:::o;12448:331::-;12603:8;-1:-1:-1;;;;;12594:17:2;:5;-1:-1:-1;;;;;12594:17:2;;12586:71;;;;-1:-1:-1;;;12586:71:2;;12475:2:10;12586:71:2;;;12457:21:10;12514:2;12494:18;;;12487:30;12553:34;12533:18;;;12526:62;-1:-1:-1;;;12604:18:10;;;12597:39;12653:19;;12586:71:2;12273:405:10;12586:71:2;-1:-1:-1;;;;;12668:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12668:46:2;;;;;;;;;;12730:41;;1159::10;;;12730::2;;1132:18:10;12730:41:2;;;;;;;12448:331;;;:::o;5084:820::-;-1:-1:-1;;;;;5272:16:2;;5264:66;;;;-1:-1:-1;;;5264:66:2;;;;;;;:::i;:::-;736:10:7;5387:96:2;736:10:7;5418:4:2;5424:2;5428:21;5446:2;5428:17;:21::i;:::-;5451:25;5469:6;5451:17;:25::i;5387:96::-;5496:19;5518:13;;;;;;;;;;;-1:-1:-1;;;;;5518:19:2;;;;;;;;;;5556:21;;;;5548:76;;;;-1:-1:-1;;;5548:76:2;;;;;;;:::i;:::-;5660:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:2;;;;;;;;;;5682:20;;;5660:42;;5724:17;;;;;;;:27;;5682:20;;5660:9;5724:27;;5682:20;;5724:27;:::i;:::-;;;;-1:-1:-1;;5769:46:2;;;12857:25:10;;;12913:2;12898:18;;12891:34;;;-1:-1:-1;;;;;5769:46:2;;;;;;;;;;;;;;12830:18:10;5769:46:2;;;;;;;5828:68;5859:8;5869:4;5875:2;5879;5883:6;5891:4;5828:30;:68::i;:::-;5253:651;;5084:820;;;;;:::o;14716:813::-;-1:-1:-1;;;;;14956:13:2;;1120:20:6;1168:8;14952:570:2;;14992:79;;-1:-1:-1;;;14992:79:2;;-1:-1:-1;;;;;14992:43:2;;;;;:79;;15036:8;;15046:4;;15052:3;;15057:7;;15066:4;;14992:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14992:79:2;;;;;;;;-1:-1:-1;;14992:79:2;;;;;;;;;;;;:::i;:::-;;;14988:523;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15384:6;15377:14;;-1:-1:-1;;;15377:14:2;;;;;;;;:::i;14988:523::-;;;15433:62;;-1:-1:-1;;;15433:62:2;;15084:2:10;15433:62:2;;;15066:21:10;15123:2;15103:18;;;15096:30;15162:34;15142:18;;;15135:62;-1:-1:-1;;;15213:18:10;;;15206:50;15273:19;;15433:62:2;14882:416:10;14988:523:2;-1:-1:-1;;;;;;15153:60:2;;-1:-1:-1;;;15153:60:2;15149:159;;15238:50;;-1:-1:-1;;;15238:50:2;;;;;;;:::i;15537:198::-;15657:16;;;15671:1;15657:16;;;;;;;;;15603;;15632:22;;15657:16;;;;;;;;;;;;-1:-1:-1;15657:16:2;15632:41;;15695:7;15684:5;15690:1;15684:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15722:5;15537:198;-1:-1:-1;;15537:198:2:o;13964:744::-;-1:-1:-1;;;;;14179:13:2;;1120:20:6;1168:8;14175:526:2;;14215:72;;-1:-1:-1;;;14215:72:2;;-1:-1:-1;;;;;14215:38:2;;;;;:72;;14254:8;;14264:4;;14270:2;;14274:6;;14282:4;;14215:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14215:72:2;;;;;;;;-1:-1:-1;;14215:72:2;;;;;;;;;;;;:::i;:::-;;;14211:479;;;;:::i;:::-;-1:-1:-1;;;;;;14337:55:2;;-1:-1:-1;;;14337:55:2;14333:154;;14417:50;;-1:-1:-1;;;14417:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:10;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:10:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:10;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:10;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:10;2623:724;-1:-1:-1;;;;;;2623:724:10:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:10;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:10:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:10;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:10;;5903:32;;-1:-1:-1;;5947:16:10;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:10;;6073:435;-1:-1:-1;;;;;6073:435:10:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8419:380::-;8498:1;8494:12;;;;8541;;;8562:61;;8616:4;8608:6;8604:17;8594:27;;8562:61;8669:2;8661:6;8658:14;8638:18;8635:38;8632:161;;8715:10;8710:3;8706:20;8703:1;8696:31;8750:4;8747:1;8740:15;8778:4;8775:1;8768:15;8632:161;;8419:380;;;:::o;9633:127::-;9694:10;9689:3;9685:20;9682:1;9675:31;9725:4;9722:1;9715:15;9749:4;9746:1;9739:15;9765:127;9826:10;9821:3;9817:20;9814:1;9807:31;9857:4;9854:1;9847:15;9881:4;9878:1;9871:15;9897:135;9936:3;9957:17;;;9954:43;;9977:18;;:::i;:::-;-1:-1:-1;10024:1:10;10013:13;;9897:135::o;10856:401::-;11058:2;11040:21;;;11097:2;11077:18;;;11070:30;11136:34;11131:2;11116:18;;11109:62;-1:-1:-1;;;11202:2:10;11187:18;;11180:35;11247:3;11232:19;;10856:401::o;11262:406::-;11464:2;11446:21;;;11503:2;11483:18;;;11476:30;11542:34;11537:2;11522:18;;11515:62;-1:-1:-1;;;11608:2:10;11593:18;;11586:40;11658:3;11643:19;;11262:406::o;11673:125::-;11738:9;;;11759:10;;;11756:36;;;11772:18;;:::i;11803:465::-;12060:2;12049:9;12042:21;12023:4;12086:56;12138:2;12127:9;12123:18;12115:6;12086:56;:::i;:::-;12190:9;12182:6;12178:22;12173:2;12162:9;12158:18;12151:50;12218:44;12255:6;12247;12218:44;:::i;:::-;12210:52;11803:465;-1:-1:-1;;;;;11803:465:10:o;12936:827::-;-1:-1:-1;;;;;13333:15:10;;;13315:34;;13385:15;;13380:2;13365:18;;13358:43;13295:3;13432:2;13417:18;;13410:31;;;13258:4;;13464:57;;13501:19;;13493:6;13464:57;:::i;:::-;13569:9;13561:6;13557:22;13552:2;13541:9;13537:18;13530:50;13603:44;13640:6;13632;13603:44;:::i;:::-;13589:58;;13696:9;13688:6;13684:22;13678:3;13667:9;13663:19;13656:51;13724:33;13750:6;13742;13724:33;:::i;:::-;13716:41;12936:827;-1:-1:-1;;;;;;;;12936:827:10:o;13768:249::-;13837:6;13890:2;13878:9;13869:7;13865:23;13861:32;13858:52;;;13906:1;13903;13896:12;13858:52;13938:9;13932:16;13957:30;13981:5;13957:30;:::i;14022:179::-;14057:3;14099:1;14081:16;14078:23;14075:120;;;14145:1;14142;14139;14124:23;-1:-1:-1;14182:1:10;14176:8;14171:3;14167:18;14075:120;14022:179;:::o;14206:671::-;14245:3;14287:4;14269:16;14266:26;14263:39;;;14206:671;:::o;14263:39::-;14329:2;14323:9;-1:-1:-1;;14394:16:10;14390:25;;14387:1;14323:9;14366:50;14445:4;14439:11;14469:16;14504:18;14575:2;14568:4;14560:6;14556:17;14553:25;14548:2;14540:6;14537:14;14534:45;14531:58;;;14582:5;;;;;14206:671;:::o;14531:58::-;14619:6;14613:4;14609:17;14598:28;;14655:3;14649:10;14682:2;14674:6;14671:14;14668:27;;;14688:5;;;;;;14206:671;:::o;14668:27::-;14772:2;14753:16;14747:4;14743:27;14739:36;14732:4;14723:6;14718:3;14714:16;14710:27;14707:69;14704:82;;;14779:5;;;;;;14206:671;:::o;14704:82::-;14795:57;14846:4;14837:6;14829;14825:19;14821:30;14815:4;14795:57;:::i;:::-;-1:-1:-1;14868:3:10;;14206:671;-1:-1:-1;;;;;14206:671:10:o;15303:404::-;15505:2;15487:21;;;15544:2;15524:18;;;15517:30;15583:34;15578:2;15563:18;;15556:62;-1:-1:-1;;;15649:2:10;15634:18;;15627:38;15697:3;15682:19;;15303:404::o;15712:561::-;-1:-1:-1;;;;;16009:15:10;;;15991:34;;16061:15;;16056:2;16041:18;;16034:43;16108:2;16093:18;;16086:34;;;16151:2;16136:18;;16129:34;;;15971:3;16194;16179:19;;16172:32;;;15934:4;;16221:46;;16247:19;;16239:6;16221:46;:::i;:::-;16213:54;15712:561;-1:-1:-1;;;;;;;15712:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1008000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2677",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "555",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1126,
									"end": 1190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1177,
									"end": 1181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1169,
									"end": 1182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1169,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1190,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8254,
									"end": 8260,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8247,
									"end": 8260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8247,
									"end": 8260,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8180,
									"end": 8268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1133,
									"end": 1148,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1157,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1394,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1382,
									"end": 1388,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 1395,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1443,
									"end": 1445,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1432,
									"end": 1446,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1412,
									"end": 1430,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1409,
									"end": 1447,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1489,
									"end": 1499,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1478,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1470,
									"end": 1501,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1524,
									"end": 1528,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1514,
									"end": 1529,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1549,
									"end": 1550,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1557,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1193,
									"end": 1573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1801,
									"end": 1804,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1809,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1872,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1856,
									"end": 1873,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1912,
									"end": 1916,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 1917,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1982,
									"end": 1984,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1970,
									"end": 1980,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1959,
									"end": 1986,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1953,
									"end": 1957,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1987,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2022,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2016,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2003,
									"end": 2023,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2041,
									"end": 2045,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2098,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2087,
									"end": 2099,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2084,
									"end": 2085,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2080,
									"end": 2100,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2074,
									"end": 2078,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2171,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2162,
									"end": 2167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2172,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2184,
									"end": 2197,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 2249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2600,
									"end": 2618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2719,
									"end": 2725,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2711,
									"end": 2715,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2679,
									"end": 2717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2629,
									"end": 2726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2845,
									"end": 2847,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2862,
									"end": 2863,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3564,
									"end": 3565,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3587,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3627,
									"end": 3653,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2382,
									"end": 2383,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2398,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2370,
									"end": 2399,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2400,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2406,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2357,
									"end": 2414,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1652,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3022,
									"end": 3023,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3108,
									"end": 3134,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3018,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3266,
									"end": 3273,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3263,
									"end": 3282,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3356,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3431,
									"end": 3434,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 3411,
									"end": 3435,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3444,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3445,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3388,
									"end": 3446,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3507,
									"end": 3508,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3487,
									"end": 3509,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 3777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 574,
									"end": 15738,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d237c68c3f7ec3bf01178d77250f64946dfe8ea7b438ab21d69ca7dc1d9dea764736f6c63430008110033",
									".code": [
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 15738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3610,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3700,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8191,
											"end": 8212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2345,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2453,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1262,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1511,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1401,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1401,
											"end": 1564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2069,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4411,
											"end": 4471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4435,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9048,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9118,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9176,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9193,
											"end": 9212,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9193,
											"end": 9212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8804,
											"end": 9218,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4389,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4605,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4607,
											"end": 4611,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4560,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4560,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4178,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9407,
											"end": 9428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9503,
											"end": 9537,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9476,
											"end": 9538,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9547,
											"end": 9586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9622,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9603,
											"end": 9622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9223,
											"end": 9628,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2826,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 2984,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2955,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3088,
											"end": 3096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3088,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3101,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3078,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3059,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3039,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2998,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3152,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 3160,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 3160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3328,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3700,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3908,
											"end": 3968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3460,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10239,
											"end": 10241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10221,
											"end": 10242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10280,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10251,
											"end": 10281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10317,
											"end": 10351,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10290,
											"end": 10352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10386,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10368,
											"end": 10386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10361,
											"end": 10400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10436,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10417,
											"end": 10436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10037,
											"end": 10442,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3886,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4048,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6503,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10649,
											"end": 10651,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10631,
											"end": 10652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10690,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10727,
											"end": 10761,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10700,
											"end": 10762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10771,
											"end": 10809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10845,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10826,
											"end": 10845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10447,
											"end": 10851,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6467,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6583,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6559,
											"end": 6625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6559,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6779,
											"end": 6789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6775,
											"end": 6789,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6824,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6862,
											"end": 6872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6862,
											"end": 6872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6945,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6945,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7078,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7084,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7137,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6791,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7227,
											"end": 7230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7193,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7240,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7289,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7309,
											"end": 7312,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7253,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7253,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6262,
											"end": 7336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12603,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12599,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12594,
											"end": 12611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12475,
											"end": 12477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12487,
											"end": 12517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12587,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12526,
											"end": 12588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12597,
											"end": 12636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12653,
											"end": 12672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12273,
											"end": 12678,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12586,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12703,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12771,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12448,
											"end": 12779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5264,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5428,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5451,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5387,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5548,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5548,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5741,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5724,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 12882,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12857,
											"end": 12882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12857,
											"end": 12882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 12915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12891,
											"end": 12925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12830,
											"end": 12848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5815,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5828,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5828,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5084,
											"end": 5904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 14716,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14956,
											"end": 14969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14952,
											"end": 15522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14992,
											"end": 15035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15052,
											"end": 15055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15057,
											"end": 15064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14992,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14992,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14992,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14988,
											"end": 15511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14988,
											"end": 15511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15384,
											"end": 15390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15377,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 15377,
											"end": 15391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15066,
											"end": 15087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15123,
											"end": 15125,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15096,
											"end": 15126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15162,
											"end": 15196,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15142,
											"end": 15160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15135,
											"end": 15197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15206,
											"end": 15256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15292,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15273,
											"end": 15292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14882,
											"end": 15298,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14988,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15153,
											"end": 15213,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 15149,
											"end": 15308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15238,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15238,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15603,
											"end": 15619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15632,
											"end": 15654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15632,
											"end": 15673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 15684,
											"end": 15692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15722,
											"end": 15727,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 15735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15537,
											"end": 15735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 13964,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14175,
											"end": 14701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14215,
											"end": 14253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14254,
											"end": 14262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14282,
											"end": 14286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14215,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14215,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14215,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14211,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 14211,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14337,
											"end": 14392,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14333,
											"end": 14487,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14417,
											"end": 14467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4191,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4239,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4431,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4564,
											"end": 4572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4613,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4798,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5037,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5042,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5272,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5367,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5451,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5787,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5978,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6335,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6674,
											"end": 6695,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6712,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6908,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 6922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 6944,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7258,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7263,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7299,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7347,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7589,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7625,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7673,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7911,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7947,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8562,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8672,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8715,
											"end": 8725,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8710,
											"end": 8713,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8727,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8740,
											"end": 8755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8778,
											"end": 8782,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8632,
											"end": 8793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9760,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9633,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9704,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9689,
											"end": 9692,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9685,
											"end": 9705,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9706,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9729,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9722,
											"end": 9723,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9715,
											"end": 9730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9746,
											"end": 9747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9754,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9892,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 9765,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9826,
											"end": 9836,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9821,
											"end": 9824,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9817,
											"end": 9837,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9857,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9854,
											"end": 9855,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9847,
											"end": 9862,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9878,
											"end": 9879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9886,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 10032,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9897,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9974,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9957,
											"end": 9974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 9974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9954,
											"end": 9997,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 9977,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10024,
											"end": 10025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10013,
											"end": 10026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 10032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 11257,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10856,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11060,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11040,
											"end": 11061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11097,
											"end": 11099,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11070,
											"end": 11100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11136,
											"end": 11170,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11131,
											"end": 11133,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11116,
											"end": 11134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11109,
											"end": 11171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11180,
											"end": 11215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11247,
											"end": 11250,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11232,
											"end": 11251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 11257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11262,
											"end": 11668,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11262,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11464,
											"end": 11466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11446,
											"end": 11467,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11503,
											"end": 11505,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11506,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11542,
											"end": 11576,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11537,
											"end": 11539,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11577,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11593,
											"end": 11611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 11611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11658,
											"end": 11661,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11262,
											"end": 11668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11673,
											"end": 11798,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 11673,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11747,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11769,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11792,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11756,
											"end": 11792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 11756,
											"end": 11792,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 12268,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 11803,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12138,
											"end": 12140,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12127,
											"end": 12136,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12115,
											"end": 12121,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 12086,
											"end": 12142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12086,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12190,
											"end": 12199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12200,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12173,
											"end": 12175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12151,
											"end": 12201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12255,
											"end": 12261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 12218,
											"end": 12262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12262,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12218,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12262,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 12268,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11803,
											"end": 12268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13763,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 12936,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13333,
											"end": 13348,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13348,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13348,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 13349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 13349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13382,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13358,
											"end": 13401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13298,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 13464,
											"end": 13521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13464,
											"end": 13521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13521,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 13464,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13561,
											"end": 13567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13552,
											"end": 13554,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13541,
											"end": 13550,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13537,
											"end": 13555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13530,
											"end": 13580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13603,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 13640,
											"end": 13646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13632,
											"end": 13638,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13603,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 13603,
											"end": 13647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13603,
											"end": 13647,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 13603,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 13706,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13678,
											"end": 13681,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13663,
											"end": 13682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13656,
											"end": 13707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13724,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13750,
											"end": 13756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13724,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 13724,
											"end": 13757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13724,
											"end": 13757,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13724,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13716,
											"end": 13757,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13763,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12936,
											"end": 13763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13768,
											"end": 14017,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 13768,
											"end": 14017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13837,
											"end": 13843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13890,
											"end": 13892,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 13888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13861,
											"end": 13893,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13858,
											"end": 13910,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13858,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13858,
											"end": 13910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13896,
											"end": 13908,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13858,
											"end": 13910,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13858,
											"end": 13910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13938,
											"end": 13947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13932,
											"end": 13948,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13957,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13981,
											"end": 13986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13957,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 13957,
											"end": 13987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14201,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 14022,
											"end": 14201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14057,
											"end": 14060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14100,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 14081,
											"end": 14097,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14101,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14075,
											"end": 14195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14145,
											"end": 14146,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14142,
											"end": 14143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14139,
											"end": 14140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14124,
											"end": 14147,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14182,
											"end": 14183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14176,
											"end": 14184,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14174,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14167,
											"end": 14185,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14195,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 14075,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14287,
											"end": 14291,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14269,
											"end": 14285,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14266,
											"end": 14292,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14302,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 14263,
											"end": 14302,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14263,
											"end": 14302,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 14263,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14329,
											"end": 14331,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14323,
											"end": 14332,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14394,
											"end": 14410,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14323,
											"end": 14332,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14366,
											"end": 14416,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14445,
											"end": 14449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14439,
											"end": 14450,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14469,
											"end": 14485,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14504,
											"end": 14522,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14575,
											"end": 14577,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14568,
											"end": 14572,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14560,
											"end": 14566,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14553,
											"end": 14578,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14540,
											"end": 14546,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14551,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14579,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14531,
											"end": 14589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14531,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 14531,
											"end": 14589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14531,
											"end": 14589,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 14531,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14617,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14609,
											"end": 14626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14655,
											"end": 14658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14649,
											"end": 14659,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14682,
											"end": 14684,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 14680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14685,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14688,
											"end": 14693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14772,
											"end": 14774,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14753,
											"end": 14769,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14747,
											"end": 14751,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14743,
											"end": 14770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14739,
											"end": 14775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14732,
											"end": 14736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14723,
											"end": 14729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14714,
											"end": 14730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14776,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14704,
											"end": 14786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14704,
											"end": 14786,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14704,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14846,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14843,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14829,
											"end": 14835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14821,
											"end": 14851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14819,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14795,
											"end": 14852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14852,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14795,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14877,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14206,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15707,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 15303,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15505,
											"end": 15507,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15508,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15487,
											"end": 15508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15487,
											"end": 15508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15544,
											"end": 15546,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15517,
											"end": 15547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15583,
											"end": 15617,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15578,
											"end": 15580,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15563,
											"end": 15581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15649,
											"end": 15651,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15634,
											"end": 15652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15634,
											"end": 15652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15697,
											"end": 15700,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15682,
											"end": 15701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15682,
											"end": 15701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15712,
											"end": 16273,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15712,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16009,
											"end": 16024,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16009,
											"end": 16024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16009,
											"end": 16024,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15991,
											"end": 16025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15991,
											"end": 16025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16056,
											"end": 16058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16041,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16041,
											"end": 16059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16120,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16153,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16163,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16129,
											"end": 16163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15974,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16194,
											"end": 16197,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16179,
											"end": 16198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16179,
											"end": 16198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16204,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16221,
											"end": 16267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16221,
											"end": 16267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16221,
											"end": 16267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 16221,
											"end": 16267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16221,
											"end": 16267,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 16221,
											"end": 16267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16213,
											"end": 16267,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 15712,
											"end": 16273,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15712,
											"end": 16273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"ex/NFTERC1155.sol",
								"node_modules/@openzeppelin/contracts/access/Ownable.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xf285634186e8a51a7812b857dceca0fb7fee1395ed581c7a464a1b78d4221cef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://492575bcc6e845831fb52117a228ae00d887ee895207d4fbf988f216adc73658\",\"dweb:/ipfs/QmVTzq1oSfCbUHBc6uZk3e41czdsaAzhkvSbu2ZYgWUmcs\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 378,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 384,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 386,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2d6f48f294e6e798d26a8160091e39e173f955566f5ddce18ab15766356e4930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b84688ab411266e9a20e63c8ae9958a3ff8a1af9d031d5d907976e1f1b8e4f7\",\"dweb:/ipfs/QmQpJ1697jCMMJ86BrkJfdJx9x7mV1gRmrywTcJoPZd7UD\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:7937:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"ex/NFTERC1155.sol",
								"node_modules/@openzeppelin/contracts/access/Ownable.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ex/NFTERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ex/NFTERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ex/NFTERC1155.sol": {
				"ast": {
					"absolutePath": "ex/NFTERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"BEEItems": [
							247
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						],
						"Ownable": [
							352
						]
					},
					"id": 248,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 1449,
							"src": "31:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 353,
							"src": "108:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nameLocations": [
											"206:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1448,
										"src": "206:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nameLocations": [
											"216:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "216:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "216:7:0"
								}
							],
							"canonicalName": "BEEItems",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								352,
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "BEEItems",
							"nameLocation": "193:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7824407f",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSupply",
									"nameLocation": "247:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 247,
									"src": "232:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "334:8:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "291:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 11,
												"name": "ERC1155",
												"nameLocations": [
													"283:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1448,
												"src": "283:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "283:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 247,
									"src": "269:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "414:397:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "442:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "425:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 25,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 26,
															"nodeType": "ArrayTypeName",
															"src": "425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"arguments": [
														{
															"id": 31,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "462:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "448:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 28,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 29,
															"nodeType": "ArrayTypeName",
															"src": "452:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:47:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "500:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "483:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 36,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ArrayTypeName",
															"src": "483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"id": 42,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 39,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 40,
															"nodeType": "ArrayTypeName",
															"src": "514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "483:51:0"
											},
											{
												"body": {
													"id": 74,
													"nodeType": "Block",
													"src": "611:94:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 58,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "626:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 62,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 59,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 60,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "634:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "630:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "626:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 63,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "626:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "626:24:0"
														},
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 66,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 70,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 67,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 68,
																			"name": "tokenSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "677:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "673:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "665:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "692:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "665:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "665:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "575:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 51,
																	"name": "tokenSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "592:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "580:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "579:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"initializationExpression": {
													"assignments": [
														46
													],
													"declarations": [
														{
															"constant": false,
															"id": 46,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "558:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 75,
															"src": "550:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 45,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 48,
													"initialValue": {
														"id": 47,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "550:23:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "606:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "606:3:0"
												},
												"nodeType": "ForStatement",
												"src": "545:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "730:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "738:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 80,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 76,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "715:40:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "766:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "780:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 86,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "794:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "780:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "766:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "766:37:0"
											}
										]
									},
									"functionSelector": "71ac14e6",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nameLocations": [
													"405:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "405:9:0"
										}
									],
									"name": "mintBatchWithNumber",
									"nameLocation": "359:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "387:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "379:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:19:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 247,
									"src": "350:461:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "900:340:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "928:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "911:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 103,
															"nodeType": "ArrayTypeName",
															"src": "911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"id": 108,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "948:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "934:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 105,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ArrayTypeName",
															"src": "938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:47:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "986:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "969:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 113,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ArrayTypeName",
															"src": "969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [
														{
															"id": 119,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "996:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 117,
															"nodeType": "ArrayTypeName",
															"src": "1000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "969:51:0"
											},
											{
												"body": {
													"id": 151,
													"nodeType": "Block",
													"src": "1085:82:0",
													"statements": [
														{
															"expression": {
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 135,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1100:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 139,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 136,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1104:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 137,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1108:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1104:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1100:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 140,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1100:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "1100:18:0"
														},
														{
															"expression": {
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 143,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 147,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 144,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 123,
																			"src": "1141:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 145,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1145:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1141:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1133:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1133:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1133:22:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1055:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 127,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1060:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 128,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1060:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1055:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"initializationExpression": {
													"assignments": [
														123
													],
													"declarations": [
														{
															"constant": false,
															"id": 123,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1044:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 152,
															"src": "1036:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 122,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1036:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 125,
													"initialValue": {
														"id": 124,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1048:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1036:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1080:3:0",
														"subExpression": {
															"id": 132,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 134,
													"nodeType": "ExpressionStatement",
													"src": "1080:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1031:136:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1199:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1203:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1199:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "1211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1215:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 158,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 153,
														"name": "safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1177:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1177:55:0"
											}
										]
									},
									"functionSelector": "9416308e",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithNumber",
									"nameLocation": "828:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "855:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "870:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "862:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "889:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:46:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:0"
									},
									"scope": 247,
									"src": "819:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1304:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 170,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1315:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "onlyOwner",
												"nameLocations": [
													"1295:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1295:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:9:0"
										}
									],
									"name": "setURI",
									"nameLocation": "1259:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "1280:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1266:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 247,
									"src": "1250:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1484:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 193,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 190,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1495:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1495:34:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1554:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 199,
																"name": "ids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1568:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1572:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1554:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1540:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1540:38:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyOwner",
												"nameLocations": [
													"1469:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1469:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1469:9:0"
										}
									],
									"name": "mintBatch",
									"nameLocation": "1355:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1373:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1365:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1394:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1377:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 178,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ArrayTypeName",
													"src": "1377:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1399:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 182,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:79:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:0"
									},
									"scope": 247,
									"src": "1346:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1647:37:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"name": "tokenSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "1665:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "1658:18:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1614:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1637:9:0"
									},
									"scope": 247,
									"src": "1594:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1785:240:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1820:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 224,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "1831:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1831:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1820:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "1864:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 229,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1873:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1873:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 227,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1847:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1847:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1901:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1798:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1983:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1968:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1968:25:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": true,
													"src": "2004:13:0",
													"subExpression": {
														"id": 242,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2006:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2004:13:0"
											}
										]
									},
									"functionSelector": "092f2dbf",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "brun",
									"nameLocation": "1701:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1724:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1750:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1742:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1771:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1763:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:72:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1785:0:0"
									},
									"scope": 247,
									"src": "1692:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 248,
							"src": "184:1844:0",
							"usedErrors": []
						}
					],
					"src": "2:2026:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1945
						],
						"Ownable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 1946,
							"src": "117:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "Context",
										"nameLocations": [
											"687:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "687:7:1"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "151:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								1945
							],
							"name": "Ownable",
							"nameLocation": "676:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "718:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "702:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 261,
									"name": "OwnershipTransferred",
									"nameLocation": "739:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "776:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "760:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "807:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "791:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:57:1"
									},
									"src": "733:84:1"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "938:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "968:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 265,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "949:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "949:32:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "825:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:0:1"
									},
									"scope": 352,
									"src": "924:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1125:32:1",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "1143:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "1136:13:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "997:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1079:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:9:1"
									},
									"scope": 352,
									"src": "1070:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1271:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 284,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "1290:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1301:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1290:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:1"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "1361:1:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1165:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 294,
									"name": "onlyOwner",
									"nameLocation": "1259:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:1"
									},
									"src": "1250:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "1775:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1786:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "1786:30:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1378:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nameLocations": [
													"1765:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1765:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1765:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1730:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:0:1"
									},
									"scope": 352,
									"src": "1721:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2049:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2068:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2080:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2080:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2068:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2060:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2163:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 326,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2144:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2144:28:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1832:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"2039:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "2039:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2039:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2014:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2006:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:18:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:1"
									},
									"scope": 352,
									"src": "1979:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2403:128:1",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2422:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "2414:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2414:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"id": 339,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2414:25:1"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2450:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2459:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2450:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2450:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 346,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2504:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 345,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2483:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "2478:45:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "2188:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2349:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2376:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2368:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:18:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:1"
									},
									"scope": 352,
									"src": "2340:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 353,
							"src": "658:1876:1",
							"usedErrors": []
						}
					],
					"src": "90:2446:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1923
						],
						"Context": [
							1945
						],
						"ERC1155": [
							1448
						],
						"ERC165": [
							1969
						],
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1571,
							"src": "124:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1612,
							"src": "150:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1627,
							"src": "184:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1924,
							"src": "232:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1946,
							"src": "267:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1449,
							"sourceUnit": 1970,
							"src": "302:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nameLocations": [
											"594:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1945,
										"src": "594:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "594:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nameLocations": [
											"603:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1969,
										"src": "603:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "603:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nameLocations": [
											"611:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "611:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "611:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"621:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1626,
										"src": "621:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "621:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "352:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1448,
							"linearizedBaseContracts": [
								1448,
								1626,
								1570,
								1969,
								1981,
								1945
							],
							"name": "ERC1155",
							"nameLocation": "583:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nameLocations": [
											"654:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "654:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "648:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "666:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "788:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "732:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "732:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 376,
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "751:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "910:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "857:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 379,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "857:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 382,
											"keyType": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "876:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 381,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "895:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1067:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1448,
									"src": "1052:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 385,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1052:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1158:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "1177:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1169:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1169:13:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1080:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1152:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1138:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:20:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:2"
									},
									"scope": 1448,
									"src": "1126:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1968,
										1980
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "1370:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1401:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 410,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "1421:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1570_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 409,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1416:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1416:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1570",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1431:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1416:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1401:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1459:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 416,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1479:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1626_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 415,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1474:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1474:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1626",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1500:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1474:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1459:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1401:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 423,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1552:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 421,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1528:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1448_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1534:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1968,
															"src": "1528:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1528:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1401:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 407,
												"id": 426,
												"nodeType": "Return",
												"src": "1381:183:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1198:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1271:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 402,
												"name": "ERC165",
												"nameLocations": [
													"1338:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1969,
												"src": "1338:6:2"
											},
											{
												"id": 403,
												"name": "IERC165",
												"nameLocations": [
													"1346:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1981,
												"src": "1346:7:2"
											}
										],
										"src": "1329:25:2"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1296:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1289:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 399,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:2"
									},
									"scope": 1448,
									"src": "1262:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1625
									],
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "2058:30:2",
										"statements": [
											{
												"expression": {
													"id": 437,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2076:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 436,
												"id": 438,
												"nodeType": "Return",
												"src": "2069:11:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1580:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1992:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2025:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1996:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:9:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:15:2"
									},
									"scope": 1448,
									"src": "1983:105:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1508
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2334:136:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "2353:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2372:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2364:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2353:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2376:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2345:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "2345:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 461,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "2440:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 463,
														"indexExpression": {
															"id": 462,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2440:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 465,
													"indexExpression": {
														"id": 464,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2440:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 466,
												"nodeType": "Return",
												"src": "2433:29:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2096:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2248:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2307:8:2"
									},
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2258:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2283:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2275:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:29:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:9:2"
									},
									"scope": 1448,
									"src": "2239:231:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2815:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 483,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "2834:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2843:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2834:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 485,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2853:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2857:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2853:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2834:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2865:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2826:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2826:83:2"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2939:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2922:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2922:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2969:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2978:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2969:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2955:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 496,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2959:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"nodeType": "ArrayTypeName",
															"src": "2959:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2922:63:2"
											},
											{
												"body": {
													"id": 527,
													"nodeType": "Block",
													"src": "3044:76:2",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3059:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "3073:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3059:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 518,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 472,
																				"src": "3088:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 520,
																			"indexExpression": {
																				"id": 519,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3097:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3088:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 521,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "3101:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 522,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "3105:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3101:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 517,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3078:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3078:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "3059:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3018:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3022:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3031:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3022:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3018:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3011:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 528,
															"src": "3003:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3003:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3015:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3003:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3039:3:2",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3041:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "3039:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2998:122:2"
											},
											{
												"expression": {
													"id": 529,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3139:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 481,
												"id": 530,
												"nodeType": "Return",
												"src": "3132:20:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2478:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2645:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2765:8:2"
									},
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2677:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2660:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 470,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 471,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2704:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2687:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2687:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "2687:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:49:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2792:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2792:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 479,
													"nodeType": "ArrayTypeName",
													"src": "2792:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:18:2"
									},
									"scope": 1448,
									"src": "2636:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1529
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3317:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 542,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "3347:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3347:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3328:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3328:52:2"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3168:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3242:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3308:8:2"
									},
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3268:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3260:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3283:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3278:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:33:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:0:2"
									},
									"scope": 1448,
									"src": "3233:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3565:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 560,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3583:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3583:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 564,
													"indexExpression": {
														"id": 563,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3611:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3583:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 565,
												"nodeType": "Return",
												"src": "3576:44:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3396:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3469:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3541:8:2"
									},
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3494:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3486:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3511:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3503:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3485:35:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3559:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3559:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:6:2"
									},
									"scope": 1448,
									"src": "3460:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1553
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3875:226:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "3908:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 584,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "3916:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3916:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3908:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "3949:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 589,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "3955:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3955:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 587,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "3932:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3932:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3908:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3983:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3886:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3886:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "3886:151:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4066:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4072:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4076:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4080:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4088:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "4048:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4048:45:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3636:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3709:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3866:8:2"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3744:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3736:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3767:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3759:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3801:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3801:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3839:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3826:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3826:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3725:125:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 1448,
									"src": "3700:401:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4378:242:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4411:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 624,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "4419:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4419:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4411:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4452:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 629,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "4458:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4458:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "4435:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4435:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4411:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4486:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4389:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4389:160:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4389:160:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4583:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4589:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4593:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4607:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4560:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4560:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4560:52:2"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4109:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4187:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4369:8:2"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4219:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4250:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4242:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4280:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4263:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "4263:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4311:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4294:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ArrayTypeName",
													"src": "4294:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4342:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4329:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4329:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:145:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4378:0:2"
									},
									"scope": 1448,
									"src": "4178:442:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5253:651:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5272:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5286:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5278:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5278:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5278:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5272:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5264:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5264:66:2"
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5351:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5343:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5343:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5362:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5343:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5408:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5418:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5424:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 679,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5446:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 678,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5428:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5428:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 682,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5469:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5451:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5451:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5478:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 674,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5387:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5387:96:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5504:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5496:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5496:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 689,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5518:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 691,
														"indexExpression": {
															"id": 690,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5528:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5518:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 693,
													"indexExpression": {
														"id": 692,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5532:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5518:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5496:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "5556:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5571:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5556:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5579:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5548:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5548:76:2"
											},
											{
												"id": 712,
												"nodeType": "UncheckedBlock",
												"src": "5635:79:2",
												"statements": [
													{
														"expression": {
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 702,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5660:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 705,
																	"indexExpression": {
																		"id": 703,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5670:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5660:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"id": 704,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5674:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5660:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "5682:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5696:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5682:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5660:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 711,
														"nodeType": "ExpressionStatement",
														"src": "5660:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "5724:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5734:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5724:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5738:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5724:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 718,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "5745:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5724:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "5724:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5784:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5794:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5800:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5804:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5808:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "5769:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "5764:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5869:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5875:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "5879:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5883:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 735,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5891:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 729,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "5828:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5828:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "5828:68:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4628:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5093:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5129:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5121:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5152:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5144:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5173:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5165:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5194:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5186:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:125:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:2"
									},
									"scope": 1448,
									"src": "5084:820:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "6456:880:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 756,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6475:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6479:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6475:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 758,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6489:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6497:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6489:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6475:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6505:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6467:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "6467:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 765,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "6567:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6581:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6573:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6573:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6573:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6567:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6585:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "6559:66:2"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6646:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "6638:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6638:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "6657:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6638:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6703:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6719:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6723:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 784,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6728:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6737:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 779,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "6682:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6682:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "6682:60:2"
											},
											{
												"body": {
													"id": 845,
													"nodeType": "Block",
													"src": "6796:380:2",
													"statements": [
														{
															"assignments": [
																800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 800,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6819:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6811:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6811:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 804,
															"initialValue": {
																"baseExpression": {
																	"id": 801,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6824:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 803,
																"indexExpression": {
																	"id": 802,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6828:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6824:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6811:19:2"
														},
														{
															"assignments": [
																806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6853:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6845:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6845:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"baseExpression": {
																	"id": 807,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6862:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "6870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6862:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6845:27:2"
														},
														{
															"assignments": [
																812
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 812,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6897:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 845,
																	"src": "6889:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6889:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 818,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 813,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "6911:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 815,
																	"indexExpression": {
																		"id": 814,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6921:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6911:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"id": 816,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "6925:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6911:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6889:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 820,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "6953:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 821,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6968:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6953:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6976:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 819,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6945:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6945:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6945:76:2"
														},
														{
															"id": 836,
															"nodeType": "UncheckedBlock",
															"src": "7036:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 826,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "7065:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 829,
																				"indexExpression": {
																					"id": 827,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "7075:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7065:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 830,
																			"indexExpression": {
																				"id": 828,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "7079:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7065:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 831,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "7087:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 832,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "7101:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7087:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7065:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 835,
																	"nodeType": "ExpressionStatement",
																	"src": "7065:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 837,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "7137:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 840,
																		"indexExpression": {
																			"id": 838,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "7147:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7137:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 839,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "7151:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7137:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "7158:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7137:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "7137:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "6775:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6779:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6783:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6779:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6775:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"initializationExpression": {
													"assignments": [
														789
													],
													"declarations": [
														{
															"constant": false,
															"id": 789,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6768:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 846,
															"src": "6760:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 788,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6760:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 791,
													"initialValue": {
														"hexValue": "30",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6772:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6760:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6791:3:2",
														"subExpression": {
															"id": 796,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6793:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ExpressionStatement",
													"src": "6791:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6755:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 848,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7207:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7217:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7223:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7227:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 852,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 847,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "7193:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "EmitStatement",
												"src": "7188:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "7289:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7299:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7305:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7309:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 860,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7314:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "7323:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 855,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7253:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7253:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "7253:75:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "5912:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6271:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6312:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6304:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6335:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6327:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6365:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6348:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6348:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "6348:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6396:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6379:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6379:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "6379:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6427:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "6414:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6414:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:145:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6456:0:2"
									},
									"scope": 1448,
									"src": "6262:1074:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "8236:32:2",
										"statements": [
											{
												"expression": {
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "8247:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 872,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "8254:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8247:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8247:13:2"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "7344:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8189:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8211:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "8197:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8196:22:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8236:0:2"
									},
									"scope": 1448,
									"src": "8180:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "8788:435:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "8807:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8821:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8813:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8813:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8813:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8807:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8825:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8799:62:2"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8882:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 950,
														"src": "8874:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8874:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "8893:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8893:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8874:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8939:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "8961:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8983:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8965:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8965:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "9006:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 913,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "8988:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8988:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9015:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "8918:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "8918:102:2"
											},
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 919,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9033:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 922,
															"indexExpression": {
																"id": 920,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "9043:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9033:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 923,
														"indexExpression": {
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9047:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9033:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 924,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9054:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9033:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "9033:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9091:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9109:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9101:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9101:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9101:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9113:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "9076:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "EmitStatement",
												"src": "9071:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "9172:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9190:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9182:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9182:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9182:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9194:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9198:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "9210:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "9141:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9141:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "9141:74:2"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "8276:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8663:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8687:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8679:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8708:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8700:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8729:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8721:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8759:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "8746:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8746:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8668:102:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8788:0:2"
									},
									"scope": 1448,
									"src": "8654:569:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "9738:576:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "9757:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9771:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9763:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9763:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9763:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9757:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9775:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9749:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9749:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "9749:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "9830:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9834:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9830:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 978,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "9844:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9852:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9844:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9830:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9860:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9822:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9822:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "9822:81:2"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9924:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "9916:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9916:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "9935:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9935:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9916:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9981:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9999:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9991:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9991:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9991:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10007:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 997,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10021:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 989,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "9960:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9960:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "9960:66:2"
											},
											{
												"body": {
													"id": 1024,
													"nodeType": "Block",
													"src": "10080:62:2",
													"statements": [
														{
															"expression": {
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1012,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "10095:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1017,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1013,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "10105:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1015,
																			"indexExpression": {
																				"id": 1014,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "10109:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10105:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10095:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1018,
																	"indexExpression": {
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "10113:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10095:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1019,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "10120:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"id": 1020,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "10128:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10120:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10095:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "10095:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "10059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1006,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10063:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10067:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10063:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10059:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"initializationExpression": {
													"assignments": [
														1002
													],
													"declarations": [
														{
															"constant": false,
															"id": 1002,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10052:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1025,
															"src": "10044:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10044:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1004,
													"initialValue": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10056:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10044:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10075:3:2",
														"subExpression": {
															"id": 1009,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "10075:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1011,
													"nodeType": "ExpressionStatement",
													"src": "10075:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10039:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10173:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10191:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10183:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10183:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10195:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10199:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1034,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1026,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "10159:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10159:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "EmitStatement",
												"src": "10154:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "10261:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10283:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "10287:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1045,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "10292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1037,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "10225:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "10225:81:2"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "9231:342:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9588:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9617:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9609:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9647:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9630:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 955,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9630:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"nodeType": "ArrayTypeName",
													"src": "9630:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9661:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 958,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 959,
													"nodeType": "ArrayTypeName",
													"src": "9661:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9709:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "9696:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9696:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9598:122:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:2"
									},
									"scope": 1448,
									"src": "9579:735:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10672:540:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "10691:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10707:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10699:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10699:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10691:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10711:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10683:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10683:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "10683:66:2"
											},
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10770:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10762:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "10781:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10781:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10827:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "10837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10851:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10843:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10843:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10843:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "10873:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1082,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10855:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10855:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10896:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1085,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "10878:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10878:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10905:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1075,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "10806:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10806:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "10806:102:2"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10929:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "10921:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1093,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "10943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "10953:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10943:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1097,
													"indexExpression": {
														"id": 1096,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "10957:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10943:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10921:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "10981:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1101,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "10996:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10981:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11004:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10973:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10973:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "10973:70:2"
											},
											{
												"id": 1116,
												"nodeType": "UncheckedBlock",
												"src": "11054:79:2",
												"statements": [
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "11079:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"id": 1107,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "11089:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11079:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1110,
																"indexExpression": {
																	"id": 1108,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "11093:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11079:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1111,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "11101:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1112,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "11115:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11101:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11079:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "11079:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "11165:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "11175:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11189:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11181:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11181:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11181:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "11193:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11197:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "11150:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11150:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "11145:59:2"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "10322:236:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10573:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10597:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10589:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10620:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10612:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10641:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10633:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10578:76:2"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10672:0:2"
									},
									"scope": 1448,
									"src": "10564:648:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "11548:758:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11567:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11583:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11575:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1143,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11575:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11575:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11567:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11587:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11559:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11559:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "11559:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1152,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11644:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11648:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11644:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1154,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11658:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11666:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11658:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11644:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11674:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11636:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11636:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "11636:81:2"
											},
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11738:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "11730:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11730:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1162,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "11749:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11749:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11730:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11795:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "11805:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11819:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11811:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11811:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11811:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11823:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1173,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "11828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11837:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1165,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "11774:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11774:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "11774:66:2"
											},
											{
												"body": {
													"id": 1226,
													"nodeType": "Block",
													"src": "11894:332:2",
													"statements": [
														{
															"assignments": [
																1189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1189,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11917:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11909:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11909:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1193,
															"initialValue": {
																"baseExpression": {
																	"id": 1190,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "11922:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1192,
																"indexExpression": {
																	"id": 1191,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11926:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11909:19:2"
														},
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11951:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11943:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11943:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"baseExpression": {
																	"id": 1196,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "11960:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1198,
																"indexExpression": {
																	"id": 1197,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "11968:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11960:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11943:27:2"
														},
														{
															"assignments": [
																1201
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1201,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11995:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1226,
																	"src": "11987:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1200,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11987:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1207,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1202,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "12009:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1204,
																	"indexExpression": {
																		"id": 1203,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "12019:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12009:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1206,
																"indexExpression": {
																	"id": 1205,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "12023:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12009:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11987:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1201,
																			"src": "12051:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1210,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "12066:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12051:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12074:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1208,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12043:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12043:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1214,
															"nodeType": "ExpressionStatement",
															"src": "12043:70:2"
														},
														{
															"id": 1225,
															"nodeType": "UncheckedBlock",
															"src": "12128:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1215,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 378,
																					"src": "12157:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1218,
																				"indexExpression": {
																					"id": 1216,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "12167:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12157:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1219,
																			"indexExpression": {
																				"id": 1217,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "12171:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12157:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "12179:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1221,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "12193:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12179:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12157:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "12157:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "11873:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1182,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11877:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11881:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11877:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11873:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"initializationExpression": {
													"assignments": [
														1178
													],
													"declarations": [
														{
															"constant": false,
															"id": 1178,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11866:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1227,
															"src": "11858:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1177,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11858:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1180,
													"initialValue": {
														"hexValue": "30",
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11870:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11858:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11889:3:2",
														"subExpression": {
															"id": 1185,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11889:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1187,
													"nodeType": "ExpressionStatement",
													"src": "11889:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11853:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "12257:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "12267:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12273:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12273:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12273:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "12285:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1236,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "12290:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1228,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "12243:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12243:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "12238:60:2"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "11220:189:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11424:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11445:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11485:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11468:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1133,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1134,
													"nodeType": "ArrayTypeName",
													"src": "11468:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11516:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "11499:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "11499:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11434:96:2"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11548:0:2"
									},
									"scope": 1448,
									"src": "11415:891:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "12575:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12594:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1252,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "12603:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12594:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12613:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12586:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "12586:71:2"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1257,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "12668:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1260,
															"indexExpression": {
																"id": 1258,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "12687:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12668:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1259,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12694:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12668:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1262,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "12706:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12668:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "12668:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1266,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "12745:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12752:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12762:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1265,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12730:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12730:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "12725:46:2"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "12314:128:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12457:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12494:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12486:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12518:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12510:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12542:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "12537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12475:82:2"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12575:0:2"
									},
									"scope": 1448,
									"src": "12448:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "13954:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "12787:942:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13744:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13810:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13802:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13833:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13825:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13863:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13846:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "13846:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13877:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1283,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13877:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1284,
													"nodeType": "ArrayTypeName",
													"src": "13877:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "13912:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13764:172:2"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13954:0:2"
									},
									"scope": 1448,
									"src": "13735:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "14164:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "14179:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14182:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14179:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14179:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "14175:526:2",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "14196:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1333,
																		"nodeType": "Block",
																		"src": "14314:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1322,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "14337:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1323,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "14349:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14366:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1592,
																							"src": "14349:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14384:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14349:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14337:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1332,
																				"nodeType": "IfStatement",
																				"src": "14333:154:2",
																				"trueBody": {
																					"id": 1331,
																					"nodeType": "Block",
																					"src": "14394:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1328,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14424:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1327,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14417:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1329,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14417:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1330,
																							"nodeType": "ExpressionStatement",
																							"src": "14417:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1334,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1321,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1320,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1334,
																				"src": "14297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1319,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14296:17:2"
																	},
																	"src": "14288:214:2"
																},
																{
																	"block": {
																		"id": 1342,
																		"nodeType": "Block",
																		"src": "14537:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1339,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "14563:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1338,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14556:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14556:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1341,
																				"nodeType": "ExpressionStatement",
																				"src": "14556:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1343,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1337,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1336,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14529:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1343,
																				"src": "14515:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1335,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14515:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14514:22:2"
																	},
																	"src": "14503:83:2"
																},
																{
																	"block": {
																		"id": 1348,
																		"nodeType": "Block",
																		"src": "14593:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14619:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1344,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14612:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14612:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1347,
																				"nodeType": "ExpressionStatement",
																				"src": "14612:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1349,
																	"nodeType": "TryCatchClause",
																	"src": "14587:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "14254:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1314,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "14264:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "14270:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "14274:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "14282:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "14232:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1309,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14215:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14215:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14236:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1592,
																	"src": "14215:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14215:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1350,
															"nodeType": "TryStatement",
															"src": "14211:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13973:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14022:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14014:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14014:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14049:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14041:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14072:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14064:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "14093:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14085:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14114:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14106:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14106:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14144:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "14131:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14131:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14003:152:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14164:0:2"
									},
									"scope": 1448,
									"src": "13964:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "14941:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1371,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "14956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14959:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "14956:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14956:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "IfStatement",
												"src": "14952:570:2",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "14973:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1398,
																		"nodeType": "Block",
																		"src": "15130:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1387,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "15153:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1388,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1611,
																								"src": "15165:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15182:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1610,
																							"src": "15165:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15205:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15165:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15153:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1397,
																				"nodeType": "IfStatement",
																				"src": "15149:159:2",
																				"trueBody": {
																					"id": 1396,
																					"nodeType": "Block",
																					"src": "15215:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1393,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15245:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1392,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15238:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1394,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15238:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1395,
																							"nodeType": "ExpressionStatement",
																							"src": "15238:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1399,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1386,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1385,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15106:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1399,
																				"src": "15099:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1384,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15099:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15080:49:2"
																	},
																	"src": "15072:251:2"
																},
																{
																	"block": {
																		"id": 1407,
																		"nodeType": "Block",
																		"src": "15358:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1404,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1401,
																							"src": "15384:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1403,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15377:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15377:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1406,
																				"nodeType": "ExpressionStatement",
																				"src": "15377:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1408,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1402,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15350:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1408,
																				"src": "15336:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15336:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15335:22:2"
																	},
																	"src": "15324:83:2"
																},
																{
																	"block": {
																		"id": 1413,
																		"nodeType": "Block",
																		"src": "15414:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1410,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15440:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1409,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15433:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15433:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1412,
																				"nodeType": "ExpressionStatement",
																				"src": "15433:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1414,
																	"nodeType": "TryCatchClause",
																	"src": "15408:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1378,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "15036:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1379,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "15046:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1380,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "15052:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1381,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "15057:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "15066:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1375,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "15009:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1374,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "14992:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1611_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14992:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1611",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15013:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "14992:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14992:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1415,
															"nodeType": "TryStatement",
															"src": "14988:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14725:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14779:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14771:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14829:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14821:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14859:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14842:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1361,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14842:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1362,
													"nodeType": "ArrayTypeName",
													"src": "14842:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14873:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1364,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1365,
													"nodeType": "ArrayTypeName",
													"src": "14873:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14921:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "14908:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14908:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14760:172:2"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14941:0:2"
									},
									"scope": 1448,
									"src": "14716:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "15621:114:2",
										"statements": [
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15649:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "15632:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1430,
															"nodeType": "ArrayTypeName",
															"src": "15632:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15671:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15657:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15661:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ArrayTypeName",
															"src": "15661:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15657:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15632:41:2"
											},
											{
												"expression": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1438,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "15684:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1440,
														"indexExpression": {
															"hexValue": "30",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15690:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15684:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1441,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "15695:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15684:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "15684:18:2"
											},
											{
												"expression": {
													"id": 1444,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1431,
													"src": "15722:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1445,
												"nodeType": "Return",
												"src": "15715:12:2"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15546:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15563:17:2"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "15603:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1423,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15603:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ArrayTypeName",
													"src": "15603:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15602:18:2"
									},
									"scope": 1448,
									"src": "15537:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1449,
							"src": "574:15164:2",
							"usedErrors": []
						}
					],
					"src": "97:15643:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC165": [
							1981
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1571,
							"sourceUnit": 1982,
							"src": "125:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1453,
										"name": "IERC165",
										"nameLocations": [
											"370:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "370:7:3"
									},
									"id": 1454,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1452,
								"nodeType": "StructuredDocumentation",
								"src": "176:170:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1570,
							"linearizedBaseContracts": [
								1570,
								1981
							],
							"name": "IERC1155",
							"nameLocation": "358:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "385:123:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1467,
									"name": "TransferSingle",
									"nameLocation": "520:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "551:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "535:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "611:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "603:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "623:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "615:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:95:3"
									},
									"src": "514:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "638:147:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1482,
									"name": "TransferBatch",
									"nameLocation": "797:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "837:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "821:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "872:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "856:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "887:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "916:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1475,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1476,
													"nodeType": "ArrayTypeName",
													"src": "916:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "950:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "940:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1479,
													"nodeType": "ArrayTypeName",
													"src": "940:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:153:3"
									},
									"src": "791:173:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "972:150:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1491,
									"name": "ApprovalForAll",
									"nameLocation": "1134:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1165:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1149:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1190:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1174:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1205:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1200:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1200:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:66:3"
									},
									"src": "1128:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1223:349:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1498,
									"name": "URI",
									"nameLocation": "1584:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1588:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1618:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1602:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:34:3"
									},
									"src": "1578:44:3"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1630:179:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1824:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1842:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1834:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1859:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1851:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:29:3"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1886:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:9:3"
									},
									"scope": 1570,
									"src": "1815:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1903:194:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2112:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2146:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2127:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2127:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1511,
													"nodeType": "ArrayTypeName",
													"src": "2127:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2175:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2156:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:53:3"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2230:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2230:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "2230:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:18:3"
									},
									"scope": 1570,
									"src": "2103:145:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2256:256:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2527:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2545:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2563:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:33:3"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:3"
									},
									"scope": 1570,
									"src": "2518:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2595:139:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2774:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2766:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2791:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2783:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:35:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2824:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:6:3"
									},
									"scope": 1570,
									"src": "2740:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2838:571:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3424:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3459:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3451:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3474:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3503:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3495:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3524:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3516:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3556:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "3541:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:127:3"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:3"
									},
									"scope": 1570,
									"src": "3415:162:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "3585:400:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4000:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4063:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4055:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4095:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4076:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4076:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1560,
													"nodeType": "ArrayTypeName",
													"src": "4076:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4128:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4109:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "4109:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4161:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "4146:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:151:3"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:3"
									},
									"scope": 1570,
									"src": "3991:191:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1571,
							"src": "348:3837:3",
							"usedErrors": []
						}
					],
					"src": "98:4089:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1611
						],
						"IERC165": [
							1981
						]
					},
					"id": 1612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1573,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 1982,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "IERC165",
										"nameLocations": [
											"257:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "257:7:4"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "184:41:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1981
							],
							"name": "IERC1155Receiver",
							"nameLocation": "237:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "272:828:4",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1115:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1178:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1170:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1201:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1193:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1222:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1214:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1253:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1238:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1238:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:132:4"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1283:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:8:4"
									},
									"scope": 1611,
									"src": "1106:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1299:989:4",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2303:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2344:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2336:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2371:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2363:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2405:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2386:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "2386:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2438:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2419:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2419:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ArrayTypeName",
													"src": "2419:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2470:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2455:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2455:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:156:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2500:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2500:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:8:4"
									},
									"scope": 1611,
									"src": "2294:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1612,
							"src": "227:2284:4",
							"usedErrors": []
						}
					],
					"src": "106:2407:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1570
						],
						"IERC1155MetadataURI": [
							1626
						],
						"IERC165": [
							1981
						]
					},
					"id": 1627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1627,
							"sourceUnit": 1571,
							"src": "147:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1616,
										"name": "IERC1155",
										"nameLocations": [
											"410:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "410:8:5"
									},
									"id": 1617,
									"nodeType": "InheritanceSpecifier",
									"src": "410:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1615,
								"nodeType": "StructuredDocumentation",
								"src": "176:199:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1626,
							"linearizedBaseContracts": [
								1626,
								1570,
								1981
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "387:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "426:197:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "638:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "650:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "642:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:12:5"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "677:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:15:5"
									},
									"scope": 1626,
									"src": "629:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1627,
							"src": "377:318:5",
							"usedErrors": []
						}
					],
					"src": "120:577:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1923
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923
							],
							"name": "Address",
							"nameLocation": "195:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "863:321:6",
										"statements": [
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1645,
														"src": "1065:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:6",
														"valueSize": 1
													}
												],
												"id": 1640,
												"nodeType": "InlineAssembly",
												"src": "1088:63:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1168:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1644,
												"nodeType": "Return",
												"src": "1161:15:6"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "817:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "857:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:6"
									},
									"scope": 1923,
									"src": "797:387:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "2190:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1657,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1655,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2223:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2234:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:6"
											},
											{
												"assignments": [
													1666,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "2288:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1667,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "2306:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2316:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "2328:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "2358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:6"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2138:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "2165:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:6"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:6"
									},
									"scope": 1923,
									"src": "2119:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "3287:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "3318:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3326:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1690,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1697,
															1717
														],
														"referencedDeclaration": 1717,
														"src": "3305:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1695,
												"nodeType": "Return",
												"src": "3298:67:6"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3220:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:6"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "3273:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:6"
									},
									"scope": 1923,
									"src": "3198:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "3754:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3794:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3802:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "3811:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "3772:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1715,
												"nodeType": "Return",
												"src": "3765:59:6"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3635:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3660:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3688:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "3740:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:6"
									},
									"scope": 1923,
									"src": "3603:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4354:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "4394:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "4402:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4408:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1729,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1737,
															1787
														],
														"referencedDeclaration": 1787,
														"src": "4372:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1735,
												"nodeType": "Return",
												"src": "4365:94:6"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4248:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4273:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4301:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4340:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:6"
									},
									"scope": 1923,
									"src": "4207:260:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "4907:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1923",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4940:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4951:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1764,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "5029:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1763,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5018:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:6"
											},
											{
												"assignments": [
													1770,
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5084:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "5098:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "5151:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1773,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "5125:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "5144:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1781,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "5191:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1782,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5200:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1783,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5212:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1780,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5174:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1785,
												"nodeType": "Return",
												"src": "5167:58:6"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4764:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4789:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4817:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4841:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4893:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:6"
									},
									"scope": 1923,
									"src": "4723:510:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "5518:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "5555:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "5563:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1797,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1804,
															1839
														],
														"referencedDeclaration": 1839,
														"src": "5536:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1802,
												"nodeType": "Return",
												"src": "5529:80:6"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5446:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5462:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:6"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "5504:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:6"
									},
									"scope": 1923,
									"src": "5418:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "5971:233:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1818,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "6001:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "5990:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:6"
											},
											{
												"assignments": [
													1824,
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6063:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "6077:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1825,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"id": 1829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "6122:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1827,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "6104:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "6162:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1834,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "6171:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1835,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6183:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1832,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6145:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1837,
												"nodeType": "Return",
												"src": "6138:58:6"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5847:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5872:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5900:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "5957:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:6"
									},
									"scope": 1923,
									"src": "5809:395:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "6488:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6527:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "6535:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1849,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1856,
															1891
														],
														"referencedDeclaration": 1891,
														"src": "6506:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1854,
												"nodeType": "Return",
												"src": "6499:84:6"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6421:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6437:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:6"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "6474:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:6"
									},
									"scope": 1923,
									"src": "6391:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "6944:237:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1870,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "6974:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1869,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "6963:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:6"
											},
											{
												"assignments": [
													1876,
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7038:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1875,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "7052:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"arguments": [
														{
															"id": 1881,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "7099:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1879,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "7079:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7086:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "7139:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1886,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "7148:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1887,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "7160:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1884,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "7122:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1889,
												"nodeType": "Return",
												"src": "7115:58:6"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6825:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6850:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6878:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:6"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "6930:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:6"
									},
									"scope": 1923,
									"src": "6785:396:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "7573:548:6",
										"statements": [
											{
												"condition": {
													"id": 1903,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1894,
													"src": "7588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "7647:467:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1907,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "7733:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7744:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1917,
																"nodeType": "Block",
																"src": "8048:55:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1914,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "8074:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1913,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1916,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:6"
																	}
																]
															},
															"id": 1918,
															"nodeType": "IfStatement",
															"src": "7729:374:6",
															"trueBody": {
																"id": 1912,
																"nodeType": "Block",
																"src": "7756:286:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1896,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1911,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:6"
																	}
																]
															}
														}
													]
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "7584:530:6",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "7597:44:6",
													"statements": [
														{
															"expression": {
																"id": 1904,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "7619:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1902,
															"id": 1905,
															"nodeType": "Return",
															"src": "7612:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7445:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7468:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7502:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:6"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "7559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:6"
									},
									"scope": 1923,
									"src": "7409:712:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1924,
							"src": "187:7937:6",
							"usedErrors": []
						}
					],
					"src": "89:8037:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1945
						]
					},
					"id": 1946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1945,
							"linearizedBaseContracts": [
								1945
							],
							"name": "Context",
							"nameLocation": "641:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "718:36:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1931,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1933,
												"nodeType": "Return",
												"src": "729:17:7"
											}
										]
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1945,
									"src": "656:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "829:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1940,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1942,
												"nodeType": "Return",
												"src": "840:15:7"
											}
										]
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:7"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "813:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:7"
									},
									"scope": 1945,
									"src": "762:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1946,
							"src": "623:243:7",
							"usedErrors": []
						}
					],
					"src": "89:779:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1969
						],
						"IERC165": [
							1981
						]
					},
					"id": 1970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1947,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 1982,
							"src": "129:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1950,
										"name": "IERC165",
										"nameLocations": [
											"775:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1981,
										"src": "775:7:8"
									},
									"id": 1951,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1949,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969,
								1981
							],
							"name": "ERC165",
							"nameLocation": "765:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "945:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "963:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1962,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "983:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1981_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1961,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1981",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "992:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1959,
												"id": 1966,
												"nodeType": "Return",
												"src": "956:47:8"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1956,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:8"
									},
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "881:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:8"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "939:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:8"
									},
									"scope": 1969,
									"src": "854:157:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1970,
							"src": "747:267:8",
							"usedErrors": []
						}
					],
					"src": "102:914:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1981
						]
					},
					"id": 1982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1972,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1981,
							"linearizedBaseContracts": [
								1981
							],
							"name": "IERC165",
							"nameLocation": "429:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "824:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "867:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:9"
									},
									"scope": 1981,
									"src": "797:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1982,
							"src": "419:457:9",
							"usedErrors": []
						}
					],
					"src": "103:775:9"
				},
				"id": 9
			}
		}
	}
}
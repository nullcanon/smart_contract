{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610188806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b9e6152b14610030575b600080fd5b61004361003e366004610109565b610045565b005b6040516370a0823160e01b81523360048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b09190610139565b9050816001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ed57600080fd5b505af1158015610101573d6000803e3d6000fd5b505050505050565b60006020828403121561011b57600080fd5b81356001600160a01b038116811461013257600080fd5b9392505050565b60006020828403121561014b57600080fd5b505191905056fea2646970667358221220774374c5543bad2e15565e7b8bd1a9d496e2dbb2b501364874d0f7bc33c8ce5564736f6c634300080f0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9E6152B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4374C5543BAD2E15565E7B8BD1A9D496E2DBB2B501364874 0xD0 0xF7 0xBC CALLER 0xC8 0xCE SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
			"sourceMap": "92:218:1:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@process_77": {
					"entryPoint": 69,
					"id": 77,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_tuple_t_address": {
					"entryPoint": 265,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256_fromMemory": {
					"entryPoint": 313,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:699:2",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:2",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "84:216:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "130:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "139:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "142:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "132:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "132:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "132:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "105:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "114:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "101:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "101:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "126:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "97:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "97:32:2"
											},
											"nodeType": "YulIf",
											"src": "94:52:2"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "155:36:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "181:9:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "168:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "168:23:2"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "159:5:2",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "254:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "263:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "266:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "256:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "256:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "256:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "213:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "224:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "239:3:2",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "244:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "235:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "235:11:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "248:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "231:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "231:19:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "220:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:31:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "210:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "210:42:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "203:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "203:50:2"
											},
											"nodeType": "YulIf",
											"src": "200:70:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "279:15:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "289:5:2"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "279:6:2"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "50:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "61:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "73:6:2",
										"type": ""
									}
								],
								"src": "14:286:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "406:102:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "416:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "428:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "439:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "424:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "424:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "416:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "458:9:2"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "473:6:2"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "489:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "494:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "498:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:19:2"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "469:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "469:32:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "451:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "451:51:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "451:51:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "375:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "386:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "397:4:2",
										"type": ""
									}
								],
								"src": "305:203:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "594:103:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "640:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "649:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "652:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "642:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "642:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "642:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "615:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "624:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "611:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "611:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "636:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "607:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "607:32:2"
											},
											"nodeType": "YulIf",
											"src": "604:52:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "665:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "681:9:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "675:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "675:16:2"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "665:6:2"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "560:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "571:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "583:6:2",
										"type": ""
									}
								],
								"src": "513:184:2"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b9e6152b14610030575b600080fd5b61004361003e366004610109565b610045565b005b6040516370a0823160e01b81523360048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b09190610139565b9050816001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ed57600080fd5b505af1158015610101573d6000803e3d6000fd5b505050505050565b60006020828403121561011b57600080fd5b81356001600160a01b038116811461013257600080fd5b9392505050565b60006020828403121561014b57600080fd5b505191905056fea2646970667358221220774374c5543bad2e15565e7b8bd1a9d496e2dbb2b501364874d0f7bc33c8ce5564736f6c634300080f0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9E6152B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3D18B912 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4374C5543BAD2E15565E7B8BD1A9D496E2DBB2B501364874 0xD0 0xF7 0xBC CALLER 0xC8 0xCE SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
			"sourceMap": "92:218:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;129:174;;;;;;:::i;:::-;;:::i;:::-;;;198:43;;-1:-1:-1;;;198:43:1;;230:10;198:43;;;451:51:2;180:15:1;;-1:-1:-1;;;;;198:31:1;;;;;424:18:2;;198:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;180:61;;268:4;-1:-1:-1;;;;;252:31:1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:134;129:174;:::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;513:184::-;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;-1:-1:-1;675:16:2;;513:184;-1:-1:-1;513:184:2:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "78400",
				"executionCost": "129",
				"totalCost": "78529"
			},
			"external": {
				"process(address)": "infinite"
			}
		},
		"methodIdentifiers": {
			"process(address)": "b9e6152b"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "pool",
					"type": "address"
				}
			],
			"name": "process",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}
{
	"id": "be0da96934fca4825e872f3dab7f1f91",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"msc_token/MscVesting.sol": {
				"content": "\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\nimport \"./node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\";\r\n\r\n\r\n\r\ncontract MscVesting is TokenVesting {\r\n    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) \r\n    TokenVesting(beneficiary, start, cliffDuration, duration, revocable) \r\n    public {\r\n        \r\n    }\r\n}"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../token/ERC20/SafeERC20.sol\";\nimport \"../ownership/Ownable.sol\";\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title TokenVesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, with a cliff and vesting period. Optionally revocable by the\n * owner.\n */\ncontract TokenVesting is Ownable {\n    // The vesting schedule is time-based (i.e. using block timestamps as opposed to e.g. block numbers), and is\n    // therefore sensitive to timestamp manipulation (which is something miners can do, to a certain degree). Therefore,\n    // it is recommended to avoid using short time durations (less than a minute). Typical vesting schemes, with a\n    // cliff period of a year and a duration of four years, are safe to use.\n    // solhint-disable not-rely-on-time\n\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    event TokensReleased(address token, uint256 amount);\n    event TokenVestingRevoked(address token);\n\n    // beneficiary of tokens after they are released\n    address private _beneficiary;\n\n    // Durations and timestamps are expressed in UNIX time, the same units as block.timestamp.\n    uint256 private _cliff;\n    uint256 private _start;\n    uint256 private _duration;\n\n    bool private _revocable;\n\n    mapping (address => uint256) private _released;\n    mapping (address => bool) private _revoked;\n\n    /**\n     * @dev Creates a vesting contract that vests its balance of any ERC20 token to the\n     * beneficiary, gradually in a linear fashion until start + duration. By then all\n     * of the balance will have vested.\n     * @param beneficiary address of the beneficiary to whom vested tokens are transferred\n     * @param cliffDuration duration in seconds of the cliff in which tokens will begin to vest\n     * @param start the time (as Unix time) at which point vesting starts\n     * @param duration duration in seconds of the period in which the tokens will vest\n     * @param revocable whether the vesting is revocable or not\n     */\n    constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {\n        require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\");\n        // solhint-disable-next-line max-line-length\n        require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\");\n        require(duration > 0, \"TokenVesting: duration is 0\");\n        // solhint-disable-next-line max-line-length\n        require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\");\n\n        _beneficiary = beneficiary;\n        _revocable = revocable;\n        _duration = duration;\n        _cliff = start.add(cliffDuration);\n        _start = start;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the cliff time of the token vesting.\n     */\n    function cliff() public view returns (uint256) {\n        return _cliff;\n    }\n\n    /**\n     * @return the start time of the token vesting.\n     */\n    function start() public view returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @return the duration of the token vesting.\n     */\n    function duration() public view returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @return true if the vesting is revocable.\n     */\n    function revocable() public view returns (bool) {\n        return _revocable;\n    }\n\n    /**\n     * @return the amount of the token released.\n     */\n    function released(address token) public view returns (uint256) {\n        return _released[token];\n    }\n\n    /**\n     * @return true if the token is revoked.\n     */\n    function revoked(address token) public view returns (bool) {\n        return _revoked[token];\n    }\n\n    /**\n     * @notice Transfers vested tokens to beneficiary.\n     * @param token ERC20 token which is being vested\n     */\n    function release(IERC20 token) public {\n        uint256 unreleased = _releasableAmount(token);\n\n        require(unreleased > 0, \"TokenVesting: no tokens are due\");\n\n        _released[address(token)] = _released[address(token)].add(unreleased);\n\n        token.safeTransfer(_beneficiary, unreleased);\n\n        emit TokensReleased(address(token), unreleased);\n    }\n\n    /**\n     * @notice Allows the owner to revoke the vesting. Tokens already vested\n     * remain in the contract, the rest are returned to the owner.\n     * @param token ERC20 token which is being vested\n     */\n    function revoke(IERC20 token) public onlyOwner {\n        require(_revocable, \"TokenVesting: cannot revoke\");\n        require(!_revoked[address(token)], \"TokenVesting: token already revoked\");\n\n        uint256 balance = token.balanceOf(address(this));\n\n        uint256 unreleased = _releasableAmount(token);\n        uint256 refund = balance.sub(unreleased);\n\n        _revoked[address(token)] = true;\n\n        token.safeTransfer(owner(), refund);\n\n        emit TokenVestingRevoked(address(token));\n    }\n\n    /**\n     * @dev Calculates the amount that has already vested but hasn't been released yet.\n     * @param token ERC20 token which is being vested\n     */\n    function _releasableAmount(IERC20 token) private view returns (uint256) {\n        return _vestedAmount(token).sub(_released[address(token)]);\n    }\n\n    /**\n     * @dev Calculates the amount that has already vested.\n     * @param token ERC20 token which is being vested\n     */\n    function _vestedAmount(IERC20 token) private view returns (uint256) {\n        uint256 currentBalance = token.balanceOf(address(this));\n        uint256 totalBalance = currentBalance.add(_released[address(token)]);\n\n        if (block.timestamp < _cliff) {\n            return 0;\n        } else if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {\n            return totalBalance;\n        } else {\n            return totalBalance.mul(block.timestamp.sub(_start)).div(_duration);\n        }\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following \n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"msc_token/MscVesting.sol": {
				"MscVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenVestingRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "cliff",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "revocable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"beneficiary()": {
								"return": "the beneficiary of the tokens."
							},
							"cliff()": {
								"return": "the cliff time of the token vesting."
							},
							"duration()": {
								"return": "the duration of the token vesting."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"release(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"released(address)": {
								"return": "the amount of the token released."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revocable()": {
								"return": "true if the vesting is revocable."
							},
							"revoke(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"revoked(address)": {
								"return": "true if the token is revoked."
							},
							"start()": {
								"return": "the start time of the token vesting."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"msc_token/MscVesting.sol\":119:377  contract MscVesting is TokenVesting {\r... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/MscVesting.sol\":162:374  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) \r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"msc_token/MscVesting.sol\":162:374  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) \r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0xa0\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"msc_token/MscVesting.sol\":162:374  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) \r... */\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  dup5\n  add\n  mload\n  0x80\n  swap1\n  swap5\n  add\n  mload\n  swap3\n  swap4\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  dup5\n  dup5\n  dup5\n  dup5\n  dup5\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":698:715  address msgSender */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  tag_9\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:728  _msgSender */\n  tag_10\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  and\n  jump\t// in\ntag_9:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  dup3\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2194:2219  beneficiary != address(0) */\n  dup6\n  and\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2186:2269  require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2d\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5\n  0x2d\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2357:2365  duration */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2340:2353  cliffDuration */\n  dup4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2340:2365  cliffDuration <= duration */\n  gt\n  iszero\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2332:2413  require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d\n  0x2b\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2442:2443  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2431:2439  duration */\n  dup3\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2431:2443  duration > 0 */\n  gt\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2423:2475  require(duration > 0, \"TokenVesting: duration is 0\") */\n  tag_14\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x546f6b656e56657374696e673a206475726174696f6e20697320300000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_14:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2568:2583  block.timestamp */\n  timestamp\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2565  start.add(duration) */\n  tag_15\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2556:2564  duration */\n  dup4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2551  start */\n  dup7\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2555  start.add */\n  or(tag_0_56, shl(0x20, tag_16))\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2565  start.add(duration) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2583  start.add(duration) > block.timestamp */\n  gt\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2538:2635  require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f\n  0x2f\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2646:2658  _beneficiary */\n  0x01\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2646:2672  _beneficiary = beneficiary */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2682:2692  _revocable */\n  0x05\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2682:2704  _revocable = revocable */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup3\n  iszero\n  iszero\n  or\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2714:2723  _duration */\n  0x04\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2714:2734  _duration = duration */\n  dup3\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2777  start.add(cliffDuration) */\n  tag_18\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2758  start */\n  dup5\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2763:2776  cliffDuration */\n  dup5\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2762  start.add */\n  tag_16\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_56\n  or\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2777  start.add(cliffDuration) */\n  swap1\n  shr\n  jump\t// in\ntag_18:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2744:2750  _cliff */\n  0x02\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2744:2777  _cliff = start.add(cliffDuration) */\n  sstore\n  pop\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2787:2793  _start */\n  0x03\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2787:2801  _start = start */\n  sstore\n  pop\n    /* \"msc_token/MscVesting.sol\":119:377  contract MscVesting is TokenVesting {\r... */\n  tag_20\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\ntag_10:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n  caller\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_16:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n  dup3\n  dup3\n  add\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_23\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_23:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n  swap4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/MscVesting.sol\":119:377  contract MscVesting is TokenVesting {\r... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f 546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65\ndata_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5 546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373\ndata_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d 546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e\n\nsub_0: assembly {\n        /* \"msc_token/MscVesting.sol\":119:377  contract MscVesting is TokenVesting {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"msc_token/MscVesting.sol\":119:377  contract MscVesting is TokenVesting {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x872a7810\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x9852595c\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfa01dc06\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x872a7810\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13d033c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x74a8f103\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n    tag_4:\n      tag_18\n      tag_21\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_28\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n    tag_8:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_31\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_10:\n      tag_25\n      tag_35\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_11:\n      tag_32\n      tag_37\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_12:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n    tag_13:\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_14:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n    tag_15:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n    tag_19:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3406:3415  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n    tag_21:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3103:3109  _cliff */\n      sload(0x02)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n    tag_24:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4093:4111  uint256 unreleased */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4138  _releasableAmount(token) */\n      tag_52\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4132:4137  token */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4131  _releasableAmount */\n      tag_53\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4138  _releasableAmount(token) */\n      jump\t// in\n    tag_52:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4093:4138  uint256 unreleased = _releasableAmount(token) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4170:4171  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4157:4167  unreleased */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4157:4171  unreleased > 0 */\n      gt\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4149:4207  require(unreleased > 0, \"TokenVesting: no tokens are due\") */\n      tag_54\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4271  _released[address(token)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4255  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4271  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      tag_55\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4276:4286  unreleased */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4275  _released[address(token)].add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      and\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4227  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4287  _released[address(token)] = _released[address(token)].add(unreleased) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4317:4329  _beneficiary */\n      sload(0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      tag_57\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4317:4329  _beneficiary */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4331:4341  unreleased */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4316  token.safeTransfer */\n      tag_58\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      and\n      jump\t// in\n    tag_57:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4358:4400  TokensReleased(address(token), unreleased) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n      0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n    tag_26:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2946:2958  _beneficiary */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_28:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_61\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_61:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_62:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      dup4\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1795:1814  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n    tag_31:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_65\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_65:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_66:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4692:4702  _revocable */\n      and(0xff, sload(0x05))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4684:4734  require(_revocable, \"TokenVesting: cannot revoke\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4777  _revoked[address(token)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4761  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4777  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4752:4777  !_revoked[address(token)] */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4744:4817  require(!_revoked[address(token)], \"TokenVesting: token already revoked\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4870:4874  this */\n      address\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4828:4843  uint256 balance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4861  token.balanceOf */\n      dup5\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4861  token.balanceOf */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4905  uint256 unreleased */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4932  _releasableAmount(token) */\n      tag_73\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4926:4931  token */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4925  _releasableAmount */\n      tag_53\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4932  _releasableAmount(token) */\n      jump\t// in\n    tag_73:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4932  uint256 unreleased = _releasableAmount(token) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4942:4956  uint256 refund */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      tag_74\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4966  balance */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4932  uint256 unreleased = _releasableAmount(token) */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4970  balance.sub */\n      tag_75\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      and\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5017  _revoked[address(token)] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5001  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5017  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5024  _revoked[address(token)] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5020:5024  true */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5024  _revoked[address(token)] = true */\n      or\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4942:4982  uint256 refund = balance.sub(unreleased) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      tag_76\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5061  owner() */\n      tag_77\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5059  owner */\n      tag_35\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5061  owner() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5053  token.safeTransfer */\n      dup7\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5063:5069  refund */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5053  token.safeTransfer */\n      tag_58\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      and\n      jump\t// in\n    tag_76:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5086:5121  TokenVestingRevoked(address(token)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      mload\n      0x39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af6\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1159:1160  _ */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n    tag_33:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3558:3568  _revocable */\n      and(0xff, sload(0x05))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_35:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":937:944  address */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":963:969  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_37:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1290:1294  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1329:1335  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      tag_81\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1323  _msgSender */\n      tag_82\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1306:1335  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3700:3707  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3735  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_83:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n    tag_42:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3254:3260  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_45:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_86\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_86:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_87:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      tag_89\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2061:2069  newOwner */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2060  _transferOwnership */\n      tag_90\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_89:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3869:3873  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3900  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5292:5439  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5355:5362  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5415  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      tag_93\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5401  _vestedAmount(token) */\n      tag_94\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5424:5429  token */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5394  _vestedAmount */\n      tag_95\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5401  _vestedAmount(token) */\n      jump\t// in\n    tag_94:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5405  _vestedAmount(token).sub */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5405  _vestedAmount(token).sub */\n      tag_75\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      and\n      jump\t// in\n    tag_93:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5374:5432  return _vestedAmount(token).sub(_released[address(token)]) */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5292:5439  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      dup3\n      dup3\n      add\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_97\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_97:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_58:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n        /* \"--CODEGEN--\":25:43   */\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      swap1\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_99\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_100\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_99:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_97\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_103\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_82:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2243:2316  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      0x00\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      swap3\n      and\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2379:2385  _owner */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2379:2396  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5574:6087  function _vestedAmount(IERC20 token) private view returns (uint256) {... */\n    tag_95:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5701:5705  this */\n      address\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5633:5640  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5692  token.balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5692  token.balanceOf */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_110:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5737  uint256 totalBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5768  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5737  uint256 totalBalance */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      tag_111\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      dup4\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5758  currentBalance.add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      and\n      jump\t// in\n    tag_111:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5785  uint256 totalBalance = currentBalance.add(_released[address(token)]) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5818:5824  _cliff */\n      sload(0x02)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5800:5815  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5800:5824  block.timestamp < _cliff */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5796:6081  if (block.timestamp < _cliff) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5847:5848  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5840:5848  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_83)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5796:6081  if (block.timestamp < _cliff) {... */\n    tag_112:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5899:5908  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5894  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5909  _start.add(_duration) */\n      tag_114\n      swap2\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5898  _start.add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5909  _start.add(_duration) */\n      and\n      jump\t// in\n    tag_114:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5884  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5909  block.timestamp >= _start.add(_duration) */\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5937  block.timestamp >= _start.add(_duration) || _revoked[address(token)] */\n      dup1\n      tag_115\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5937  _revoked[address(token)] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5921  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5937  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5937  block.timestamp >= _start.add(_duration) || _revoked[address(token)] */\n    tag_115:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5865:6081  if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5960:5972  totalBalance */\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5953:5972  return totalBalance */\n      tag_83\n      swap1\n      pop\n      jump\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5865:6081  if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {... */\n    tag_116:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      tag_118\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6060:6069  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      tag_119\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6054  block.timestamp.sub(_start) */\n      tag_120\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6047:6053  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6042  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6046  block.timestamp.sub */\n      tag_75\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6054  block.timestamp.sub(_start) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6022  totalBalance */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6026  totalBalance.mul */\n      tag_121\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      and\n      jump\t// in\n    tag_119:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6059  totalBalance.mul(block.timestamp.sub(_start)).div */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6059  totalBalance.mul(block.timestamp.sub(_start)).div */\n      tag_122\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      and\n      jump\t// in\n    tag_118:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6003:6070  return totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_83)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_124\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      and\n      tag_125\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_124:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_127:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_127)\n    tag_129:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_130)\n        /* \"--CODEGEN--\":16:47   */\n    tag_131:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_130:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      tag_135\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_134:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_138:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_138)\n    tag_140:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_141:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      swap1\n      sub\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2217:2224  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2458:2464  a == 0 */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n      tag_143\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2487:2488  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2480:2488  return 0 */\n      jump(tag_93)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n    tag_143:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      dup3\n      dup3\n      mul\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2525:2526  b */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2544:2549  c / a */\n      tag_144\n      jumpi\n      invalid\n    tag_144:\n      div\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2544:2554  c / a == b */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2536:2592  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3131:3138  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      tag_97\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3161:3162  a */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3164:3165  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3160  div */\n      tag_148\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_125:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      tag_150\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_150:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_148:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3804:3811  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3904:3916  errorMessage */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3897:3902  b > 0 */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_138)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n    tag_152:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3927:3936  uint256 c */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3943:3944  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3939:3940  a */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3939:3944  a / b */\n      dup2\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      div\n      swap6\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5 546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564\n\n    auxdata: 0xa265627a7a7231582056445c2c3f059c0d3fe2edbdc87326d808bae715d4ba4dcdc654eaae46716df164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011a4380380620011a4833981810160405260a08110156200003757600080fd5b5080516020820151604083015160608401516080909401519293919290919084848484846000620000706001600160e01b036200024d16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038516620001015760405162461bcd60e51b815260040180806020018281038252602d8152602001806200114c602d913960400191505060405180910390fd5b81831115620001425760405162461bcd60e51b815260040180806020018281038252602b81526020018062001179602b913960400191505060405180910390fd5b6000821162000198576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a206475726174696f6e20697320300000000000604482015290519081900360640190fd5b42620001b383866200025160201b6200071d1790919060201c565b11620001f15760405162461bcd60e51b815260040180806020018281038252602f8152602001806200111d602f913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0387161790556005805460ff1916821515179055600482905562000237848462000251602090811b6200071d17901c565b60025550505060035550620002b3945050505050565b3390565b600082820183811015620002ac576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610e5a80620002c36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063872a78101161008c5780639852595c116100665780639852595c1461019c578063be9a6555146101c2578063f2fde38b146101ca578063fa01dc06146101f0576100cf565b8063872a7810146101705780638da5cb5b1461018c5780638f32d59b14610194576100cf565b80630fb5a6b4146100d457806313d033c0146100ee57806319165587146100f657806338af3eed1461011e578063715018a61461014257806374a8f1031461014a575b600080fd5b6100dc610216565b60408051918252519081900360200190f35b6100dc61021c565b61011c6004803603602081101561010c57600080fd5b50356001600160a01b0316610222565b005b610126610327565b604080516001600160a01b039092168252519081900360200190f35b61011c610336565b61011c6004803603602081101561016057600080fd5b50356001600160a01b03166103d9565b610178610601565b604080519115158252519081900360200190f35b61012661060a565b610178610619565b6100dc600480360360208110156101b257600080fd5b50356001600160a01b031661063d565b6100dc61065c565b61011c600480360360208110156101e057600080fd5b50356001600160a01b0316610662565b6101786004803603602081101561020657600080fd5b50356001600160a01b03166106c7565b60045490565b60025490565b600061022d826106e5565b905060008111610284576040805162461bcd60e51b815260206004820152601f60248201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604482015290519081900360640190fd5b6001600160a01b0382166000908152600660205260409020546102ad908263ffffffff61071d16565b6001600160a01b038084166000818152600660205260409020929092556001546102df9291168363ffffffff61077e16565b604080516001600160a01b03841681526020810183905281517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179929181900390910190a15050565b6001546001600160a01b031690565b61033e610619565b61038f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103e1610619565b610432576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460ff16610489576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16156104e15760405162461bcd60e51b8152600401808060200182810382526023815260200180610e036023913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b505190506000610564836106e5565b90506000610578838363ffffffff6107d516565b6001600160a01b0385166000908152600760205260409020805460ff1916600117905590506105bf6105a861060a565b6001600160a01b038616908363ffffffff61077e16565b604080516001600160a01b038616815290517f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af69181900360200190a150505050565b60055460ff1690565b6000546001600160a01b031690565b600080546001600160a01b031661062e610817565b6001600160a01b031614905090565b6001600160a01b0381166000908152600660205260409020545b919050565b60035490565b61066a610619565b6106bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106c48161081b565b50565b6001600160a01b031660009081526007602052604090205460ff1690565b6001600160a01b0381166000908152600660205260408120546107179061070b846108bb565b9063ffffffff6107d516565b92915050565b600082820183811015610777576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107d0908490610a00565b505050565b600061077783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bbe565b3390565b6001600160a01b0381166108605760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b8152306004820152905160009182916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b50516001600160a01b0384166000908152600660205260408120549192509061096090839063ffffffff61071d16565b905060025442101561097757600092505050610657565b60045460035461098c9163ffffffff61071d16565b421015806109b257506001600160a01b03841660009081526007602052604090205460ff165b156109c05791506106579050565b6109f76004546109eb6109de600354426107d590919063ffffffff16565b849063ffffffff610c5516565b9063ffffffff610cae16565b92505050610657565b610a12826001600160a01b0316610cf0565b610a63576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610aa15780518252601f199092019160209182019101610a82565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b03576040519150601f19603f3d011682016040523d82523d6000602084013e610b08565b606091505b509150915081610b5f576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610bb857808060200190516020811015610b7b57600080fd5b5051610bb85760405162461bcd60e51b815260040180806020018281038252602a815260200180610dd9602a913960400191505060405180910390fd5b50505050565b60008184841115610c4d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578181015183820152602001610bfa565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c6457506000610717565b82820282848281610c7157fe5b04146107775760405162461bcd60e51b8152600401808060200182810382526021815260200180610db86021913960400191505060405180910390fd5b600061077783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d2c565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d2457508115155b949350505050565b60008183610d7b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c12578181015183820152602001610bfa565b506000838581610d8757fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564a265627a7a7231582056445c2c3f059c0d3fe2edbdc87326d808bae715d4ba4dcdc654eaae46716df164736f6c63430005110032546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11A4 CODESIZE SUB DUP1 PUSH3 0x11A4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 DUP5 DUP5 DUP5 DUP5 PUSH1 0x0 PUSH3 0x70 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x24D AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0x101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x114C PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 GT ISZERO PUSH3 0x142 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1179 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0x198 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206475726174696F6E20697320300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0x1B3 DUP4 DUP7 PUSH3 0x251 PUSH1 0x20 SHL PUSH3 0x71D OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST GT PUSH3 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x111D PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH3 0x237 DUP5 DUP5 PUSH3 0x251 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x71D OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x2 SSTORE POP POP POP PUSH1 0x3 SSTORE POP PUSH3 0x2B3 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x2AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE5A DUP1 PUSH3 0x2C3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x872A7810 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9852595C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x1F0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x872A7810 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x21C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x336 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63D JUMP JUMPDEST PUSH2 0xDC PUSH2 0x65C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP3 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x619 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE03 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x564 DUP4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x578 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x5BF PUSH2 0x5A8 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E PUSH2 0x817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x619 JUMP JUMPDEST PUSH2 0x6BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x717 SWAP1 PUSH2 0x70B DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7D0 SWAP1 DUP5 SWAP1 PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBBE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x960 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x98C SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x9C0 JUMPI SWAP2 POP PUSH2 0x657 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F7 PUSH1 0x4 SLOAD PUSH2 0x9EB PUSH2 0x9DE PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x7D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC55 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCAE AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH2 0xA12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xAA1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB5F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDD9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC64 JUMPI POP PUSH1 0x0 PUSH2 0x717 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC71 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD24 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD87 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F775361666545524332303A20 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564546F6B656E56657374696E673A20 PUSH21 0x6F6B656E20616C7265616479207265766F6B6564A2 PUSH6 0x627A7A723158 KECCAK256 JUMP DIFFICULTY 0x5C 0x2C EXTCODEHASH SDIV SWAP13 0xD EXTCODEHASH 0xE2 0xED 0xBD 0xC8 PUSH20 0x26D808BAE715D4BA4DCDC654EAAE46716DF16473 PUSH16 0x6C63430005110032546F6B656E566573 PUSH21 0x696E673A2066696E616C2074696D65206973206265 PUSH7 0x6F726520637572 PUSH19 0x656E742074696D65546F6B656E56657374696E PUSH8 0x3A2062656E656669 PUSH4 0x69617279 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373546F6B656E56657374696E673A20636C PUSH10 0x6666206973206C6F6E67 PUSH6 0x72207468616E KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E000000000000000000000000000000 ",
							"sourceMap": "119:258:0:-;;;162:212;8:9:-1;5:2;;;30:1;27;20:12;5:2;162:212:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;162:212:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:17:4;718:12;-1:-1:-1;;;;;718:10:4;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:4;-1:-1:-1;;;;;740:18:4;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:4;773:43;;740:6;;773:43;-1:-1:-1;;;;;;2194:25:2;;2186:83;;;;-1:-1:-1;;;2186:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:8;2340:13;:25;;2332:81;;;;-1:-1:-1;;;2332:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2442:1;2431:8;:12;2423:52;;;;;-1:-1:-1;;;2423:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:15;2546:19;2556:8;2546:5;:9;;;;;;:19;;;;:::i;:::-;:37;2538:97;;;;-1:-1:-1;;;2538:97:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2646:12;:26;;-1:-1:-1;;;;;;2646:26:2;-1:-1:-1;;;;;2646:26:2;;;;;2682:10;:22;;-1:-1:-1;;2682:22:2;;;;;;;2714:9;:20;;;2753:24;:5;2763:13;2753:9;;;;;;;:24;;:::i;:::-;2744:6;:33;-1:-1:-1;;;2787:6:2;:14;-1:-1:-1;119:258:0;;-1:-1:-1;;;;;119:258:0;788:96:1;867:10;788:96;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:3:o;119:258:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063872a78101161008c5780639852595c116100665780639852595c1461019c578063be9a6555146101c2578063f2fde38b146101ca578063fa01dc06146101f0576100cf565b8063872a7810146101705780638da5cb5b1461018c5780638f32d59b14610194576100cf565b80630fb5a6b4146100d457806313d033c0146100ee57806319165587146100f657806338af3eed1461011e578063715018a61461014257806374a8f1031461014a575b600080fd5b6100dc610216565b60408051918252519081900360200190f35b6100dc61021c565b61011c6004803603602081101561010c57600080fd5b50356001600160a01b0316610222565b005b610126610327565b604080516001600160a01b039092168252519081900360200190f35b61011c610336565b61011c6004803603602081101561016057600080fd5b50356001600160a01b03166103d9565b610178610601565b604080519115158252519081900360200190f35b61012661060a565b610178610619565b6100dc600480360360208110156101b257600080fd5b50356001600160a01b031661063d565b6100dc61065c565b61011c600480360360208110156101e057600080fd5b50356001600160a01b0316610662565b6101786004803603602081101561020657600080fd5b50356001600160a01b03166106c7565b60045490565b60025490565b600061022d826106e5565b905060008111610284576040805162461bcd60e51b815260206004820152601f60248201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604482015290519081900360640190fd5b6001600160a01b0382166000908152600660205260409020546102ad908263ffffffff61071d16565b6001600160a01b038084166000818152600660205260409020929092556001546102df9291168363ffffffff61077e16565b604080516001600160a01b03841681526020810183905281517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179929181900390910190a15050565b6001546001600160a01b031690565b61033e610619565b61038f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103e1610619565b610432576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460ff16610489576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16156104e15760405162461bcd60e51b8152600401808060200182810382526023815260200180610e036023913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b505190506000610564836106e5565b90506000610578838363ffffffff6107d516565b6001600160a01b0385166000908152600760205260409020805460ff1916600117905590506105bf6105a861060a565b6001600160a01b038616908363ffffffff61077e16565b604080516001600160a01b038616815290517f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af69181900360200190a150505050565b60055460ff1690565b6000546001600160a01b031690565b600080546001600160a01b031661062e610817565b6001600160a01b031614905090565b6001600160a01b0381166000908152600660205260409020545b919050565b60035490565b61066a610619565b6106bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106c48161081b565b50565b6001600160a01b031660009081526007602052604090205460ff1690565b6001600160a01b0381166000908152600660205260408120546107179061070b846108bb565b9063ffffffff6107d516565b92915050565b600082820183811015610777576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107d0908490610a00565b505050565b600061077783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bbe565b3390565b6001600160a01b0381166108605760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b8152306004820152905160009182916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b50516001600160a01b0384166000908152600660205260408120549192509061096090839063ffffffff61071d16565b905060025442101561097757600092505050610657565b60045460035461098c9163ffffffff61071d16565b421015806109b257506001600160a01b03841660009081526007602052604090205460ff165b156109c05791506106579050565b6109f76004546109eb6109de600354426107d590919063ffffffff16565b849063ffffffff610c5516565b9063ffffffff610cae16565b92505050610657565b610a12826001600160a01b0316610cf0565b610a63576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610aa15780518252601f199092019160209182019101610a82565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b03576040519150601f19603f3d011682016040523d82523d6000602084013e610b08565b606091505b509150915081610b5f576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610bb857808060200190516020811015610b7b57600080fd5b5051610bb85760405162461bcd60e51b815260040180806020018281038252602a815260200180610dd9602a913960400191505060405180910390fd5b50505050565b60008184841115610c4d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578181015183820152602001610bfa565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c6457506000610717565b82820282848281610c7157fe5b04146107775760405162461bcd60e51b8152600401808060200182810382526021815260200180610db86021913960400191505060405180910390fd5b600061077783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d2c565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d2457508115155b949350505050565b60008183610d7b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c12578181015183820152602001610bfa565b506000838581610d8757fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564a265627a7a7231582056445c2c3f059c0d3fe2edbdc87326d808bae715d4ba4dcdc654eaae46716df164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x872A7810 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9852595C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x1F0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x872A7810 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x21C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x336 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63D JUMP JUMPDEST PUSH2 0xDC PUSH2 0x65C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP3 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x619 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE03 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x564 DUP4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x578 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x5BF PUSH2 0x5A8 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E PUSH2 0x817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x619 JUMP JUMPDEST PUSH2 0x6BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x717 SWAP1 PUSH2 0x70B DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7D0 SWAP1 DUP5 SWAP1 PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBBE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x960 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x98C SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x9C0 JUMPI SWAP2 POP PUSH2 0x657 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F7 PUSH1 0x4 SLOAD PUSH2 0x9EB PUSH2 0x9DE PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x7D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC55 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCAE AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH2 0xA12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xAA1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB5F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDD9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC64 JUMPI POP PUSH1 0x0 PUSH2 0x717 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC71 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD24 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD87 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F775361666545524332303A20 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564546F6B656E56657374696E673A20 PUSH21 0x6F6B656E20616C7265616479207265766F6B6564A2 PUSH6 0x627A7A723158 KECCAK256 JUMP DIFFICULTY 0x5C 0x2C EXTCODEHASH SDIV SWAP13 0xD EXTCODEHASH 0xE2 0xED 0xBD 0xC8 PUSH20 0x26D808BAE715D4BA4DCDC654EAAE46716DF16473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "119:258:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;119:258:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:83:2;;;:::i;:::-;;;;;;;;;;;;;;;;3039:77;;;:::i;4045:362::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4045:362:2;-1:-1:-1;;;;;4045:362:2;;:::i;:::-;;2876:89;;;:::i;:::-;;;;-1:-1:-1;;;;;2876:89:2;;;;;;;;;;;;;;1684:137:4;;;:::i;4627:501:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4627:501:2;-1:-1:-1;;;;;4627:501:2;;:::i;3493:82::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;899:77:4;;;:::i;1250:92::-;;;:::i;3646:103:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3646:103:2;-1:-1:-1;;;;;3646:103:2;;:::i;3190:77::-;;;:::i;1970:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:4;-1:-1:-1;;;;;1970:107:4;;:::i;3816:98:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3816:98:2;-1:-1:-1;;;;;3816:98:2;;:::i;3339:83::-;3406:9;;3339:83;:::o;3039:77::-;3103:6;;3039:77;:::o;4045:362::-;4093:18;4114:24;4132:5;4114:17;:24::i;:::-;4093:45;;4170:1;4157:10;:14;4149:58;;;;;-1:-1:-1;;;4149:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4246:25:2;;;;;;:9;:25;;;;;;:41;;4276:10;4246:41;:29;:41;:::i;:::-;-1:-1:-1;;;;;4218:25:2;;;;;;;:9;:25;;;;;:69;;;;4317:12;;4298:44;;4218:25;4317:12;4331:10;4298:44;:18;:44;:::i;:::-;4358:42;;;-1:-1:-1;;;;;4358:42:2;;;;;;;;;;;;;;;;;;;;;;;4045:362;;:::o;2876:89::-;2946:12;;-1:-1:-1;;;;;2946:12:2;2876:89;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:4;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:4;;;1684:137::o;4627:501:2:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4692:10:2;;;;4684:50;;;;;-1:-1:-1;;;4684:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4753:24:2;;;;;;:8;:24;;;;;;;;4752:25;4744:73;;;;-1:-1:-1;;;4744:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:30;;;-1:-1:-1;;;4846:30:2;;4870:4;4846:30;;;;;;4828:15;;-1:-1:-1;;;;;4846:15:2;;;;;:30;;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;4846:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4846:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4846:30:2;;-1:-1:-1;4887:18:2;4908:24;4926:5;4908:17;:24::i;:::-;4887:45;-1:-1:-1;4942:14:2;4959:23;:7;4887:45;4959:23;:11;:23;:::i;:::-;-1:-1:-1;;;;;4993:24:2;;;;;;:8;:24;;;;;:31;;-1:-1:-1;;4993:31:2;5020:4;4993:31;;;4942:40;-1:-1:-1;5035:35:2;5054:7;:5;:7::i;:::-;-1:-1:-1;;;;;5035:18:2;;;5063:6;5035:35;:18;:35;:::i;:::-;5086;;;-1:-1:-1;;;;;5086:35:2;;;;;;;;;;;;;;;1159:1:4;;;4627:501:2;:::o;3493:82::-;3558:10;;;;3493:82;:::o;899:77:4:-;937:7;963:6;-1:-1:-1;;;;;963:6:4;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:4;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:4;;1306:29;;1250:92;:::o;3646:103:2:-;-1:-1:-1;;;;;3726:16:2;;3700:7;3726:16;;;:9;:16;;;;;;3646:103;;;;:::o;3190:77::-;3254:6;;3190:77;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;3816:98:2:-;-1:-1:-1;;;;;3892:15:2;3869:4;3892:15;;;:8;:15;;;;;;;;;3816:98::o;5292:147::-;-1:-1:-1;;;;;5406:25:2;;5355:7;5406:25;;;:9;:25;;;;;;5381:51;;:20;5424:5;5381:13;:20::i;:::-;:24;:51;:24;:51;:::i;:::-;5374:58;5292:147;-1:-1:-1;;5292:147:2:o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:3:o;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;788:96:1:-;867:10;788:96;:::o;2178:225:4:-;-1:-1:-1;;;;;2251:22:4;;2243:73;;;;-1:-1:-1;;;2243:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:4;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:4;-1:-1:-1;;;;;2379:17:4;;;;;;;;;;2178:225::o;5574:513:2:-;5677:30;;;-1:-1:-1;;;5677:30:2;;5701:4;5677:30;;;;;;5633:7;;;;-1:-1:-1;;;;;5677:15:2;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;5677:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5677:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5677:30:2;-1:-1:-1;;;;;5759:25:2;;5717:20;5759:25;;;:9;5677:30;5759:25;;;;;5677:30;;-1:-1:-1;5717:20:2;5740:45;;5677:30;;5740:45;:18;:45;:::i;:::-;5717:68;;5818:6;;5800:15;:24;5796:285;;;5847:1;5840:8;;;;;;5796:285;5899:9;;5888:6;;:21;;;:10;:21;:::i;:::-;5869:15;:40;;:68;;;-1:-1:-1;;;;;;5913:24:2;;;;;;:8;:24;;;;;;;;5869:68;5865:216;;;5960:12;-1:-1:-1;5953:19:2;;-1:-1:-1;5953:19:2;5865:216;6010:60;6060:9;;6010:45;6027:27;6047:6;;6027:15;:19;;:27;;;;:::i;:::-;6010:12;;:45;:16;:45;:::i;:::-;:49;:60;:49;:60;:::i;:::-;6003:67;;;;;;2666:1095:6;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:1095;;;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "1104",
								"cliff()": "1021",
								"duration()": "999",
								"isOwner()": "1147",
								"owner()": "1082",
								"release(address)": "infinite",
								"released(address)": "1173",
								"renounceOwnership()": "24334",
								"revocable()": "1033",
								"revoke(address)": "infinite",
								"revoked(address)": "1242",
								"start()": "1042",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "MSTORE"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "POP"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSHSIZE"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "CODESIZE"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SUB"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP1"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSHSIZE"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP4"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "CODECOPY"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP2"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP2"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "ADD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP1"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP3"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "ADD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP4"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "ADD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "ADD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP1"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "ADD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "MLOAD"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP3"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP4"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP2"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP3"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP1"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP2"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "SWAP1"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 162,
									"end": 374,
									"name": "DUP5"
								},
								{
									"begin": 698,
									"end": 715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "AND"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMPDEST"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP4"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "OR"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP3"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "DUP3"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "DUP6"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "AND"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "JUMPI"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP3"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SUB"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP3"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "2D"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH data",
									"value": "2418688D011B8E0830741B4EF5B95D25F3075F5A8407237C54796D2479FF21E5"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "2D"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "CODECOPY"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "POP"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "POP"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MLOAD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SUB"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "REVERT"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "JUMPDEST"
								},
								{
									"begin": 2357,
									"end": 2365,
									"name": "DUP2"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "DUP4"
								},
								{
									"begin": 2340,
									"end": 2365,
									"name": "GT"
								},
								{
									"begin": 2340,
									"end": 2365,
									"name": "ISZERO"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "JUMPI"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP3"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SUB"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP3"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "2B"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH data",
									"value": "55ACE87003BABD1F6117EC273F0418F272F297AF3B174D10868EC42A4D37881D"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "2B"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "CODECOPY"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "POP"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "POP"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MLOAD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SUB"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "REVERT"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "JUMPDEST"
								},
								{
									"begin": 2442,
									"end": 2443,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP3"
								},
								{
									"begin": 2431,
									"end": 2443,
									"name": "GT"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "JUMPI"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP2"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "546F6B656E56657374696E673A206475726174696F6E20697320300000000000"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MLOAD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP2"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SUB"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "REVERT"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "JUMPDEST"
								},
								{
									"begin": 2568,
									"end": 2583,
									"name": "TIMESTAMP"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 2556,
									"end": 2564,
									"name": "DUP4"
								},
								{
									"begin": 2546,
									"end": 2551,
									"name": "DUP7"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "SHL"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH [tag]",
									"value": "18446744073709551672"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "OR"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "SWAP1"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SWAP2"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SWAP1"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SHR"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "JUMPDEST"
								},
								{
									"begin": 2546,
									"end": 2583,
									"name": "GT"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "JUMPI"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP3"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SUB"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP3"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "2F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH data",
									"value": "201180E9FF8E768A63B561D29176411904F8FCDE7632C57246C9453C111DE99F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "2F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "CODECOPY"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "POP"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "POP"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MLOAD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SUB"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "REVERT"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "JUMPDEST"
								},
								{
									"begin": 2646,
									"end": 2658,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "DUP1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "DUP8"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "AND"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "OR"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SWAP1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SSTORE"
								},
								{
									"begin": 2682,
									"end": 2692,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "DUP1"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "AND"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "DUP3"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "ISZERO"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "ISZERO"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "OR"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SWAP1"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SSTORE"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "DUP3"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "SWAP1"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "SSTORE"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 2753,
									"end": 2758,
									"name": "DUP5"
								},
								{
									"begin": 2763,
									"end": 2776,
									"name": "DUP5"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "SWAP1"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "DUP2"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "SHL"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH [tag]",
									"value": "18446744073709551672"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "OR"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "SWAP1"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "SHR"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "JUMPDEST"
								},
								{
									"begin": 2744,
									"end": 2750,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2744,
									"end": 2777,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2787,
									"end": 2793,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2787,
									"end": 2801,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "SWAP5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "JUMP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMPDEST"
								},
								{
									"begin": 867,
									"end": 877,
									"name": "CALLER"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMPDEST"
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP4"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "LT"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "ISZERO"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPI"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "REVERT"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1003,
									"name": "SWAP4"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "JUMPDEST"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "DUP1"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "CODECOPY"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 119,
									"end": 377,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582056445c2c3f059c0d3fe2edbdc87326d808bae715d4ba4dcdc654eaae46716df164736f6c63430005110032",
									".code": [
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "MSTORE"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "POP"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "LT"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "SHR"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "872A7810"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "GT"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "9852595C"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "GT"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "9852595C"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "BE9A6555"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "FA01DC06"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMP"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "872A7810"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMP"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "FB5A6B4"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "13D033C0"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "19165587"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "38AF3EED"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "74A8F103"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "EQ"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPI"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 119,
											"end": 377,
											"name": "REVERT"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "RETURN"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMPDEST"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "STOP"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP3"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "AND"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP3"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MSTORE"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MLOAD"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP2"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SUB"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "ADD"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "RETURN"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMPDEST"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "AND"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ISZERO"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ISZERO"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP3"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SUB"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "RETURN"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "AND"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMPDEST"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "AND"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "AND"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "SLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMPDEST"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "SLOAD"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "SWAP1"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4093,
											"end": 4111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP3"
										},
										{
											"begin": 4114,
											"end": 4131,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "JUMPDEST"
										},
										{
											"begin": 4093,
											"end": 4138,
											"name": "SWAP1"
										},
										{
											"begin": 4093,
											"end": 4138,
											"name": "POP"
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4167,
											"name": "DUP2"
										},
										{
											"begin": 4157,
											"end": 4171,
											"name": "GT"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "JUMPI"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "REVERT"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "DUP3"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "AND"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SWAP1"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "DUP2"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "MSTORE"
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "MSTORE"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SWAP1"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "KECCAK256"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SLOAD"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SWAP1"
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP3"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4246,
											"end": 4275,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "AND"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP1"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP5"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "AND"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "SWAP1"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "KECCAK256"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP1"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SSTORE"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SLOAD"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "SWAP2"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "AND"
										},
										{
											"begin": 4331,
											"end": 4341,
											"name": "DUP4"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "AND"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "JUMPDEST"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP5"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "AND"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MSTORE"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "ADD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP4"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MSTORE"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MLOAD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "C7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP3"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SUB"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "ADD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "LOG1"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "AND"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "DUP4"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "LOG3"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SSTORE"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "SLOAD"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "AND"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "JUMPI"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MLOAD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SUB"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "REVERT"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "DUP2"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "AND"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "DUP2"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4753,
											"end": 4761,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "KECCAK256"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SLOAD"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "AND"
										},
										{
											"begin": 4752,
											"end": 4777,
											"name": "ISZERO"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "JUMPI"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SUB"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH data",
											"value": "FA45135A638A0C1C9D4FC275CE2DA4F63E13A28E343A01A7F6788E54E1FC80F5"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "CODECOPY"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "POP"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "POP"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MLOAD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SUB"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "REVERT"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "ADDRESS"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "DUP5"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "AND"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SUB"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "DUP7"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "GAS"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "STATICCALL"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP4"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "JUMPDEST"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4942,
											"end": 4956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP4"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "DUP4"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4959,
											"end": 4970,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "AND"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "DUP6"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "AND"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "DUP2"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "MSTORE"
										},
										{
											"begin": 4993,
											"end": 5001,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "MSTORE"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "KECCAK256"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "AND"
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "OR"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SSTORE"
										},
										{
											"begin": 4942,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "DUP7"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "AND"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "SWAP1"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP4"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "AND"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "JUMPDEST"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP7"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "AND"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MSTORE"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MLOAD"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SUB"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "ADD"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "LOG1"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "SLOAD"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "KECCAK256"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SLOAD"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SWAP2"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMPDEST"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "SLOAD"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP2"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "DUP2"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3900,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "KECCAK256"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SLOAD"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "AND"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "SWAP1"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "MSTORE"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "MSTORE"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "KECCAK256"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "SLOAD"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5424,
											"end": 5429,
											"name": "DUP5"
										},
										{
											"begin": 5381,
											"end": 5394,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "JUMPDEST"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5432,
											"name": "SWAP3"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "SWAP4"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP1"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP5"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "SWAP1"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "DUP2"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "CODECOPY"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "REVERT"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP6"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP4"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP3"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "AND"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "LOG3"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP3"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP3"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "OR"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SSTORE"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5574,
											"end": 6087,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5574,
											"end": 6087,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE"
										},
										{
											"begin": 5701,
											"end": 5705,
											"name": "ADDRESS"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "DUP3"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "DUP6"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "AND"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SUB"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP2"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "DUP7"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "GAS"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "STATICCALL"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP5"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "AND"
										},
										{
											"begin": 5717,
											"end": 5737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "SWAP1"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP2"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "MSTORE"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "MSTORE"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP2"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "KECCAK256"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "SLOAD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5717,
											"end": 5737,
											"name": "SWAP1"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "AND"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "JUMPDEST"
										},
										{
											"begin": 5717,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5717,
											"end": 5785,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "SLOAD"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5800,
											"end": 5824,
											"name": "LT"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "ISZERO"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "JUMPI"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "SWAP3"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "JUMP"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "JUMPDEST"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "SLOAD"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "SLOAD"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "SWAP2"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5898,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "AND"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMPDEST"
										},
										{
											"begin": 5869,
											"end": 5884,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5869,
											"end": 5909,
											"name": "LT"
										},
										{
											"begin": 5869,
											"end": 5909,
											"name": "ISZERO"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "DUP5"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "DUP2"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "MSTORE"
										},
										{
											"begin": 5913,
											"end": 5921,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "MSTORE"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "KECCAK256"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SLOAD"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "JUMPDEST"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "ISZERO"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "JUMPI"
										},
										{
											"begin": 5960,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "JUMP"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "SLOAD"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "SLOAD"
										},
										{
											"begin": 6027,
											"end": 6042,
											"name": "TIMESTAMP"
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "SWAP2"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "DUP5"
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "SWAP1"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6026,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "AND"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "SWAP1"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "AND"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "SWAP3"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "JUMP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP1"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP5"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP5"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP3"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "JUMP"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "MUL"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP5"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP2"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPI"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "INVALID"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DIV"
										},
										{
											"begin": 2544,
											"end": 2554,
											"name": "EQ"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPI"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "CODECOPY"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "REVERT"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMPDEST"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP5"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3916,
											"name": "DUP2"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP5"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP6"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP4"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP6"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPI"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "INVALID"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPDEST"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DIV"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "SWAP6"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"FA45135A638A0C1C9D4FC275CE2DA4F63E13A28E343A01A7F6788E54E1FC80F5": "546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564"
									}
								},
								"201180E9FF8E768A63B561D29176411904F8FCDE7632C57246C9453C111DE99F": "546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65",
								"2418688D011B8E0830741B4EF5B95D25F3075F5A8407237C54796D2479FF21E5": "546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373",
								"55ACE87003BABD1F6117EC273F0418F272F297AF3B174D10868EC42A4D37881D": "546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e"
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"cliff()": "13d033c0",
							"duration()": "0fb5a6b4",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"revocable()": "872a7810",
							"revoke(address)": "74a8f103",
							"revoked(address)": "fa01dc06",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenVestingRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"revocable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"beneficiary()\":{\"return\":\"the beneficiary of the tokens.\"},\"cliff()\":{\"return\":\"the cliff time of the token vesting.\"},\"duration()\":{\"return\":\"the duration of the token vesting.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"release(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"released(address)\":{\"return\":\"the amount of the token released.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revocable()\":{\"return\":\"true if the vesting is revocable.\"},\"revoke(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"revoked(address)\":{\"return\":\"true if the token is revoked.\"},\"start()\":{\"return\":\"the start time of the token vesting.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"release(address)\":{\"notice\":\"Transfers vested tokens to beneficiary.\"},\"revoke(address)\":{\"notice\":\"Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"msc_token/MscVesting.sol\":\"MscVesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/MscVesting.sol\":{\"keccak256\":\"0xbbc0cf87ba8b2b455ff937fd53218c304bb85f095165c8ac368c8aa86d751cbe\",\"urls\":[\"bzz-raw://2ed2f2bcbfcf7ba6b15075e39c593a911b423a7894a1c96518272e39a00ef498\",\"dweb:/ipfs/QmYiVuHVg1rqUbCNmJqsJ4axXtj25VwZqnLNWSAyLFZB9U\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":{\"keccak256\":\"0x185d46b6efdd22004d93fdba8e230fbd2ae57c2d2a51ab0e4e62376733023b94\",\"urls\":[\"bzz-raw://b5973c9aa78ed2a5c23ae0f5280984966e901048a6fbcb70d5d1c56f1f4e0663\",\"dweb:/ipfs/QmNaoJRZAMBVu762NxBNW5w3gudm6ACjtW8e8EZKYdva37\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 78,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 80,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_cliff",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_start",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 86,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_revocable",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 90,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_released",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 94,
								"contract": "msc_token/MscVesting.sol:MscVesting",
								"label": "_revoked",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"release(address)": {
								"notice": "Transfers vested tokens to beneficiary."
							},
							"revoke(address)": {
								"notice": "Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner."
							}
						}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol": {
				"TokenVesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenVestingRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "cliff",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "revocable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "revoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, with a cliff and vesting period. Optionally revocable by the owner.",
						"methods": {
							"beneficiary()": {
								"return": "the beneficiary of the tokens."
							},
							"cliff()": {
								"return": "the cliff time of the token vesting."
							},
							"constructor": {
								"details": "Creates a vesting contract that vests its balance of any ERC20 token to the beneficiary, gradually in a linear fashion until start + duration. By then all of the balance will have vested.",
								"params": {
									"beneficiary": "address of the beneficiary to whom vested tokens are transferred",
									"cliffDuration": "duration in seconds of the cliff in which tokens will begin to vest",
									"duration": "duration in seconds of the period in which the tokens will vest",
									"revocable": "whether the vesting is revocable or not",
									"start": "the time (as Unix time) at which point vesting starts"
								}
							},
							"duration()": {
								"return": "the duration of the token vesting."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"release(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"released(address)": {
								"return": "the amount of the token released."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revocable()": {
								"return": "true if the vesting is revocable."
							},
							"revoke(address)": {
								"params": {
									"token": "ERC20 token which is being vested"
								}
							},
							"revoked(address)": {
								"return": "true if the token is revoked."
							},
							"start()": {
								"return": "the start time of the token vesting."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "TokenVesting"
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":344:6089  contract TokenVesting is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2063:2808  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2063:2808  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0xa0\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2063:2808  constructor (address beneficiary, uint256 start, uint256 cliffDuration, uint256 duration, bool revocable) public {... */\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  dup5\n  add\n  mload\n  0x80\n  swap1\n  swap5\n  add\n  mload\n  swap3\n  swap4\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":698:715  address msgSender */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  tag_8\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:728  _msgSender */\n  tag_9\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  and\n  jump\t// in\ntag_8:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  dup3\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2194:2219  beneficiary != address(0) */\n  dup6\n  and\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2186:2269  require(beneficiary != address(0), \"TokenVesting: beneficiary is the zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2d\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5\n  0x2d\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2357:2365  duration */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2340:2353  cliffDuration */\n  dup4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2340:2365  cliffDuration <= duration */\n  gt\n  iszero\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2332:2413  require(cliffDuration <= duration, \"TokenVesting: cliff is longer than duration\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d\n  0x2b\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2442:2443  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2431:2439  duration */\n  dup3\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2431:2443  duration > 0 */\n  gt\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2423:2475  require(duration > 0, \"TokenVesting: duration is 0\") */\n  tag_13\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x546f6b656e56657374696e673a206475726174696f6e20697320300000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_13:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2568:2583  block.timestamp */\n  timestamp\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2565  start.add(duration) */\n  tag_14\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2556:2564  duration */\n  dup4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2551  start */\n  dup7\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2555  start.add */\n  or(tag_0_56, shl(0x20, tag_15))\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2565  start.add(duration) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2546:2583  start.add(duration) > block.timestamp */\n  gt\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2538:2635  require(start.add(duration) > block.timestamp, \"TokenVesting: final time is before current time\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f\n  0x2f\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2646:2658  _beneficiary */\n  0x01\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2646:2672  _beneficiary = beneficiary */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2682:2692  _revocable */\n  0x05\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2682:2704  _revocable = revocable */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup3\n  iszero\n  iszero\n  or\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2714:2723  _duration */\n  0x04\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2714:2734  _duration = duration */\n  dup3\n  swap1\n  sstore\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2777  start.add(cliffDuration) */\n  tag_17\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2758  start */\n  dup5\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2763:2776  cliffDuration */\n  dup5\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2762  start.add */\n  tag_15\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_56\n  or\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2753:2777  start.add(cliffDuration) */\n  swap1\n  shr\n  jump\t// in\ntag_17:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2744:2750  _cliff */\n  0x02\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2744:2777  _cliff = start.add(cliffDuration) */\n  sstore\n  pop\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2787:2793  _start */\n  0x03\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2787:2801  _start = start */\n  sstore\n  pop\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":344:6089  contract TokenVesting is Ownable {... */\n  jump(tag_18)\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\ntag_9:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n  caller\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_15:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n  dup3\n  dup3\n  add\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n  dup4\n  dup2\n  lt\n  iszero\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_21\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1b\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_21:\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n  swap4\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":344:6089  contract TokenVesting is Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f 546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65\ndata_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5 546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373\ndata_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d 546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":344:6089  contract TokenVesting is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":344:6089  contract TokenVesting is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x872a7810\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x9852595c\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfa01dc06\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x872a7810\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13d033c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x74a8f103\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n    tag_4:\n      tag_18\n      tag_21\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_28\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n    tag_8:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_31\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_10:\n      tag_25\n      tag_35\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_11:\n      tag_32\n      tag_37\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_12:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n    tag_13:\n      tag_18\n      tag_42\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_14:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n    tag_15:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n    tag_19:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3406:3415  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3339:3422  function duration() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n    tag_21:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3103:3109  _cliff */\n      sload(0x02)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3039:3116  function cliff() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n    tag_24:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4093:4111  uint256 unreleased */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4138  _releasableAmount(token) */\n      tag_52\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4132:4137  token */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4131  _releasableAmount */\n      tag_53\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4114:4138  _releasableAmount(token) */\n      jump\t// in\n    tag_52:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4093:4138  uint256 unreleased = _releasableAmount(token) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4170:4171  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4157:4167  unreleased */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4157:4171  unreleased > 0 */\n      gt\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4149:4207  require(unreleased > 0, \"TokenVesting: no tokens are due\") */\n      tag_54\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4271  _released[address(token)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4255  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4271  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      tag_55\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4276:4286  unreleased */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4275  _released[address(token)].add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4246:4287  _released[address(token)].add(unreleased) */\n      and\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4227  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4287  _released[address(token)] = _released[address(token)].add(unreleased) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4317:4329  _beneficiary */\n      sload(0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      tag_57\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4218:4243  _released[address(token)] */\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4317:4329  _beneficiary */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4331:4341  unreleased */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4316  token.safeTransfer */\n      tag_58\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4298:4342  token.safeTransfer(_beneficiary, unreleased) */\n      and\n      jump\t// in\n    tag_57:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4358:4400  TokensReleased(address(token), unreleased) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n      0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4045:4407  function release(IERC20 token) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n    tag_26:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2946:2958  _beneficiary */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":2876:2965  function beneficiary() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_28:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_61\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_61:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_62:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      dup4\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1795:1814  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n    tag_31:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_65\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_65:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_66:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4692:4702  _revocable */\n      and(0xff, sload(0x05))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4684:4734  require(_revocable, \"TokenVesting: cannot revoke\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4777  _revoked[address(token)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4761  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4753:4777  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4752:4777  !_revoked[address(token)] */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4744:4817  require(!_revoked[address(token)], \"TokenVesting: token already revoked\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4870:4874  this */\n      address\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4828:4843  uint256 balance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4861  token.balanceOf */\n      dup5\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4861  token.balanceOf */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4846:4876  token.balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4905  uint256 unreleased */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4932  _releasableAmount(token) */\n      tag_73\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4926:4931  token */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4925  _releasableAmount */\n      tag_53\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4908:4932  _releasableAmount(token) */\n      jump\t// in\n    tag_73:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4932  uint256 unreleased = _releasableAmount(token) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4942:4956  uint256 refund */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      tag_74\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4966  balance */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4887:4932  uint256 unreleased = _releasableAmount(token) */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4970  balance.sub */\n      tag_75\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4959:4982  balance.sub(unreleased) */\n      and\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5017  _revoked[address(token)] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5001  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5017  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5024  _revoked[address(token)] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5020:5024  true */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4993:5024  _revoked[address(token)] = true */\n      or\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4942:4982  uint256 refund = balance.sub(unreleased) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      tag_76\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5061  owner() */\n      tag_77\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5059  owner */\n      tag_35\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5054:5061  owner() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5053  token.safeTransfer */\n      dup7\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5063:5069  refund */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5053  token.safeTransfer */\n      tag_58\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5035:5070  token.safeTransfer(owner(), refund) */\n      and\n      jump\t// in\n    tag_76:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5086:5121  TokenVestingRevoked(address(token)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      mload\n      0x39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af6\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1159:1160  _ */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":4627:5128  function revoke(IERC20 token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n    tag_33:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3558:3568  _revocable */\n      and(0xff, sload(0x05))\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3493:3575  function revocable() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_35:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":937:944  address */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":963:969  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_37:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1290:1294  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1329:1335  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      tag_81\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1323  _msgSender */\n      tag_82\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1306:1335  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3700:3707  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3735  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3726:3742  _released[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3646:3749  function released(address token) public view returns (uint256) {... */\n    tag_83:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n    tag_42:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3254:3260  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3190:3267  function start() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_45:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_86\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_37\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_86:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_87:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      tag_89\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2061:2069  newOwner */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2060  _transferOwnership */\n      tag_90\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_89:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3869:3873  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3900  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3892:3907  _revoked[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":3816:3914  function revoked(address token) public view returns (bool) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5292:5439  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5355:5362  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5415  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5406:5431  _released[address(token)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      tag_93\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5401  _vestedAmount(token) */\n      tag_94\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5424:5429  token */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5394  _vestedAmount */\n      tag_95\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5401  _vestedAmount(token) */\n      jump\t// in\n    tag_94:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5405  _vestedAmount(token).sub */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5405  _vestedAmount(token).sub */\n      tag_75\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5381:5432  _vestedAmount(token).sub(_released[address(token)]) */\n      and\n      jump\t// in\n    tag_93:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5374:5432  return _vestedAmount(token).sub(_released[address(token)]) */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5292:5439  function _releasableAmount(IERC20 token) private view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      dup3\n      dup3\n      add\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_97\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_97:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_58:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n        /* \"--CODEGEN--\":25:43   */\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      swap1\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_99\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_100\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_99:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_97\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_103\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_82:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      dup2\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2243:2316  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      0x00\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      swap3\n      and\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2379:2385  _owner */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2379:2396  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5574:6087  function _vestedAmount(IERC20 token) private view returns (uint256) {... */\n    tag_95:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5701:5705  this */\n      address\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5633:5640  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5692  token.balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5692  token.balanceOf */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_110\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_110:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5737  uint256 totalBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5768  _released */\n      0x06\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5759:5784  _released[address(token)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5737  uint256 totalBalance */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      tag_111\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5677:5707  token.balanceOf(address(this)) */\n      dup4\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5758  currentBalance.add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5740:5785  currentBalance.add(_released[address(token)]) */\n      and\n      jump\t// in\n    tag_111:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5717:5785  uint256 totalBalance = currentBalance.add(_released[address(token)]) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5818:5824  _cliff */\n      sload(0x02)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5800:5815  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5800:5824  block.timestamp < _cliff */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5796:6081  if (block.timestamp < _cliff) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5847:5848  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5840:5848  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_83)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5796:6081  if (block.timestamp < _cliff) {... */\n    tag_112:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5899:5908  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5894  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5909  _start.add(_duration) */\n      tag_114\n      swap2\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5898  _start.add */\n      tag_56\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5888:5909  _start.add(_duration) */\n      and\n      jump\t// in\n    tag_114:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5884  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5909  block.timestamp >= _start.add(_duration) */\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5937  block.timestamp >= _start.add(_duration) || _revoked[address(token)] */\n      dup1\n      tag_115\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5937  _revoked[address(token)] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5921  _revoked */\n      0x07\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5913:5937  _revoked[address(token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5869:5937  block.timestamp >= _start.add(_duration) || _revoked[address(token)] */\n    tag_115:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5865:6081  if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5960:5972  totalBalance */\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5953:5972  return totalBalance */\n      tag_83\n      swap1\n      pop\n      jump\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":5865:6081  if (block.timestamp >= _start.add(_duration) || _revoked[address(token)]) {... */\n    tag_116:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      tag_118\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6060:6069  _duration */\n      sload(0x04)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      tag_119\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6054  block.timestamp.sub(_start) */\n      tag_120\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6047:6053  _start */\n      sload(0x03)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6042  block.timestamp */\n      timestamp\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6046  block.timestamp.sub */\n      tag_75\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6027:6054  block.timestamp.sub(_start) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6022  totalBalance */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6026  totalBalance.mul */\n      tag_121\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6055  totalBalance.mul(block.timestamp.sub(_start)) */\n      and\n      jump\t// in\n    tag_119:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6059  totalBalance.mul(block.timestamp.sub(_start)).div */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      0xffffffff\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6059  totalBalance.mul(block.timestamp.sub(_start)).div */\n      tag_122\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6010:6070  totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      and\n      jump\t// in\n    tag_118:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":6003:6070  return totalBalance.mul(block.timestamp.sub(_start)).div(_duration) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_83)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_124\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      and\n      tag_125\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_124:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      and\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_127:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_127)\n    tag_129:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_130)\n        /* \"--CODEGEN--\":16:47   */\n    tag_131:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_130:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      tag_135\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_134:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_138:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_138)\n    tag_140:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_141:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      swap1\n      sub\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2217:2224  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2458:2464  a == 0 */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n      tag_143\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2487:2488  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2480:2488  return 0 */\n      jump(tag_93)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n    tag_143:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      dup3\n      dup3\n      mul\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2525:2526  b */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2544:2549  c / a */\n      tag_144\n      jumpi\n      invalid\n    tag_144:\n      div\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2544:2554  c / a == b */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":2536:2592  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3131:3138  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      tag_97\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3161:3162  a */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3164:3165  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3160  div */\n      tag_148\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_125:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      tag_150\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup2\n      iszero\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_150:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap5\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_148:\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3804:3811  uint256 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3904:3916  errorMessage */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3897:3902  b > 0 */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_138)\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n    tag_152:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3927:3936  uint256 c */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3943:3944  b */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3939:3940  a */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3939:3944  a / b */\n      dup2\n      tag_157\n      jumpi\n      invalid\n    tag_157:\n      div\n      swap6\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5 546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564\n\n    auxdata: 0xa265627a7a723158206219215bb53738efec4613ec0e5154cec5051a945695212b70dba3e9fee3d6a764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200119938038062001199833981810160405260a08110156200003757600080fd5b5080516020820151604083015160608401516080909401519293919290919060006200006b6001600160e01b036200024216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038516620000fc5760405162461bcd60e51b815260040180806020018281038252602d81526020018062001141602d913960400191505060405180910390fd5b818311156200013d5760405162461bcd60e51b815260040180806020018281038252602b8152602001806200116e602b913960400191505060405180910390fd5b6000821162000193576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a206475726174696f6e20697320300000000000604482015290519081900360640190fd5b42620001ae83866200024660201b6200071d1790919060201c565b11620001ec5760405162461bcd60e51b815260040180806020018281038252602f81526020018062001112602f913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0387161790556005805460ff1916821515179055600482905562000232848462000246602090811b6200071d17901c565b60025550505060035550620002a8565b3390565b600082820183811015620002a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610e5a80620002b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063872a78101161008c5780639852595c116100665780639852595c1461019c578063be9a6555146101c2578063f2fde38b146101ca578063fa01dc06146101f0576100cf565b8063872a7810146101705780638da5cb5b1461018c5780638f32d59b14610194576100cf565b80630fb5a6b4146100d457806313d033c0146100ee57806319165587146100f657806338af3eed1461011e578063715018a61461014257806374a8f1031461014a575b600080fd5b6100dc610216565b60408051918252519081900360200190f35b6100dc61021c565b61011c6004803603602081101561010c57600080fd5b50356001600160a01b0316610222565b005b610126610327565b604080516001600160a01b039092168252519081900360200190f35b61011c610336565b61011c6004803603602081101561016057600080fd5b50356001600160a01b03166103d9565b610178610601565b604080519115158252519081900360200190f35b61012661060a565b610178610619565b6100dc600480360360208110156101b257600080fd5b50356001600160a01b031661063d565b6100dc61065c565b61011c600480360360208110156101e057600080fd5b50356001600160a01b0316610662565b6101786004803603602081101561020657600080fd5b50356001600160a01b03166106c7565b60045490565b60025490565b600061022d826106e5565b905060008111610284576040805162461bcd60e51b815260206004820152601f60248201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604482015290519081900360640190fd5b6001600160a01b0382166000908152600660205260409020546102ad908263ffffffff61071d16565b6001600160a01b038084166000818152600660205260409020929092556001546102df9291168363ffffffff61077e16565b604080516001600160a01b03841681526020810183905281517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179929181900390910190a15050565b6001546001600160a01b031690565b61033e610619565b61038f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103e1610619565b610432576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460ff16610489576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16156104e15760405162461bcd60e51b8152600401808060200182810382526023815260200180610e036023913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b505190506000610564836106e5565b90506000610578838363ffffffff6107d516565b6001600160a01b0385166000908152600760205260409020805460ff1916600117905590506105bf6105a861060a565b6001600160a01b038616908363ffffffff61077e16565b604080516001600160a01b038616815290517f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af69181900360200190a150505050565b60055460ff1690565b6000546001600160a01b031690565b600080546001600160a01b031661062e610817565b6001600160a01b031614905090565b6001600160a01b0381166000908152600660205260409020545b919050565b60035490565b61066a610619565b6106bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106c48161081b565b50565b6001600160a01b031660009081526007602052604090205460ff1690565b6001600160a01b0381166000908152600660205260408120546107179061070b846108bb565b9063ffffffff6107d516565b92915050565b600082820183811015610777576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107d0908490610a00565b505050565b600061077783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bbe565b3390565b6001600160a01b0381166108605760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b8152306004820152905160009182916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b50516001600160a01b0384166000908152600660205260408120549192509061096090839063ffffffff61071d16565b905060025442101561097757600092505050610657565b60045460035461098c9163ffffffff61071d16565b421015806109b257506001600160a01b03841660009081526007602052604090205460ff165b156109c05791506106579050565b6109f76004546109eb6109de600354426107d590919063ffffffff16565b849063ffffffff610c5516565b9063ffffffff610cae16565b92505050610657565b610a12826001600160a01b0316610cf0565b610a63576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610aa15780518252601f199092019160209182019101610a82565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b03576040519150601f19603f3d011682016040523d82523d6000602084013e610b08565b606091505b509150915081610b5f576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610bb857808060200190516020811015610b7b57600080fd5b5051610bb85760405162461bcd60e51b815260040180806020018281038252602a815260200180610dd9602a913960400191505060405180910390fd5b50505050565b60008184841115610c4d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578181015183820152602001610bfa565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c6457506000610717565b82820282848281610c7157fe5b04146107775760405162461bcd60e51b8152600401808060200182810382526021815260200180610db86021913960400191505060405180910390fd5b600061077783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d2c565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d2457508115155b949350505050565b60008183610d7b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c12578181015183820152602001610bfa565b506000838581610d8757fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564a265627a7a723158206219215bb53738efec4613ec0e5154cec5051a945695212b70dba3e9fee3d6a764736f6c63430005110032546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1199 CODESIZE SUB DUP1 PUSH3 0x1199 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xA0 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x0 PUSH3 0x6B PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x242 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0xFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1141 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 GT ISZERO PUSH3 0x13D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x116E PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH3 0x193 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206475726174696F6E20697320300000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH3 0x1AE DUP4 DUP7 PUSH3 0x246 PUSH1 0x20 SHL PUSH3 0x71D OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST GT PUSH3 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x1112 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x4 DUP3 SWAP1 SSTORE PUSH3 0x232 DUP5 DUP5 PUSH3 0x246 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x71D OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x2 SSTORE POP POP POP PUSH1 0x3 SSTORE POP PUSH3 0x2A8 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH3 0x2A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE5A DUP1 PUSH3 0x2B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x872A7810 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9852595C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x1F0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x872A7810 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x21C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x336 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63D JUMP JUMPDEST PUSH2 0xDC PUSH2 0x65C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP3 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x619 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE03 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x564 DUP4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x578 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x5BF PUSH2 0x5A8 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E PUSH2 0x817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x619 JUMP JUMPDEST PUSH2 0x6BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x717 SWAP1 PUSH2 0x70B DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7D0 SWAP1 DUP5 SWAP1 PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBBE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x960 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x98C SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x9C0 JUMPI SWAP2 POP PUSH2 0x657 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F7 PUSH1 0x4 SLOAD PUSH2 0x9EB PUSH2 0x9DE PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x7D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC55 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCAE AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH2 0xA12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xAA1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB5F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDD9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC64 JUMPI POP PUSH1 0x0 PUSH2 0x717 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC71 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD24 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD87 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F775361666545524332303A20 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564546F6B656E56657374696E673A20 PUSH21 0x6F6B656E20616C7265616479207265766F6B6564A2 PUSH6 0x627A7A723158 KECCAK256 PUSH3 0x19215B 0xB5 CALLDATACOPY CODESIZE 0xEF 0xEC CHAINID SGT 0xEC 0xE MLOAD SLOAD 0xCE 0xC5 SDIV BYTE SWAP5 JUMP SWAP6 0x21 0x2B PUSH17 0xDBA3E9FEE3D6A764736F6C634300051100 ORIGIN SLOAD PUSH16 0x6B656E56657374696E673A2066696E61 PUSH13 0x2074696D65206973206265666F PUSH19 0x652063757272656E742074696D65546F6B656E JUMP PUSH6 0x7374696E673A KECCAK256 PUSH3 0x656E65 PUSH7 0x69636961727920 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373546F6B656E56657374696E673A20636C PUSH10 0x6666206973206C6F6E67 PUSH6 0x72207468616E KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E000000000000000000000000000000 ",
							"sourceMap": "344:5745:2:-;;;2063:745;8:9:-1;5:2;;;30:1;27;20:12;5:2;2063:745:2;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2063:745:2;;;;;;;;;;;;;;;;;;;;;;;;;;698:17:4;718:12;-1:-1:-1;;;;;718:10:4;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:4;-1:-1:-1;;;;;740:18:4;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:4;773:43;;740:6;;773:43;-1:-1:-1;;;;;;2194:25:2;;2186:83;;;;-1:-1:-1;;;2186:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:8;2340:13;:25;;2332:81;;;;-1:-1:-1;;;2332:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2442:1;2431:8;:12;2423:52;;;;;-1:-1:-1;;;2423:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:15;2546:19;2556:8;2546:5;:9;;;;;;:19;;;;:::i;:::-;:37;2538:97;;;;-1:-1:-1;;;2538:97:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2646:12;:26;;-1:-1:-1;;;;;;2646:26:2;-1:-1:-1;;;;;2646:26:2;;;;;2682:10;:22;;-1:-1:-1;;2682:22:2;;;;;;;2714:9;:20;;;2753:24;:5;2763:13;2753:9;;;;;;;:24;;:::i;:::-;2744:6;:33;-1:-1:-1;;;2787:6:2;:14;-1:-1:-1;344:5745:2;;788:96:1;867:10;788:96;:::o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:3:o;344:5745:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063872a78101161008c5780639852595c116100665780639852595c1461019c578063be9a6555146101c2578063f2fde38b146101ca578063fa01dc06146101f0576100cf565b8063872a7810146101705780638da5cb5b1461018c5780638f32d59b14610194576100cf565b80630fb5a6b4146100d457806313d033c0146100ee57806319165587146100f657806338af3eed1461011e578063715018a61461014257806374a8f1031461014a575b600080fd5b6100dc610216565b60408051918252519081900360200190f35b6100dc61021c565b61011c6004803603602081101561010c57600080fd5b50356001600160a01b0316610222565b005b610126610327565b604080516001600160a01b039092168252519081900360200190f35b61011c610336565b61011c6004803603602081101561016057600080fd5b50356001600160a01b03166103d9565b610178610601565b604080519115158252519081900360200190f35b61012661060a565b610178610619565b6100dc600480360360208110156101b257600080fd5b50356001600160a01b031661063d565b6100dc61065c565b61011c600480360360208110156101e057600080fd5b50356001600160a01b0316610662565b6101786004803603602081101561020657600080fd5b50356001600160a01b03166106c7565b60045490565b60025490565b600061022d826106e5565b905060008111610284576040805162461bcd60e51b815260206004820152601f60248201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604482015290519081900360640190fd5b6001600160a01b0382166000908152600660205260409020546102ad908263ffffffff61071d16565b6001600160a01b038084166000818152600660205260409020929092556001546102df9291168363ffffffff61077e16565b604080516001600160a01b03841681526020810183905281517fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179929181900390910190a15050565b6001546001600160a01b031690565b61033e610619565b61038f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103e1610619565b610432576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460ff16610489576040805162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000604482015290519081900360640190fd5b6001600160a01b03811660009081526007602052604090205460ff16156104e15760405162461bcd60e51b8152600401808060200182810382526023815260200180610e036023913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d602081101561055557600080fd5b505190506000610564836106e5565b90506000610578838363ffffffff6107d516565b6001600160a01b0385166000908152600760205260409020805460ff1916600117905590506105bf6105a861060a565b6001600160a01b038616908363ffffffff61077e16565b604080516001600160a01b038616815290517f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af69181900360200190a150505050565b60055460ff1690565b6000546001600160a01b031690565b600080546001600160a01b031661062e610817565b6001600160a01b031614905090565b6001600160a01b0381166000908152600660205260409020545b919050565b60035490565b61066a610619565b6106bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106c48161081b565b50565b6001600160a01b031660009081526007602052604090205460ff1690565b6001600160a01b0381166000908152600660205260408120546107179061070b846108bb565b9063ffffffff6107d516565b92915050565b600082820183811015610777576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107d0908490610a00565b505050565b600061077783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bbe565b3390565b6001600160a01b0381166108605760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b8152306004820152905160009182916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b50516001600160a01b0384166000908152600660205260408120549192509061096090839063ffffffff61071d16565b905060025442101561097757600092505050610657565b60045460035461098c9163ffffffff61071d16565b421015806109b257506001600160a01b03841660009081526007602052604090205460ff165b156109c05791506106579050565b6109f76004546109eb6109de600354426107d590919063ffffffff16565b849063ffffffff610c5516565b9063ffffffff610cae16565b92505050610657565b610a12826001600160a01b0316610cf0565b610a63576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610aa15780518252601f199092019160209182019101610a82565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610b03576040519150601f19603f3d011682016040523d82523d6000602084013e610b08565b606091505b509150915081610b5f576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610bb857808060200190516020811015610b7b57600080fd5b5051610bb85760405162461bcd60e51b815260040180806020018281038252602a815260200180610dd9602a913960400191505060405180910390fd5b50505050565b60008184841115610c4d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578181015183820152602001610bfa565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c6457506000610717565b82820282848281610c7157fe5b04146107775760405162461bcd60e51b8152600401808060200182810382526021815260200180610db86021913960400191505060405180910390fd5b600061077783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610d2c565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d2457508115155b949350505050565b60008183610d7b5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610c12578181015183820152602001610bfa565b506000838581610d8757fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564a265627a7a723158206219215bb53738efec4613ec0e5154cec5051a945695212b70dba3e9fee3d6a764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x872A7810 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9852595C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xFA01DC06 EQ PUSH2 0x1F0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x872A7810 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x21C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH2 0x336 JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63D JUMP JUMPDEST PUSH2 0xDC PUSH2 0x65C JUMP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x284 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AD SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 SLOAD PUSH2 0x2DF SWAP3 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x619 JUMP JUMPDEST PUSH2 0x38F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x432 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE03 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x564 DUP4 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x578 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x5BF PUSH2 0x5A8 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x77E AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E PUSH2 0x817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x66A PUSH2 0x619 JUMP JUMPDEST PUSH2 0x6BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x81B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x717 SWAP1 PUSH2 0x70B DUP5 PUSH2 0x8BB JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x7D5 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7D0 SWAP1 DUP5 SWAP1 PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBBE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x960 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x98C SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x71D AND JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x9B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x9C0 JUMPI SWAP2 POP PUSH2 0x657 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F7 PUSH1 0x4 SLOAD PUSH2 0x9EB PUSH2 0x9DE PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x7D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xC55 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xCAE AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x657 JUMP JUMPDEST PUSH2 0xA12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xAA1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB5F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDD9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC3F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC64 JUMPI POP PUSH1 0x0 PUSH2 0x717 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC71 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD24 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xC12 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBFA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xD87 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F775361666545524332303A20 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564546F6B656E56657374696E673A20 PUSH21 0x6F6B656E20616C7265616479207265766F6B6564A2 PUSH6 0x627A7A723158 KECCAK256 PUSH3 0x19215B 0xB5 CALLDATACOPY CODESIZE 0xEF 0xEC CHAINID SGT 0xEC 0xE MLOAD SLOAD 0xCE 0xC5 SDIV BYTE SWAP5 JUMP SWAP6 0x21 0x2B PUSH17 0xDBA3E9FEE3D6A764736F6C634300051100 ORIGIN ",
							"sourceMap": "344:5745:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:5745:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3339:83;;;:::i;:::-;;;;;;;;;;;;;;;;3039:77;;;:::i;4045:362::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4045:362:2;-1:-1:-1;;;;;4045:362:2;;:::i;:::-;;2876:89;;;:::i;:::-;;;;-1:-1:-1;;;;;2876:89:2;;;;;;;;;;;;;;1684:137:4;;;:::i;4627:501:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4627:501:2;-1:-1:-1;;;;;4627:501:2;;:::i;3493:82::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;899:77:4;;;:::i;1250:92::-;;;:::i;3646:103:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3646:103:2;-1:-1:-1;;;;;3646:103:2;;:::i;3190:77::-;;;:::i;1970:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:4;-1:-1:-1;;;;;1970:107:4;;:::i;3816:98:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3816:98:2;-1:-1:-1;;;;;3816:98:2;;:::i;3339:83::-;3406:9;;3339:83;:::o;3039:77::-;3103:6;;3039:77;:::o;4045:362::-;4093:18;4114:24;4132:5;4114:17;:24::i;:::-;4093:45;;4170:1;4157:10;:14;4149:58;;;;;-1:-1:-1;;;4149:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4246:25:2;;;;;;:9;:25;;;;;;:41;;4276:10;4246:41;:29;:41;:::i;:::-;-1:-1:-1;;;;;4218:25:2;;;;;;;:9;:25;;;;;:69;;;;4317:12;;4298:44;;4218:25;4317:12;4331:10;4298:44;:18;:44;:::i;:::-;4358:42;;;-1:-1:-1;;;;;4358:42:2;;;;;;;;;;;;;;;;;;;;;;;4045:362;;:::o;2876:89::-;2946:12;;-1:-1:-1;;;;;2946:12:2;2876:89;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:4;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:4;;;1684:137::o;4627:501:2:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4692:10:2;;;;4684:50;;;;;-1:-1:-1;;;4684:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4753:24:2;;;;;;:8;:24;;;;;;;;4752:25;4744:73;;;;-1:-1:-1;;;4744:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:30;;;-1:-1:-1;;;4846:30:2;;4870:4;4846:30;;;;;;4828:15;;-1:-1:-1;;;;;4846:15:2;;;;;:30;;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;4846:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4846:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4846:30:2;;-1:-1:-1;4887:18:2;4908:24;4926:5;4908:17;:24::i;:::-;4887:45;-1:-1:-1;4942:14:2;4959:23;:7;4887:45;4959:23;:11;:23;:::i;:::-;-1:-1:-1;;;;;4993:24:2;;;;;;:8;:24;;;;;:31;;-1:-1:-1;;4993:31:2;5020:4;4993:31;;;4942:40;-1:-1:-1;5035:35:2;5054:7;:5;:7::i;:::-;-1:-1:-1;;;;;5035:18:2;;;5063:6;5035:35;:18;:35;:::i;:::-;5086;;;-1:-1:-1;;;;;5086:35:2;;;;;;;;;;;;;;;1159:1:4;;;4627:501:2;:::o;3493:82::-;3558:10;;;;3493:82;:::o;899:77:4:-;937:7;963:6;-1:-1:-1;;;;;963:6:4;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:4;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:4;;1306:29;;1250:92;:::o;3646:103:2:-;-1:-1:-1;;;;;3726:16:2;;3700:7;3726:16;;;:9;:16;;;;;;3646:103;;;;:::o;3190:77::-;3254:6;;3190:77;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;3816:98:2:-;-1:-1:-1;;;;;3892:15:2;3869:4;3892:15;;;:8;:15;;;;;;;;;3816:98::o;5292:147::-;-1:-1:-1;;;;;5406:25:2;;5355:7;5406:25;;;:9;:25;;;;;;5381:51;;:20;5424:5;5381:13;:20::i;:::-;:24;:51;:24;:51;:::i;:::-;5374:58;5292:147;-1:-1:-1;;5292:147:2:o;834:176:3:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:3:o;662:174:6:-;770:58;;;-1:-1:-1;;;;;770:58:6;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:6;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:6;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;788:96:1:-;867:10;788:96;:::o;2178:225:4:-;-1:-1:-1;;;;;2251:22:4;;2243:73;;;;-1:-1:-1;;;2243:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:4;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:4;-1:-1:-1;;;;;2379:17:4;;;;;;;;;;2178:225::o;5574:513:2:-;5677:30;;;-1:-1:-1;;;5677:30:2;;5701:4;5677:30;;;;;;5633:7;;;;-1:-1:-1;;;;;5677:15:2;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;5677:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5677:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5677:30:2;-1:-1:-1;;;;;5759:25:2;;5717:20;5759:25;;;:9;5677:30;5759:25;;;;;5677:30;;-1:-1:-1;5717:20:2;5740:45;;5677:30;;5740:45;:18;:45;:::i;:::-;5717:68;;5818:6;;5800:15;:24;5796:285;;;5847:1;5840:8;;;;;;5796:285;5899:9;;5888:6;;:21;;;:10;:21;:::i;:::-;5869:15;:40;;:68;;;-1:-1:-1;;;;;;5913:24:2;;;;;;:8;:24;;;;;;;;5869:68;5865:216;;;5960:12;-1:-1:-1;5953:19:2;;-1:-1:-1;5953:19:2;5865:216;6010:60;6060:9;;6010:45;6027:27;6047:6;;6027:15;:19;;:27;;;;:::i;:::-;6010:12;;:45;:16;:45;:::i;:::-;:49;:60;:49;:60;:::i;:::-;6003:67;;;;;;2666:1095:6;3261:27;3269:5;-1:-1:-1;;;;;3261:25:6;;:27::i;:::-;3253:71;;;;;-1:-1:-1;;;3253:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:6;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;-1:-1:-1;;;3471:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:6;3659:85;;;;-1:-1:-1;;;3659:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:1095;;;;:::o;1732:187:3:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:3;;;1732:187::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:3;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;686:610:7:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:7;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:7:o;3718:338:3:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:3;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "1104",
								"cliff()": "1021",
								"duration()": "999",
								"isOwner()": "1147",
								"owner()": "1082",
								"release(address)": "infinite",
								"released(address)": "1173",
								"renounceOwnership()": "24334",
								"revocable()": "1033",
								"revoke(address)": "infinite",
								"revoked(address)": "1242",
								"start()": "1042",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_releasableAmount(contract IERC20)": "infinite",
								"_vestedAmount(contract IERC20)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "MSTORE"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "POP"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "CODESIZE"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SUB"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP1"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSHSIZE"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP4"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "CODECOPY"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP2"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP2"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "ADD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP1"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP3"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "ADD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP4"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "ADD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "DUP5"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "ADD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP1"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP5"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "ADD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "MLOAD"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP3"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP4"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP2"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP3"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP1"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP2"
								},
								{
									"begin": 2063,
									"end": 2808,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "AND"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMPDEST"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP4"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "OR"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP3"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "DUP3"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "DUP6"
								},
								{
									"begin": 2194,
									"end": 2219,
									"name": "AND"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "JUMPI"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP3"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SUB"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP3"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "2D"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MSTORE"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH data",
									"value": "2418688D011B8E0830741B4EF5B95D25F3075F5A8407237C54796D2479FF21E5"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "2D"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "CODECOPY"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "ADD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "POP"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "POP"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "MLOAD"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "DUP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP2"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SUB"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "SWAP1"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "REVERT"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 2186,
									"end": 2269,
									"name": "JUMPDEST"
								},
								{
									"begin": 2357,
									"end": 2365,
									"name": "DUP2"
								},
								{
									"begin": 2340,
									"end": 2353,
									"name": "DUP4"
								},
								{
									"begin": 2340,
									"end": 2365,
									"name": "GT"
								},
								{
									"begin": 2340,
									"end": 2365,
									"name": "ISZERO"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "JUMPI"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP3"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SUB"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP3"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "2B"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH data",
									"value": "55ACE87003BABD1F6117EC273F0418F272F297AF3B174D10868EC42A4D37881D"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "2B"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "CODECOPY"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "ADD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "POP"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "POP"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "MLOAD"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP2"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SUB"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "SWAP1"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "REVERT"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 2332,
									"end": 2413,
									"name": "JUMPDEST"
								},
								{
									"begin": 2442,
									"end": 2443,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP3"
								},
								{
									"begin": 2431,
									"end": 2443,
									"name": "GT"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "JUMPI"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP2"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "546F6B656E56657374696E673A206475726174696F6E20697320300000000000"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP3"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MSTORE"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "MLOAD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "DUP2"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SUB"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "ADD"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "SWAP1"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "REVERT"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 2423,
									"end": 2475,
									"name": "JUMPDEST"
								},
								{
									"begin": 2568,
									"end": 2583,
									"name": "TIMESTAMP"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2556,
									"end": 2564,
									"name": "DUP4"
								},
								{
									"begin": 2546,
									"end": 2551,
									"name": "DUP7"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "SHL"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "PUSH [tag]",
									"value": "18446744073709551672"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "OR"
								},
								{
									"begin": 2546,
									"end": 2555,
									"name": "SWAP1"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SWAP2"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SWAP1"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "SHR"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 2546,
									"end": 2565,
									"name": "JUMPDEST"
								},
								{
									"begin": 2546,
									"end": 2583,
									"name": "GT"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "JUMPI"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP3"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SUB"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP3"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "2F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MSTORE"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH data",
									"value": "201180E9FF8E768A63B561D29176411904F8FCDE7632C57246C9453C111DE99F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "2F"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "CODECOPY"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "ADD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "POP"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "POP"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "MLOAD"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "DUP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP2"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SUB"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "SWAP1"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "REVERT"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 2538,
									"end": 2635,
									"name": "JUMPDEST"
								},
								{
									"begin": 2646,
									"end": 2658,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "DUP1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "DUP8"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "AND"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "OR"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SWAP1"
								},
								{
									"begin": 2646,
									"end": 2672,
									"name": "SSTORE"
								},
								{
									"begin": 2682,
									"end": 2692,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "DUP1"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "AND"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "DUP3"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "ISZERO"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "ISZERO"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "OR"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SWAP1"
								},
								{
									"begin": 2682,
									"end": 2704,
									"name": "SSTORE"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "DUP3"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "SWAP1"
								},
								{
									"begin": 2714,
									"end": 2734,
									"name": "SSTORE"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 2753,
									"end": 2758,
									"name": "DUP5"
								},
								{
									"begin": 2763,
									"end": 2776,
									"name": "DUP5"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "SWAP1"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "DUP2"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "SHL"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "PUSH [tag]",
									"value": "18446744073709551672"
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "OR"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "SWAP1"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "SHR"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 2753,
									"end": 2777,
									"name": "JUMPDEST"
								},
								{
									"begin": 2744,
									"end": 2750,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2744,
									"end": 2777,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2787,
									"end": 2793,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2787,
									"end": 2801,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "JUMP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMPDEST"
								},
								{
									"begin": 867,
									"end": 877,
									"name": "CALLER"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMPDEST"
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP4"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "LT"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "ISZERO"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPI"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "REVERT"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1003,
									"name": "SWAP4"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "JUMPDEST"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "DUP1"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "CODECOPY"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 344,
									"end": 6089,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206219215bb53738efec4613ec0e5154cec5051a945695212b70dba3e9fee3d6a764736f6c63430005110032",
									".code": [
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "MSTORE"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "LT"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "SHR"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "872A7810"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "GT"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "9852595C"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "GT"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "9852595C"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "BE9A6555"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "FA01DC06"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMP"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "872A7810"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMP"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "FB5A6B4"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "13D033C0"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "19165587"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "38AF3EED"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "74A8F103"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "EQ"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 6089,
											"name": "REVERT"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP3"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "MLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "RETURN"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMPDEST"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "STOP"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP3"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "AND"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP3"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MSTORE"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "MLOAD"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "DUP2"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SUB"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "ADD"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "RETURN"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMPDEST"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "DUP1"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "AND"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ISZERO"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ISZERO"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP3"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SUB"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "RETURN"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "DUP1"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "AND"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMPDEST"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "AND"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "AND"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMPDEST"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "SLOAD"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMPDEST"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "SLOAD"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "SWAP1"
										},
										{
											"begin": 3039,
											"end": 3116,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMPDEST"
										},
										{
											"begin": 4093,
											"end": 4111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP3"
										},
										{
											"begin": 4114,
											"end": 4131,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4114,
											"end": 4138,
											"name": "JUMPDEST"
										},
										{
											"begin": 4093,
											"end": 4138,
											"name": "SWAP1"
										},
										{
											"begin": 4093,
											"end": 4138,
											"name": "POP"
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4167,
											"name": "DUP2"
										},
										{
											"begin": 4157,
											"end": 4171,
											"name": "GT"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "JUMPI"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "546F6B656E56657374696E673A206E6F20746F6B656E73206172652064756500"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "REVERT"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 4149,
											"end": 4207,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "DUP3"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "AND"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SWAP1"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "DUP2"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "MSTORE"
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "MSTORE"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SWAP1"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "KECCAK256"
										},
										{
											"begin": 4246,
											"end": 4271,
											"name": "SLOAD"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "SWAP1"
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP3"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4246,
											"end": 4275,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "AND"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4246,
											"end": 4287,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP1"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP5"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "AND"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "SWAP1"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "KECCAK256"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP1"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4287,
											"name": "SSTORE"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "SLOAD"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "SWAP3"
										},
										{
											"begin": 4218,
											"end": 4243,
											"name": "SWAP2"
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "AND"
										},
										{
											"begin": 4331,
											"end": 4341,
											"name": "DUP4"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "AND"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4298,
											"end": 4342,
											"name": "JUMPDEST"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP5"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "AND"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MSTORE"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "ADD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP4"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MSTORE"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "MLOAD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "PUSH",
											"value": "C7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP3"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "DUP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SUB"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP2"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "ADD"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4358,
											"end": 4400,
											"name": "LOG1"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMPDEST"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "AND"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "SWAP1"
										},
										{
											"begin": 2876,
											"end": 2965,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP2"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "DUP4"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "LOG3"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SSTORE"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "SLOAD"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "AND"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "JUMPI"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "546F6B656E56657374696E673A2063616E6E6F74207265766F6B650000000000"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP3"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "MLOAD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SUB"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "REVERT"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4684,
											"end": 4734,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "DUP2"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "AND"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "DUP2"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4753,
											"end": 4761,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "KECCAK256"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "SLOAD"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4753,
											"end": 4777,
											"name": "AND"
										},
										{
											"begin": 4752,
											"end": 4777,
											"name": "ISZERO"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "JUMPI"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SUB"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MSTORE"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH data",
											"value": "FA45135A638A0C1C9D4FC275CE2DA4F63E13A28E343A01A7F6788E54E1FC80F5"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "CODECOPY"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "ADD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "POP"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "POP"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "MLOAD"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "DUP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP2"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SUB"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "SWAP1"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "REVERT"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4744,
											"end": 4817,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "ADDRESS"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4843,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "DUP5"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "AND"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SUB"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "DUP7"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "GAS"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "STATICCALL"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP4"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4908,
											"end": 4932,
											"name": "JUMPDEST"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4942,
											"end": 4956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP4"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "DUP4"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4959,
											"end": 4970,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "AND"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "DUP6"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "AND"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "DUP2"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "MSTORE"
										},
										{
											"begin": 4993,
											"end": 5001,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "MSTORE"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5017,
											"name": "KECCAK256"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "AND"
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "OR"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SWAP1"
										},
										{
											"begin": 4993,
											"end": 5024,
											"name": "SSTORE"
										},
										{
											"begin": 4942,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5054,
											"end": 5061,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "DUP7"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "AND"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "SWAP1"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP4"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "AND"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5035,
											"end": 5070,
											"name": "JUMPDEST"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP7"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "AND"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MSTORE"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "MLOAD"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "39983C6D4D174A7AEE564F449D4A5C3C7AC9649D72B7793C56901183996F8AF6"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "DUP2"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SUB"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "ADD"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "SWAP1"
										},
										{
											"begin": 5086,
											"end": 5121,
											"name": "LOG1"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "POP"
										},
										{
											"begin": 4627,
											"end": 5128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "SLOAD"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3558,
											"end": 3568,
											"name": "AND"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3575,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "KECCAK256"
										},
										{
											"begin": 3726,
											"end": 3742,
											"name": "SLOAD"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SWAP2"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "SWAP1"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "POP"
										},
										{
											"begin": 3646,
											"end": 3749,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMPDEST"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "SLOAD"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3267,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP2"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3869,
											"end": 3873,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "DUP2"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3900,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "MSTORE"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "KECCAK256"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SLOAD"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "AND"
										},
										{
											"begin": 3892,
											"end": 3907,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 3914,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "AND"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "SWAP1"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "MSTORE"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "MSTORE"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "DUP2"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "KECCAK256"
										},
										{
											"begin": 5406,
											"end": 5431,
											"name": "SLOAD"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "SWAP1"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5424,
											"end": 5429,
											"name": "DUP5"
										},
										{
											"begin": 5381,
											"end": 5394,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5381,
											"end": 5401,
											"name": "JUMPDEST"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "SWAP1"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5381,
											"end": 5405,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "AND"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5381,
											"end": 5432,
											"name": "JUMPDEST"
										},
										{
											"begin": 5374,
											"end": 5432,
											"name": "SWAP3"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5292,
											"end": 5439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "SWAP4"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP1"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP5"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "SWAP1"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "DUP2"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "CODECOPY"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "REVERT"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP6"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP4"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP3"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "AND"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "LOG3"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP3"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP3"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "OR"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SSTORE"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5574,
											"end": 6087,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5574,
											"end": 6087,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE"
										},
										{
											"begin": 5701,
											"end": 5705,
											"name": "ADDRESS"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "DUP3"
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "DUP6"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "AND"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP3"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SUB"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP2"
										},
										{
											"begin": 5677,
											"end": 5692,
											"name": "DUP7"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "GAS"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "STATICCALL"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP5"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "AND"
										},
										{
											"begin": 5717,
											"end": 5737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "SWAP1"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP2"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "MSTORE"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "MSTORE"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "DUP2"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "KECCAK256"
										},
										{
											"begin": 5759,
											"end": 5784,
											"name": "SLOAD"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5717,
											"end": 5737,
											"name": "SWAP1"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "AND"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5740,
											"end": 5785,
											"name": "JUMPDEST"
										},
										{
											"begin": 5717,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5717,
											"end": 5785,
											"name": "POP"
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "SLOAD"
										},
										{
											"begin": 5800,
											"end": 5815,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5800,
											"end": 5824,
											"name": "LT"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "ISZERO"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "JUMPI"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "SWAP3"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "POP"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5840,
											"end": 5848,
											"name": "JUMP"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5796,
											"end": 6081,
											"name": "JUMPDEST"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "SLOAD"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "SLOAD"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "SWAP2"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5898,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "AND"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "JUMPDEST"
										},
										{
											"begin": 5869,
											"end": 5884,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5869,
											"end": 5909,
											"name": "LT"
										},
										{
											"begin": 5869,
											"end": 5909,
											"name": "ISZERO"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "DUP1"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "DUP5"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "DUP2"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "MSTORE"
										},
										{
											"begin": 5913,
											"end": 5921,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "MSTORE"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "KECCAK256"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "SLOAD"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5913,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 5869,
											"end": 5937,
											"name": "JUMPDEST"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "ISZERO"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "JUMPI"
										},
										{
											"begin": 5960,
											"end": 5972,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5953,
											"end": 5972,
											"name": "JUMP"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 5865,
											"end": 6081,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "SLOAD"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "SLOAD"
										},
										{
											"begin": 6027,
											"end": 6042,
											"name": "TIMESTAMP"
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "SWAP2"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "DUP5"
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "SWAP1"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6026,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "AND"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 6010,
											"end": 6055,
											"name": "JUMPDEST"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "SWAP1"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6059,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "AND"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6010,
											"end": 6070,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "SWAP3"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "POP"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6003,
											"end": 6070,
											"name": "JUMP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "DUP1"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP5"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP5"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP3"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "JUMP"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "MUL"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP5"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP2"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPI"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "INVALID"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DIV"
										},
										{
											"begin": 2544,
											"end": 2554,
											"name": "EQ"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPI"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "CODECOPY"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "REVERT"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMPDEST"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP2"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP5"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3916,
											"name": "DUP2"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP5"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP6"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP4"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP6"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPI"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "INVALID"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPDEST"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DIV"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "SWAP6"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"FA45135A638A0C1C9D4FC275CE2DA4F63E13A28E343A01A7F6788E54E1FC80F5": "546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564"
									}
								},
								"201180E9FF8E768A63B561D29176411904F8FCDE7632C57246C9453C111DE99F": "546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65",
								"2418688D011B8E0830741B4EF5B95D25F3075F5A8407237C54796D2479FF21E5": "546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373",
								"55ACE87003BABD1F6117EC273F0418F272F297AF3B174D10868EC42A4D37881D": "546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e"
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"cliff()": "13d033c0",
							"duration()": "0fb5a6b4",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"revocable()": "872a7810",
							"revoke(address)": "74a8f103",
							"revoked(address)": "fa01dc06",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenVestingRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"revocable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, with a cliff and vesting period. Optionally revocable by the owner.\",\"methods\":{\"beneficiary()\":{\"return\":\"the beneficiary of the tokens.\"},\"cliff()\":{\"return\":\"the cliff time of the token vesting.\"},\"constructor\":{\"details\":\"Creates a vesting contract that vests its balance of any ERC20 token to the beneficiary, gradually in a linear fashion until start + duration. By then all of the balance will have vested.\",\"params\":{\"beneficiary\":\"address of the beneficiary to whom vested tokens are transferred\",\"cliffDuration\":\"duration in seconds of the cliff in which tokens will begin to vest\",\"duration\":\"duration in seconds of the period in which the tokens will vest\",\"revocable\":\"whether the vesting is revocable or not\",\"start\":\"the time (as Unix time) at which point vesting starts\"}},\"duration()\":{\"return\":\"the duration of the token vesting.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"release(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"released(address)\":{\"return\":\"the amount of the token released.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revocable()\":{\"return\":\"true if the vesting is revocable.\"},\"revoke(address)\":{\"params\":{\"token\":\"ERC20 token which is being vested\"}},\"revoked(address)\":{\"return\":\"true if the token is revoked.\"},\"start()\":{\"return\":\"the start time of the token vesting.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TokenVesting\"},\"userdoc\":{\"methods\":{\"release(address)\":{\"notice\":\"Transfers vested tokens to beneficiary.\"},\"revoke(address)\":{\"notice\":\"Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":\"TokenVesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol\":{\"keccak256\":\"0x185d46b6efdd22004d93fdba8e230fbd2ae57c2d2a51ab0e4e62376733023b94\",\"urls\":[\"bzz-raw://b5973c9aa78ed2a5c23ae0f5280984966e901048a6fbcb70d5d1c56f1f4e0663\",\"dweb:/ipfs/QmNaoJRZAMBVu762NxBNW5w3gudm6ACjtW8e8EZKYdva37\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 78,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 80,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_cliff",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_start",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 86,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_revocable",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 90,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_released",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 94,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol:TokenVesting",
								"label": "_revoked",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"release(address)": {
								"notice": "Transfers vested tokens to beneficiary."
							},
							"revoke(address)": {
								"notice": "Allows the owner to revoke the vesting. Tokens already vested remain in the contract, the rest are returned to the owner."
							}
						}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158209a4202f2a327376e28dc9a417e3abe357d6937502adfd5e943e33eb3925a299864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209a4202f2a327376e28dc9a417e3abe357d6937502adfd5e943e33eb3925a299864736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 TIMESTAMP MUL CALLCODE LOG3 0x27 CALLDATACOPY PUSH15 0x28DC9A417E3ABE357D6937502ADFD5 0xE9 NUMBER 0xE3 RETURNDATACOPY 0xB3 SWAP3 GAS 0x29 SWAP9 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:3:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209a4202f2a327376e28dc9a417e3abe357d6937502adfd5e943e33eb3925a299864736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 TIMESTAMP MUL CALLCODE LOG3 0x27 CALLDATACOPY PUSH15 0x28DC9A417E3ABE357D6937502ADFD5 0xE9 NUMBER 0xE3 RETURNDATACOPY 0xB3 SWAP3 GAS 0x29 SWAP9 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:3:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209a4202f2a327376e28dc9a417e3abe357d6937502adfd5e943e33eb3925a299864736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 624,
								"contract": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820406e7ae4ea838e27c1b7f93d1a2f66afa390514735637c748939ebe14b94069764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820406e7ae4ea838e27c1b7f93d1a2f66afa390514735637c748939ebe14b94069764736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 BLOCKHASH PUSH15 0x7AE4EA838E27C1B7F93D1A2F66AFA3 SWAP1 MLOAD SELFBALANCE CALLDATALOAD PUSH4 0x7C748939 0xEB 0xE1 0x4B SWAP5 MOD SWAP8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "574:3189:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820406e7ae4ea838e27c1b7f93d1a2f66afa390514735637c748939ebe14b94069764736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 BLOCKHASH PUSH15 0x7AE4EA838E27C1B7F93D1A2F66AFA3 SWAP1 MLOAD SELFBALANCE CALLDATALOAD PUSH4 0x7C748939 0xEB 0xE1 0x4B SWAP5 MOD SWAP8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "574:3189:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820406e7ae4ea838e27c1b7f93d1a2f66afa390514735637c748939ebe14b94069764736f6c63430005110032",
									".code": [
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b6ca1bf93211be0fe036bf1a2d96445679bfb64ec10f34ea18c8a76d37cb376864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b6ca1bf93211be0fe036bf1a2d96445679bfb64ec10f34ea18c8a76d37cb376864736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB6 0xCA SHL 0xF9 ORIGIN GT 0xBE 0xF 0xE0 CALLDATASIZE 0xBF BYTE 0x2D SWAP7 DIFFICULTY JUMP PUSH26 0xBFB64EC10F34EA18C8A76D37CB376864736F6C63430005110032 ",
							"sourceMap": "93:2861:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b6ca1bf93211be0fe036bf1a2d96445679bfb64ec10f34ea18c8a76d37cb376864736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB6 0xCA SHL 0xF9 ORIGIN GT 0xBE 0xF 0xE0 CALLDATASIZE 0xBF BYTE 0x2D SWAP7 DIFFICULTY JUMP PUSH26 0xBFB64EC10F34EA18C8A76D37CB376864736F6C63430005110032 ",
							"sourceMap": "93:2861:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toPayable(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b6ca1bf93211be0fe036bf1a2d96445679bfb64ec10f34ea18c8a76d37cb376864736f6c63430005110032",
									".code": [
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "ADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "EQ"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "MSTORE"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "DUP1"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"msc_token/MscVesting.sol": {
				"ast": {
					"absolutePath": "msc_token/MscVesting.sol",
					"exportedSymbols": {
						"MscVesting": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol",
							"file": "./node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 27,
							"sourceUnit": 431,
							"src": "33:78:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "TokenVesting",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 430,
										"src": "142:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenVesting_$430",
											"typeString": "contract TokenVesting"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "142:12:0"
								}
							],
							"contractDependencies": [
								53,
								430,
								735
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26,
								430,
								735,
								53
							],
							"name": "MscVesting",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "356:18:0",
										"statements": []
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 17,
													"name": "beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"argumentTypes": null,
													"id": 18,
													"name": "start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 19,
													"name": "cliffDuration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "307:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 20,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "322:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 21,
													"name": "revocable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											],
											"id": 22,
											"modifierName": {
												"argumentTypes": null,
												"id": 16,
												"name": "TokenVesting",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 430,
												"src": "274:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_TokenVesting_$430_$",
													"typeString": "type(contract TokenVesting)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "274:68:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "175:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"name": "cliffDuration",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "211:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"name": "duration",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "234:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"name": "revocable",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "252:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 13,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "174:93:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:0:0"
									},
									"scope": 26,
									"src": "162:212:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "119:258:0"
						}
					],
					"src": "2:375:0"
				},
				"id": 0
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							53
						]
					},
					"id": 54,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 28,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "726:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 32,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:1"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:1"
									},
									"scope": 53,
									"src": "702:27:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "850:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 37,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "867:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "867:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 36,
												"id": 39,
												"nodeType": "Return",
												"src": "860:17:1"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "833:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:17:1"
									},
									"scope": 53,
									"src": "788:96:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "947:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1136,
													"src": "957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$53",
														"typeString": "contract Context"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "957:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 48,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1097:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1097:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 45,
												"id": 50,
												"nodeType": "Return",
												"src": "1090:15:1"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "933:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 43,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:14:1"
									},
									"scope": 53,
									"src": "890:222:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 54,
							"src": "525:589:1"
						}
					],
					"src": "0:1115:1"
				},
				"id": 1
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/drafts/TokenVesting.sol",
					"exportedSymbols": {
						"TokenVesting": [
							430
						]
					},
					"id": 431,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "../token/ERC20/SafeERC20.sol",
							"id": 56,
							"nodeType": "ImportDirective",
							"scope": 431,
							"sourceUnit": 1025,
							"src": "25:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol",
							"file": "../ownership/Ownable.sol",
							"id": 57,
							"nodeType": "ImportDirective",
							"scope": 431,
							"sourceUnit": 736,
							"src": "64:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol",
							"file": "../math/SafeMath.sol",
							"id": 58,
							"nodeType": "ImportDirective",
							"scope": 431,
							"sourceUnit": 618,
							"src": "99:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 59,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 735,
										"src": "369:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$735",
											"typeString": "contract Ownable"
										}
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "369:7:2"
								}
							],
							"contractDependencies": [
								53,
								735
							],
							"contractKind": "contract",
							"documentation": "@title TokenVesting\n@dev A token holder contract that can release its token balance gradually like a\ntypical vesting scheme, with a cliff and vesting period. Optionally revocable by the\nowner.",
							"fullyImplemented": true,
							"id": 430,
							"linearizedBaseContracts": [
								430,
								735,
								53
							],
							"name": "TokenVesting",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 63,
									"libraryName": {
										"contractScope": null,
										"id": 61,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 617,
										"src": "856:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$617",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "850:27:2",
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 66,
									"libraryName": {
										"contractScope": null,
										"id": 64,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1024,
										"src": "888:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1024",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "882:27:2",
									"typeName": {
										"contractScope": null,
										"id": 65,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 804,
										"src": "902:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$804",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 72,
									"name": "TokensReleased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "951:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "935:31:2"
									},
									"src": "915:52:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 76,
									"name": "TokenVestingRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "998:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "997:15:2"
									},
									"src": "972:41:2"
								},
								{
									"constant": false,
									"id": 78,
									"name": "_beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1072:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 77,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1072:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 80,
									"name": "_cliff",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1202:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1202:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 82,
									"name": "_start",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1230:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1230:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 84,
									"name": "_duration",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1258:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1258:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 86,
									"name": "_revocable",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1290:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 85,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1290:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 90,
									"name": "_released",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1320:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 89,
										"keyType": {
											"id": 87,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1329:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1320:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 88,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1340:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"name": "_revoked",
									"nodeType": "VariableDeclaration",
									"scope": 430,
									"src": "1372:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 93,
										"keyType": {
											"id": 91,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1381:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 92,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1392:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2176:632:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2194:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2217:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2209:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2209:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2194:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2221:47:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															},
															"value": "TokenVesting: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2186:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:83:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2186:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 117,
																"name": "cliffDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2340:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "2357:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2340:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a20636c696666206973206c6f6e676572207468616e206475726174696f6e",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:45:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d",
																"typeString": "literal_string \"TokenVesting: cliff is longer than duration\""
															},
															"value": "TokenVesting: cliff is longer than duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ace87003babd1f6117ec273f0418f272f297af3b174d10868ec42a4d37881d",
																"typeString": "literal_string \"TokenVesting: cliff is longer than duration\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2332:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:81:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2332:81:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 124,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "2431:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2442:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2431:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a206475726174696f6e2069732030",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2445:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea8f4eba8d61dfa0c2d37754e81430b04951f3473be1385cfd13658172452766",
																"typeString": "literal_string \"TokenVesting: duration is 0\""
															},
															"value": "TokenVesting: duration is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea8f4eba8d61dfa0c2d37754e81430b04951f3473be1385cfd13658172452766",
																"typeString": "literal_string \"TokenVesting: duration is 0\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2423:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2423:52:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 133,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "2556:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 131,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "2546:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 457,
																	"src": "2546:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2546:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "2568:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2568:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2546:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a2066696e616c2074696d65206973206265666f72652063757272656e742074696d65",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:49:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f",
																"typeString": "literal_string \"TokenVesting: final time is before current time\""
															},
															"value": "TokenVesting: final time is before current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_201180e9ff8e768a63b561d29176411904f8fcde7632c57246c9453c111de99f",
																"typeString": "literal_string \"TokenVesting: final time is before current time\""
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2538:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:97:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2538:97:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 141,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2646:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 142,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2661:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2646:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2646:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 145,
														"name": "_revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2682:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 146,
														"name": "revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2695:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2682:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2682:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 149,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "2714:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 150,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2726:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2714:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 153,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2744:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 156,
																"name": "cliffDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2763:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 154,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "2753:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2753:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2744:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "2744:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "2787:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 161,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2796:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2787:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2787:14:2"
											}
										]
									},
									"documentation": "@dev Creates a vesting contract that vests its balance of any ERC20 token to the\nbeneficiary, gradually in a linear fashion until start + duration. By then all\nof the balance will have vested.\n@param beneficiary address of the beneficiary to whom vested tokens are transferred\n@param cliffDuration duration in seconds of the cliff in which tokens will begin to vest\n@param start the time (as Unix time) at which point vesting starts\n@param duration duration in seconds of the period in which the tokens will vest\n@param revocable whether the vesting is revocable or not",
									"id": 165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "beneficiary",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2076:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"name": "start",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2097:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"name": "cliffDuration",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2112:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"name": "duration",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2135:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"name": "revocable",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2153:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2153:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2075:93:2"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2176:0:2"
									},
									"scope": 430,
									"src": "2063:745:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2929:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "2946:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 169,
												"id": 171,
												"nodeType": "Return",
												"src": "2939:19:2"
											}
										]
									},
									"documentation": "@return the beneficiary of the tokens.",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:2:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2920:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2919:9:2"
									},
									"scope": 430,
									"src": "2876:89:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "3086:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "_cliff",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "3103:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "3096:13:2"
											}
										]
									},
									"documentation": "@return the cliff time of the token vesting.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cliff",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3053:2:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3077:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3076:9:2"
									},
									"scope": 430,
									"src": "3039:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3237:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 186,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "3254:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3247:13:2"
											}
										]
									},
									"documentation": "@return the start time of the token vesting.",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3228:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3227:9:2"
									},
									"scope": 430,
									"src": "3190:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3389:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 194,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "3406:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3399:16:2"
											}
										]
									},
									"documentation": "@return the duration of the token vesting.",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3356:2:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3380:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3380:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3379:9:2"
									},
									"scope": 430,
									"src": "3339:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3541:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"name": "_revocable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 86,
													"src": "3558:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 201,
												"id": 203,
												"nodeType": "Return",
												"src": "3551:17:2"
											}
										]
									},
									"documentation": "@return true if the vesting is revocable.",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revocable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3535:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3535:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3534:6:2"
									},
									"scope": 430,
									"src": "3493:82:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "3709:40:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 212,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "3726:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 214,
													"indexExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3736:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3726:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 215,
												"nodeType": "Return",
												"src": "3719:23:2"
											}
										]
									},
									"documentation": "@return the amount of the token released.",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3664:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3663:15:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "3700:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3699:9:2"
									},
									"scope": 430,
									"src": "3646:103:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3875:39:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "_revoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "3892:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 226,
													"indexExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "3901:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3892:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 223,
												"id": 227,
												"nodeType": "Return",
												"src": "3885:22:2"
											}
										]
									},
									"documentation": "@return true if the token is revoked.",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revoked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3833:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3832:15:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3869:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3868:6:2"
									},
									"scope": 430,
									"src": "3816:98:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "4083:324:2",
										"statements": [
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"name": "unreleased",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "4093:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4093:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 237,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														],
														"id": 236,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "4114:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$804_$returns$_t_uint256_$",
															"typeString": "function (contract IERC20) view returns (uint256)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4114:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4093:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 241,
																"name": "unreleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "4157:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4170:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4157:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a206e6f20746f6b656e732061726520647565",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4173:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_380a978e46a25515dfcd8388d1b69c8885ed6771a723c79ba72fb2def5693f81",
																"typeString": "literal_string \"TokenVesting: no tokens are due\""
															},
															"value": "TokenVesting: no tokens are due"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_380a978e46a25515dfcd8388d1b69c8885ed6771a723c79ba72fb2def5693f81",
																"typeString": "literal_string \"TokenVesting: no tokens are due\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "4149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "4149:58:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 247,
															"name": "_released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4218:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 251,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 249,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4236:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4228:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4228:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4218:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 258,
																"name": "unreleased",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "4276:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "_released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "4246:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 256,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 254,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 231,
																			"src": "4264:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4256:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4256:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4246:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "4246:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4246:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4218:69:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "4218:69:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 265,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "4317:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 266,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4331:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4298:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "4298:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$804_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4298:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 271,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4381:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4373:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4373:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 273,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4389:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 269,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "4358:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4358:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "EmitStatement",
												"src": "4353:47:2"
											}
										]
									},
									"documentation": "@notice Transfers vested tokens to beneficiary.\n@param token ERC20 token which is being vested",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 230,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "4062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4061:14:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4083:0:2"
									},
									"scope": 430,
									"src": "4045:362:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4674:454:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "4692:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a2063616e6e6f74207265766f6b65",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4704:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15119a6f1e3cf1c964e0eb9ebc61658e2e198793f636a8f2639a07f4261ef0d6",
																"typeString": "literal_string \"TokenVesting: cannot revoke\""
															},
															"value": "TokenVesting: cannot revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15119a6f1e3cf1c964e0eb9ebc61658e2e198793f636a8f2639a07f4261ef0d6",
																"typeString": "literal_string \"TokenVesting: cannot revoke\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "4684:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4684:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4752:25:2",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "_revoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "4753:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 294,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 292,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 279,
																			"src": "4770:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4762:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4762:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4753:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6b6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4779:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5",
																"typeString": "literal_string \"TokenVesting: token already revoked\""
															},
															"value": "TokenVesting: token already revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa45135a638a0c1c9d4fc275ce2da4f63e13a28e343a01a7f6788e54e1fc80f5",
																"typeString": "literal_string \"TokenVesting: token already revoked\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "4744:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4744:73:2"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "4828:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 304,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "4870:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenVesting_$430",
																		"typeString": "contract TokenVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenVesting_$430",
																		"typeString": "contract TokenVesting"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4862:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4862:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 301,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4846:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 749,
														"src": "4846:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4828:48:2"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"name": "unreleased",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "4887:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4887:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4926:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														],
														"id": 310,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "4908:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$804_$returns$_t_uint256_$",
															"typeString": "function (contract IERC20) view returns (uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4908:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4887:45:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"name": "refund",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "4942:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 314,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 318,
															"name": "unreleased",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4971:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 316,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4959:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "4959:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4959:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 321,
															"name": "_revoked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4993:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 325,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 323,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "5010:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5002:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5002:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4993:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5020:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4993:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4993:31:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 332,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "5054:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 334,
															"name": "refund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5063:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 329,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5035:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "5035:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$804_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5035:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5035:35:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 339,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "5114:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5106:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5106:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 337,
														"name": "TokenVestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "5086:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "EmitStatement",
												"src": "5081:40:2"
											}
										]
									},
									"documentation": "@notice Allows the owner to revoke the vesting. Tokens already vested\nremain in the contract, the rest are returned to the owner.\n@param token ERC20 token which is being vested",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 282,
											"modifierName": {
												"argumentTypes": null,
												"id": 281,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 668,
												"src": "4664:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4664:9:2"
										}
									],
									"name": "revoke",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4643:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 278,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "4643:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4642:14:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4674:0:2"
									},
									"scope": 430,
									"src": "4627:501:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5364:75:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "_released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "5406:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 359,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 357,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "5424:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5416:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5416:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5406:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 352,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "5395:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 351,
																"name": "_vestedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "5381:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$804_$returns$_t_uint256_$",
																	"typeString": "function (contract IERC20) view returns (uint256)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5381:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 473,
														"src": "5381:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5381:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 361,
												"nodeType": "Return",
												"src": "5374:58:2"
											}
										]
									},
									"documentation": "@dev Calculates the amount that has already vested but hasn't been released yet.\n@param token ERC20 token which is being vested",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_releasableAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5319:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 345,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "5319:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:14:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5355:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5354:9:2"
									},
									"scope": 430,
									"src": "5292:147:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "5642:445:2",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "5652:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5652:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 375,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "5701:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenVesting_$430",
																		"typeString": "contract TokenVesting"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenVesting_$430",
																		"typeString": "contract TokenVesting"
																	}
																],
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5693:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5693:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5677:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 749,
														"src": "5677:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5677:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5652:55:2"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"name": "totalBalance",
														"nodeType": "VariableDeclaration",
														"scope": 428,
														"src": "5717:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5717:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 383,
																"name": "_released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "5759:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 387,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 385,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5777:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5769:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5769:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5759:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 381,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5740:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "5740:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5740:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5717:68:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 390,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5800:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "_cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "5818:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5800:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 397,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "5869:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5869:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 401,
																		"name": "_duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "5899:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 399,
																		"name": "_start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "5888:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 457,
																	"src": "5888:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5888:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5869:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "_revoked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "5913:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 408,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 406,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5930:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$804",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5922:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5922:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5913:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5869:68:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 425,
														"nodeType": "Block",
														"src": "5989:92:2",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 422,
																			"name": "_duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 84,
																			"src": "6060:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 418,
																							"name": "_start",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 82,
																							"src": "6047:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 415,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1104,
																								"src": "6027:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 416,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "6027:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 417,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 473,
																						"src": "6027:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 419,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6027:27:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 413,
																					"name": "totalBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 380,
																					"src": "6010:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 534,
																				"src": "6010:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6010:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 550,
																		"src": "6010:49:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6010:60:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 369,
																"id": 424,
																"nodeType": "Return",
																"src": "6003:67:2"
															}
														]
													},
													"id": 426,
													"nodeType": "IfStatement",
													"src": "5865:216:2",
													"trueBody": {
														"id": 412,
														"nodeType": "Block",
														"src": "5939:44:2",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 410,
																	"name": "totalBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "5960:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 369,
																"id": 411,
																"nodeType": "Return",
																"src": "5953:19:2"
															}
														]
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "5796:285:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "5826:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5847:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 369,
															"id": 395,
															"nodeType": "Return",
															"src": "5840:8:2"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Calculates the amount that has already vested.\n@param token ERC20 token which is being vested",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestedAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5597:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 364,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "5597:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5596:14:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5633:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5632:9:2"
									},
									"scope": 430,
									"src": "5574:513:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 431,
							"src": "344:5745:2"
						}
					],
					"src": "0:6090:2"
				},
				"id": 2
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							617
						]
					},
					"id": 618,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "901:109:3",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "911:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 443,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "923:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 444,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "927:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 448,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "946:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 449,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "951:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "938:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "938:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "1002:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 455,
												"nodeType": "Return",
												"src": "995:8:3"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "847:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "858:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "892:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:3"
									},
									"scope": 617,
									"src": "834:176:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "1341:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 467,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1362:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 468,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1365:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 466,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															473,
															500
														],
														"referencedDeclaration": 500,
														"src": "1358:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 471,
												"nodeType": "Return",
												"src": "1351:50:3"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1287:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1298:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1332:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:3"
									},
									"scope": 617,
									"src": "1274:134:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1827:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 485,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "1845:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "1850:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 488,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1853:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "1837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:3"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "1876:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 493,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1888:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 494,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1892:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "1911:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 498,
												"nodeType": "Return",
												"src": "1904:8:3"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1745:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1756:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1767:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1818:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:3"
									},
									"scope": 617,
									"src": "1732:187:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2226:392:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2458:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 515,
												"nodeType": "IfStatement",
												"src": "2454:45:3",
												"trueBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "2466:33:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 508,
															"id": 513,
															"nodeType": "Return",
															"src": "2480:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "2509:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 518,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2521:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2525:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 523,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "2544:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 524,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "2548:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 526,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "2553:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 531,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 517,
													"src": "2610:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 532,
												"nodeType": "Return",
												"src": "2603:8:3"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2172:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2183:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2217:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:3"
									},
									"scope": 617,
									"src": "2159:459:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3140:63:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 544,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3161:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 545,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "3164:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 543,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															550,
															577
														],
														"referencedDeclaration": 577,
														"src": "3157:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 548,
												"nodeType": "Return",
												"src": "3150:46:3"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3086:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3097:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:3"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3131:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:3"
									},
									"scope": 617,
									"src": "3073:130:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "3813:243:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 562,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3897:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 565,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3904:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "3889:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:3"
											},
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "3927:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3939:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3943:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 574,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 569,
													"src": "4048:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 560,
												"id": 575,
												"nodeType": "Return",
												"src": "4041:8:3"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3731:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3742:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3753:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:3"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3804:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:3"
									},
									"scope": 617,
									"src": "3718:338:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "4567:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "4588:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "4591:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 586,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															593,
															616
														],
														"referencedDeclaration": 616,
														"src": "4584:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 585,
												"id": 591,
												"nodeType": "Return",
												"src": "4577:44:3"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4513:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4524:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:3"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4558:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:3"
									},
									"scope": 617,
									"src": "4500:128:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 605,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "5245:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 608,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "5253:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "5237:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 611,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5283:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 612,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "5287:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 614,
												"nodeType": "Return",
												"src": "5276:12:3"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5145:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5167:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5218:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:3"
									},
									"scope": 617,
									"src": "5132:163:3",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 618,
							"src": "589:4708:3"
						}
					],
					"src": "0:5298:3"
				},
				"id": 3
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							735
						]
					},
					"id": 736,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 620,
							"nodeType": "ImportDirective",
							"scope": 736,
							"sourceUnit": 54,
							"src": "25:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 621,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 53,
										"src": "435:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$53",
											"typeString": "contract Context"
										}
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "435:7:4"
								}
							],
							"contractDependencies": [
								53
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 735,
							"linearizedBaseContracts": [
								735,
								53
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 624,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "449:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 623,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 630,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "505:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "536:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "504:57:4"
									},
									"src": "478:84:4"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "688:135:4",
										"statements": [
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "698:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 633,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "698:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 635,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "718:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:32:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 638,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "740:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 639,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "749:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "740:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "740:18:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "802:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "794:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 646,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 642,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "773:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "EmitStatement",
												"src": "768:48:4"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 650,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:4"
									},
									"scope": 735,
									"src": "664:159:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "946:30:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 655,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 624,
													"src": "963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 654,
												"id": 656,
												"nodeType": "Return",
												"src": "956:13:4"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "937:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "936:9:4"
									},
									"scope": 735,
									"src": "899:77:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "1085:82:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1103:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "1095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "1095:54:4"
											},
											{
												"id": 666,
												"nodeType": "PlaceholderStatement",
												"src": "1159:1:4"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 668,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:4"
									},
									"src": "1064:103:4",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "1296:46:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 673,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1313:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1313:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 675,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1329:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1313:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 672,
												"id": 677,
												"nodeType": "Return",
												"src": "1306:29:4"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1290:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:6:4"
									},
									"scope": 735,
									"src": "1250:92:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "1730:91:4",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 685,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "1766:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1782:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1774:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1774:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 684,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "1745:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "EmitStatement",
												"src": "1740:45:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 691,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1795:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1804:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1804:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1795:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "1795:19:4"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 682,
											"modifierName": {
												"argumentTypes": null,
												"id": 681,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 668,
												"src": "1720:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:4"
									},
									"scope": 735,
									"src": "1684:137:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2032:45:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 706,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "2061:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 705,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "2042:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2042:28:4"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 703,
											"modifierName": {
												"argumentTypes": null,
												"id": 702,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 668,
												"src": "2022:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2022:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1997:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1996:18:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:4"
									},
									"scope": 735,
									"src": "1970:107:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2233:170:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 716,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "2251:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2271:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2263:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2263:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2251:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2275:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2243:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "2243:73:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 725,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "2352:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 726,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2360:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 724,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2331:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "EmitStatement",
												"src": "2326:43:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 729,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2379:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 730,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "2388:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2379:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "2379:17:4"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2206:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:18:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:0:4"
									},
									"scope": 735,
									"src": "2178:225:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 736,
							"src": "415:1990:4"
						}
					],
					"src": "0:2406:4"
				},
				"id": 4
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							804
						]
					},
					"id": 805,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 737,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:5"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:5"
									},
									"scope": 804,
									"src": "270:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "427:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "467:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:5"
									},
									"scope": 804,
									"src": "408:68:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "714:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "733:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:5"
									},
									"scope": 804,
									"src": "696:77:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1067:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1082:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1122:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:5"
									},
									"scope": 804,
									"src": "1048:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1801:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1818:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1852:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:5"
									},
									"scope": 804,
									"src": "1784:74:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2187:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2203:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2222:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2256:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:5"
									},
									"scope": 804,
									"src": "2165:97:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 795,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2446:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2468:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2488:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:5"
									},
									"src": "2431:72:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 803,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2677:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2700:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2725:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:5"
									},
									"src": "2662:78:5"
								}
							],
							"scope": 805,
							"src": "176:2566:5"
						}
					],
					"src": "0:2743:5"
				},
				"id": 5
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1024
						]
					},
					"id": 1025,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 807,
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 805,
							"src": "25:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 808,
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 618,
							"src": "48:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 809,
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 1100,
							"src": "82:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 812,
									"libraryName": {
										"contractScope": null,
										"id": 810,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 617,
										"src": "604:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$617",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:6",
									"typeName": {
										"id": 811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 815,
									"libraryName": {
										"contractScope": null,
										"id": 813,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1099,
										"src": "636:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1099",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:6",
									"typeName": {
										"id": 814,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "734:102:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "793:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 758,
																		"src": "793:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "818:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "822:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 826,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "770:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "744:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "744:85:6"
											}
										]
									},
									"documentation": null,
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "684:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 816,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "684:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "698:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "710:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:6"
									},
									"scope": 1024,
									"src": "662:174:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "932:112:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 849,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "961:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 852,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "991:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "991:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 855,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "1020:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 856,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "1026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1030:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 850,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "968:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 848,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "942:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "942:95:6"
											}
										]
									},
									"documentation": null,
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 838,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "868:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "882:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "896:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "908:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:6"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:6"
									},
									"scope": 1024,
									"src": "842:202:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "1126:536:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 872,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "1415:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 879,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1134,
																							"src": "1455:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1024",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1024",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 878,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 881,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "1462:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 876,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "1431:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$804",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 767,
																				"src": "1431:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "1406:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 891,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "1585:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 894,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "1615:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "1615:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 897,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "1639:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 892,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "1592:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 890,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "1566:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:6"
											}
										]
									},
									"documentation": null,
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1071:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 863,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "1071:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1085:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1102:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:6"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:6"
									},
									"scope": 1024,
									"src": "1050:612:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "1754:196:6",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "1764:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 922,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1831:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 917,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "1811:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1024",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1024",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 919,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1818:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 914,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1787:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "1787:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "1787:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 926,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1866:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 929,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "1896:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "1896:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 932,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1920:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 933,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "1929:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 927,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "1873:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 925,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "1847:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:6"
											}
										]
									},
									"documentation": null,
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1699:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 904,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "1699:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1713:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:6"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:6"
									},
									"scope": 1024,
									"src": "1668:282:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "2042:241:6",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "2052:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 957,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 952,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "2099:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1024",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1024",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 954,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "2106:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 949,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "2075:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "2075:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "2075:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:95:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:118:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 962,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2199:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 965,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "2229:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 776,
																		"src": "2229:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2229:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 968,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "2253:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 969,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2262:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 963,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "2206:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$804",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 961,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2180:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$804_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:96:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "2180:96:6"
											}
										]
									},
									"documentation": null,
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1987:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 939,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "1987:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2001:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2018:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:6"
									},
									"scope": 1024,
									"src": "1956:327:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "2735:1026:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 983,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "3269:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$804",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3261:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1051,
																"src": "3261:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3261:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3290:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "3253:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:71:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "3253:71:6"
											},
											{
												"assignments": [
													991,
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 991,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "3395:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 990,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3395:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 993,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "3409:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 992,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3409:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "3456:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 995,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "3444:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$804",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3436:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3436:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1002,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "3479:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3488:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "3471:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3471:52:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1006,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "3538:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3538:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3558:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3538:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "3534:221:6",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "3561:194:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1013,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "3678:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1014,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3691:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 1015,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3690:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1011,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3667:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3667:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3667:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3699:44:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1010,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1117,
																		1118
																	],
																	"referencedDeclaration": 1118,
																	"src": "3659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3659:85:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "3659:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$804",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 975,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 804,
													"src": "2694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$804",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2708:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:33:6"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:6"
									},
									"scope": 1024,
									"src": "2666:1095:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 1025,
							"src": "574:3189:6"
						}
					],
					"src": "0:3764:6"
				},
				"id": 6
			},
			"msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin@2.5.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1099
						]
					},
					"id": 1100,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "752:544:7",
										"statements": [
											{
												"assignments": [
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 1050,
														"src": "1004:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1033,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:16:7"
											},
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 1050,
														"src": "1030:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1036,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1052:66:7",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:88:7"
											},
											{
												"externalReferences": [
													{
														"codehash": {
															"declaration": 1034,
															"isOffset": false,
															"isSlot": false,
															"src": "1195:8:7",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 1028,
															"isOffset": false,
															"isSlot": false,
															"src": "1219:7:7",
															"valueSize": 1
														}
													}
												],
												"id": 1040,
												"nodeType": "InlineAssembly",
												"operations": "{\n    codehash := extcodehash(account)\n}",
												"src": "1184:45:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1041,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "1246:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1042,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "1258:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1246:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1044,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "1273:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:3:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1273:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1246:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1048,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1245:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1049,
												"nodeType": "Return",
												"src": "1238:51:7"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following \ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "706:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "746:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1030,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:7"
									},
									"scope": 1099,
									"src": "686:610:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1581:49:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1060,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "1614:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1606:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": "uint160"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1606:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1598:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1063,
												"nodeType": "Return",
												"src": "1591:32:7"
											}
										]
									},
									"documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toPayable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1524:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1523:17:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1564:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:17:7"
									},
									"scope": 1099,
									"src": "1505:125:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "2658:294:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1074,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "2684:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1099",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1099",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2676:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2676:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2676:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2701:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:31:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2668:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2668:73:7"
											},
											{
												"assignments": [
													1083,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "2807:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1082,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2807:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1091,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:2:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1087,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2846:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1084,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "2825:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2825:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2825:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2825:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2806:51:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1093,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:60:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1117,
															1118
														],
														"referencedDeclaration": 1118,
														"src": "2867:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:78:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2867:78:7"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2606:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2633:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:43:7"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:7"
									},
									"scope": 1099,
									"src": "2587:365:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1100,
							"src": "93:2861:7"
						}
					],
					"src": "0:2955:7"
				},
				"id": 7
			}
		}
	}
}
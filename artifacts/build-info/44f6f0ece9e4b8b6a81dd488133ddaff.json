{
	"id": "44f6f0ece9e4b8b6a81dd488133ddaff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// contracts/GLDToken.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// import \"./node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n\r\n\r\ncontract MGC is ERC20 {\r\n    constructor() ERC20(\"MGC\", \"MGC\") {\r\n        _mint(msg.sender, 10500000 * 10 ** 18);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"ERC20.sol\":279:289  msg.sender */\n  caller\n    /* \"ERC20.sol\":3803:3821  _transferOwnership */\n  tag_10\n    /* \"ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"ERC20.sol\":6061:6074  _name = name_ */\n  dup2\n  mload\n  tag_12\n  swap1\n    /* \"ERC20.sol\":6061:6066  _name */\n  0x04\n  swap1\n    /* \"ERC20.sol\":6061:6074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"ERC20.sol\":6085:6102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"ERC20.sol\":6085:6092  _symbol */\n  0x05\n  swap1\n    /* \"ERC20.sol\":6085:6102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  jump(tag_29)\n    /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"ERC20.sol\":5268:5284  address oldOwner */\n  0x00\n    /* \"ERC20.sol\":5287:5293  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":5304:5321  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ERC20.sol\":5287:5293  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"ERC20.sol\":5268:5284  address oldOwner */\n  swap1\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ERC20.sol\":5257:5385  {\r... */\n  pop\n    /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:899   */\ntag_30:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_32:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_38:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_39:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_42:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_44:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_45:\n    /* \"#utility.yul\":1222:1283   */\n  tag_46\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_47:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_48\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_19:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_50:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_51:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_35:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_29:\n    /* \"ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1613:1627   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1606:1628   */\n      iszero\n        /* \"#utility.yul\":1588:1629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_22\n        /* \"#utility.yul\":1448:1635   */\n      jump\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20.sol\":7388:7400  _totalSupply */\n      sload(0x03)\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":5996:6021   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x20\n        /* \"#utility.yul\":5969:5987   */\n      add\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_22\n        /* \"#utility.yul\":5850:6027   */\n      jump\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20.sol\":7225:7227  18 */\n      0x12\n        /* \"#utility.yul\":6174:6210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6162:6164   */\n      0x20\n        /* \"#utility.yul\":6147:6165   */\n      add\n        /* \"ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_22\n        /* \"#utility.yul\":6032:6216   */\n      jump\n        /* \"ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      and\n        /* \"ERC20.sol\":7545:7552  uint256 */\n      0x00\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":7572:7581  _balances */\n      0x01\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3997:4003  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1386:1437   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x20\n        /* \"#utility.yul\":1359:1377   */\n      add\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      tag_22\n        /* \"#utility.yul\":1240:1443   */\n      jump\n        /* \"ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_20\n      tag_59\n      jump\t// in\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_14:\n      tag_24\n      tag_66\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_15:\n      tag_30\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":8138:8145  uint256 */\n      0x00\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":8165:8176  _allowances */\n      0x02\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":8165:8192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_16:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_21:\n        /* \"ERC20.sol\":6234:6247  string memory */\n      0x60\n        /* \"ERC20.sol\":6267:6272  _name */\n      0x04\n        /* \"ERC20.sol\":6260:6272  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_27:\n        /* \"ERC20.sol\":8430:8434  bool */\n      0x00\n        /* \"ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      tag_85\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":8470:8477  spender */\n      dup5\n        /* \"ERC20.sol\":8479:8485  amount */\n      dup5\n        /* \"ERC20.sol\":8447:8455  _approve */\n      tag_88\n        /* \"ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"ERC20.sol\":8504:8508  true */\n      0x01\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_37:\n        /* \"ERC20.sol\":9138:9142  bool */\n      0x00\n        /* \"ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      tag_91\n        /* \"ERC20.sol\":9165:9171  sender */\n      dup5\n        /* \"ERC20.sol\":9173:9182  recipient */\n      dup5\n        /* \"ERC20.sol\":9184:9190  amount */\n      dup5\n        /* \"ERC20.sol\":9155:9164  _transfer */\n      tag_92\n        /* \"ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      dup5\n      and\n        /* \"ERC20.sol\":9204:9228  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":9231:9242  _allowances */\n      0x02\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9231:9264  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":9283:9309  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4065:4067   */\n      0x20\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4047:4068   */\n      mstore\n        /* \"#utility.yul\":4104:4106   */\n      0x28\n        /* \"#utility.yul\":4084:4102   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4077:4107   */\n      mstore\n        /* \"#utility.yul\":4143:4177   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4123:4141   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4116:4178   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4194:4212   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4187:4225   */\n      mstore\n        /* \"#utility.yul\":4242:4261   */\n      0x84\n      add\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_97\n        /* \"ERC20.sol\":9399:9405  sender */\n      dup6\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9440:9446  amount */\n      dup6\n        /* \"ERC20.sol\":9421:9437  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":9421:9446  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":9390:9398  _approve */\n      tag_88\n        /* \"ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"ERC20.sol\":9478:9482  true */\n      0x01\n      swap5\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9987:9991  bool */\n      0x00\n        /* \"ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":10036:10047  _allowances */\n      0x02\n        /* \"ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10036:10070  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":9987:9991  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_85\n      swap2\n        /* \"ERC20.sol\":10027:10034  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_104\n      swap1\n        /* \"ERC20.sol\":10073:10083  addedValue */\n      dup7\n      swap1\n        /* \"ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":10004:10012  _approve */\n      tag_88\n        /* \"ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_53:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4456:4477   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4493:4511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4486:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4586   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4532:4550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4525:4587   */\n      mstore\n        /* \"#utility.yul\":4604:4622   */\n      0x64\n      add\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4272:4628   */\n      jump\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_110:\n        /* \"ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      tag_114\n        /* \"ERC20.sol\":4667:4668  0 */\n      0x00\n        /* \"ERC20.sol\":4640:4658  _transferOwnership */\n      tag_115\n        /* \"ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_59:\n        /* \"ERC20.sol\":6455:6468  string memory */\n      0x60\n        /* \"ERC20.sol\":6488:6495  _symbol */\n      0x05\n        /* \"ERC20.sol\":6481:6495  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_63:\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":10710:10714  bool */\n      0x00\n        /* \"ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":10754:10765  _allowances */\n      0x02\n        /* \"ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10754:10788  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":10807:10842  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5646:5648   */\n      0x20\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5628:5649   */\n      mstore\n        /* \"#utility.yul\":5685:5687   */\n      0x25\n        /* \"#utility.yul\":5665:5683   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5658:5688   */\n      mstore\n        /* \"#utility.yul\":5724:5758   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5704:5722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5697:5759   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5775:5793   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5768:5803   */\n      mstore\n        /* \"#utility.yul\":5820:5839   */\n      0x84\n      add\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_95\n        /* \"#utility.yul\":5444:5845   */\n      jump\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_125:\n        /* \"ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_128\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":10943:10950  spender */\n      dup6\n        /* \"ERC20.sol\":10971:10986  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":10952:10968  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":10952:10986  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":10920:10928  _approve */\n      tag_88\n        /* \"ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"ERC20.sol\":11018:11022  true */\n      0x01\n      swap4\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_67:\n        /* \"ERC20.sol\":7897:7901  bool */\n      0x00\n        /* \"ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      tag_85\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":7938:7947  recipient */\n      dup5\n        /* \"ERC20.sol\":7949:7955  amount */\n      dup5\n        /* \"ERC20.sol\":7914:7923  _transfer */\n      tag_92\n        /* \"ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_76:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4456:4477   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4493:4511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4486:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4586   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4532:4550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4525:4587   */\n      mstore\n        /* \"#utility.yul\":4604:4622   */\n      0x64\n      add\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4272:4628   */\n      jump\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4922:4944  newOwner != address(0) */\n      dup2\n      and\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2830:2851   */\n      mstore\n        /* \"#utility.yul\":2887:2889   */\n      0x26\n        /* \"#utility.yul\":2867:2885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2860:2890   */\n      mstore\n        /* \"#utility.yul\":2926:2960   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2906:2924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2899:2961   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2977:2995   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2970:3006   */\n      mstore\n        /* \"#utility.yul\":3023:3042   */\n      0x84\n      add\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2646:3048   */\n      jump\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_140:\n        /* \"ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      tag_143\n        /* \"ERC20.sol\":5017:5025  newOwner */\n      dup2\n        /* \"ERC20.sol\":4998:5016  _transferOwnership */\n      tag_115\n        /* \"ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":14301:14681  function _approve(\r... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14437:14456  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5223:5244   */\n      mstore\n        /* \"#utility.yul\":5280:5282   */\n      0x24\n        /* \"#utility.yul\":5260:5278   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5253:5283   */\n      mstore\n        /* \"#utility.yul\":5319:5353   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5299:5317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5292:5354   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5370:5388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5414:5433   */\n      0x84\n      add\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5039:5439   */\n      jump\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14516:14537  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3258   */\n      mstore\n        /* \"#utility.yul\":3294:3296   */\n      0x22\n        /* \"#utility.yul\":3274:3292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3267:3297   */\n      mstore\n        /* \"#utility.yul\":3333:3367   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3313:3331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3306:3368   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3384:3402   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3377:3409   */\n      mstore\n        /* \"#utility.yul\":3426:3445   */\n      0x84\n      add\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":3053:3451   */\n      jump\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14589:14607  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":14589:14600  _allowances */\n      0x02\n        /* \"ERC20.sol\":14589:14607  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":14589:14616  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":14589:14625  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5996:6021   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5969:5987   */\n      add\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":14301:14681  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11520:12253  function _transfer(\r... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11660:11680  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4835:4837   */\n      0x20\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4817:4838   */\n      mstore\n        /* \"#utility.yul\":4874:4876   */\n      0x25\n        /* \"#utility.yul\":4854:4872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4847:4877   */\n      mstore\n        /* \"#utility.yul\":4913:4947   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4893:4911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4886:4948   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4964:4982   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4957:4992   */\n      mstore\n        /* \"#utility.yul\":5009:5028   */\n      0x84\n      add\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4633:5034   */\n      jump\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11741:11764  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2444:2446   */\n      0x20\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2426:2447   */\n      mstore\n        /* \"#utility.yul\":2483:2485   */\n      0x23\n        /* \"#utility.yul\":2463:2481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2456:2486   */\n      mstore\n        /* \"#utility.yul\":2522:2556   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2502:2520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2495:2557   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2573:2591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2566:2599   */\n      mstore\n        /* \"#utility.yul\":2616:2635   */\n      0x84\n      add\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2242:2641   */\n      jump\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      dup4\n      and\n        /* \"ERC20.sol\":11877:11898  uint256 senderBalance */\n      0x00\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":11901:11910  _balances */\n      0x01\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":11937:11960  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3640:3661   */\n      mstore\n        /* \"#utility.yul\":3697:3699   */\n      0x26\n        /* \"#utility.yul\":3677:3695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3670:3700   */\n      mstore\n        /* \"#utility.yul\":3736:3770   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3716:3734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3709:3771   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3787:3805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3780:3816   */\n      mstore\n        /* \"#utility.yul\":3833:3852   */\n      0x84\n      add\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":3456:3858   */\n      jump\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":12039:12048  _balances */\n      0x01\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":12059:12081  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20.sol\":12039:12081  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20.sol\":12103:12123  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"ERC20.sol\":12075:12081  amount */\n      dup5\n      swap3\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      swap1\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_165\n      swap1\n        /* \"ERC20.sol\":12075:12081  amount */\n      dup5\n      swap1\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_105\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":12168:12177  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n        /* \"ERC20.sol\":12160:12166  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":12179:12185  amount */\n      dup5\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_166\n      swap2\n        /* \"#utility.yul\":5996:6021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x20\n        /* \"#utility.yul\":5969:5987   */\n      add\n      swap1\n        /* \"#utility.yul\":5850:6027   */\n      jump\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":11641:12253  {\r... */\n      pop\n        /* \"ERC20.sol\":11520:12253  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_115:\n        /* \"ERC20.sol\":5268:5284  address oldOwner */\n      0x00\n        /* \"ERC20.sol\":5287:5293  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5304:5321  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ERC20.sol\":5287:5293  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"ERC20.sol\":5268:5284  address oldOwner */\n      swap1\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ERC20.sol\":5257:5385  {\r... */\n      pop\n        /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_173:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_175:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_49:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_177:\n        /* \"#utility.yul\":343:372   */\n      tag_178\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_173\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_71:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_180:\n        /* \"#utility.yul\":551:580   */\n      tag_181\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_173\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_182\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_173\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_36:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_184:\n        /* \"#utility.yul\":833:862   */\n      tag_185\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_173\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_186\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_26:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_188:\n        /* \"#utility.yul\":1149:1178   */\n      tag_189\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1640:2237   */\n    tag_23:\n        /* \"#utility.yul\":1752:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1783   */\n      0x20\n        /* \"#utility.yul\":1810:1812   */\n      dup1\n        /* \"#utility.yul\":1799:1808   */\n      dup4\n        /* \"#utility.yul\":1792:1813   */\n      mstore\n        /* \"#utility.yul\":1842:1848   */\n      dup4\n        /* \"#utility.yul\":1836:1849   */\n      mload\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1880:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1878   */\n      dup6\n        /* \"#utility.yul\":1865:1883   */\n      add\n        /* \"#utility.yul\":1858:1892   */\n      mstore\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1920:2060   */\n    tag_193:\n        /* \"#utility.yul\":1934:1940   */\n      dup2\n        /* \"#utility.yul\":1931:1932   */\n      dup2\n        /* \"#utility.yul\":1928:1941   */\n      lt\n        /* \"#utility.yul\":1920:2060   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2029:2043   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2025:2048   */\n      dup4\n      add\n        /* \"#utility.yul\":2019:2049   */\n      mload\n        /* \"#utility.yul\":1995:2012   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2014:2016   */\n      0x40\n        /* \"#utility.yul\":1991:2017   */\n      add\n        /* \"#utility.yul\":1984:2050   */\n      mstore\n        /* \"#utility.yul\":1949:1959   */\n      dup3\n      add\n        /* \"#utility.yul\":1920:2060   */\n      jump(tag_193)\n    tag_195:\n        /* \"#utility.yul\":2078:2084   */\n      dup2\n        /* \"#utility.yul\":2075:2076   */\n      dup2\n        /* \"#utility.yul\":2072:2085   */\n      gt\n        /* \"#utility.yul\":2069:2160   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2134:2140   */\n      dup4\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2115:2146   */\n      add\n        /* \"#utility.yul\":2108:2150   */\n      mstore\n        /* \"#utility.yul\":2069:2160   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2221:2223   */\n      0x1f\n        /* \"#utility.yul\":2200:2215   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2196:2225   */\n      and\n        /* \"#utility.yul\":2181:2226   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2228:2230   */\n      0x40\n        /* \"#utility.yul\":2177:2231   */\n      add\n      swap4\n        /* \"#utility.yul\":1640:2237   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6446   */\n    tag_105:\n        /* \"#utility.yul\":6261:6264   */\n      0x00\n        /* \"#utility.yul\":6292:6293   */\n      dup3\n        /* \"#utility.yul\":6288:6294   */\n      not\n        /* \"#utility.yul\":6285:6286   */\n      dup3\n        /* \"#utility.yul\":6282:6295   */\n      gt\n        /* \"#utility.yul\":6279:6415   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6337:6347   */\n      0x4e487b71\n        /* \"#utility.yul\":6332:6335   */\n      0xe0\n        /* \"#utility.yul\":6328:6348   */\n      shl\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6318:6349   */\n      mstore\n        /* \"#utility.yul\":6372:6376   */\n      0x11\n        /* \"#utility.yul\":6369:6370   */\n      0x04\n        /* \"#utility.yul\":6362:6377   */\n      mstore\n        /* \"#utility.yul\":6400:6404   */\n      0x24\n        /* \"#utility.yul\":6397:6398   */\n      0x00\n        /* \"#utility.yul\":6390:6405   */\n      revert\n        /* \"#utility.yul\":6279:6415   */\n    tag_209:\n      pop\n        /* \"#utility.yul\":6431:6440   */\n      add\n      swap1\n        /* \"#utility.yul\":6221:6446   */\n      jump\t// out\n        /* \"#utility.yul\":6451:6831   */\n    tag_79:\n        /* \"#utility.yul\":6530:6531   */\n      0x01\n        /* \"#utility.yul\":6526:6538   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6573:6585   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6594:6655   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6648:6652   */\n      0x7f\n        /* \"#utility.yul\":6640:6646   */\n      dup3\n        /* \"#utility.yul\":6636:6653   */\n      and\n        /* \"#utility.yul\":6626:6653   */\n      swap2\n      pop\n        /* \"#utility.yul\":6594:6655   */\n    tag_211:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      eq\n        /* \"#utility.yul\":6664:6825   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6747:6757   */\n      0x4e487b71\n        /* \"#utility.yul\":6742:6745   */\n      0xe0\n        /* \"#utility.yul\":6738:6758   */\n      shl\n        /* \"#utility.yul\":6735:6736   */\n      0x00\n        /* \"#utility.yul\":6728:6759   */\n      mstore\n        /* \"#utility.yul\":6782:6786   */\n      0x22\n        /* \"#utility.yul\":6779:6780   */\n      0x04\n        /* \"#utility.yul\":6772:6787   */\n      mstore\n        /* \"#utility.yul\":6810:6814   */\n      0x24\n        /* \"#utility.yul\":6807:6808   */\n      0x00\n        /* \"#utility.yul\":6800:6815   */\n      revert\n        /* \"#utility.yul\":6664:6825   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":6451:6831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fb14375c821ca9a00e5edd091154a564ea1c66d31db2d46f93ada210ecfcf87464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_136": {
									"entryPoint": null,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_216": {
									"entryPoint": 115,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000dab38038062000dab833981016040819052620000349162000220565b6200003f3362000073565b815162000054906004906020850190620000c3565b5080516200006a906005906020840190620000c3565b505050620002dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000d1906200028a565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b600082601f8301126200017b57600080fd5b81516001600160401b0380821115620001985762000198620002c7565b604051601f8301601f19908116603f01168101908282118183101715620001c357620001c3620002c7565b81604052838152602092508683858801011115620001e057600080fd5b600091505b83821015620002045785820183015181830184015290820190620001e5565b83821115620002165760008385830101525b9695505050505050565b600080604083850312156200023457600080fd5b82516001600160401b03808211156200024c57600080fd5b6200025a8683870162000169565b935060208501519150808211156200027157600080fd5b50620002808582860162000169565b9150509250929050565b600181811c908216806200029f57607f821691505b60208210811415620002c157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610abe80620002ed6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109d2565b60405180910390f35b61012061011b3660046109a8565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096c565b6102e7565b60405160128152602001610104565b6101206101723660046109a8565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a8565b610447565b6101206101ee3660046109a8565b6104e0565b610134610201366004610939565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a4d565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a27565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a4d565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b60006020828403121561092957600080fd5b610932826108fb565b9392505050565b6000806040838503121561094c57600080fd5b610955836108fb565b9150610963602084016108fb565b90509250929050565b60008060006060848603121561098157600080fd5b61098a846108fb565b9250610998602085016108fb565b9150604084013590509250925092565b600080604083850312156109bb57600080fd5b6109c4836108fb565b946020939093013593505050565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a6157607f821691505b60208210811415610a8257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220fb14375c821ca9a00e5edd091154a564ea1c66d31db2d46f93ada210ecfcf87464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDAB CODESIZE SUB DUP1 PUSH3 0xDAB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x220 JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x73 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x54 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6A SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP POP POP PUSH3 0x2DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD1 SWAP1 PUSH3 0x28A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x140 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x140 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST POP PUSH3 0x14E SWAP3 SWAP2 POP PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x198 JUMPI PUSH3 0x198 PUSH3 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1C3 JUMPI PUSH3 0x1C3 PUSH3 0x2C7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x204 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1E5 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x25A DUP7 DUP4 DUP8 ADD PUSH3 0x169 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x280 DUP6 DUP3 DUP7 ADD PUSH3 0x169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x29F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xABE DUP1 PUSH3 0x2ED PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x932 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x955 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x963 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98A DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x998 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C4 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB EQ CALLDATACOPY 0x5C DUP3 SHR 0xA9 LOG0 0xE 0x5E 0xDD MULMOD GT SLOAD 0xA5 PUSH5 0xEA1C66D31D 0xB2 0xD4 PUSH16 0x93ADA210ECFCF87464736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "5392:10745:0:-:0;;;5994:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3803:32;279:10;3803:18;:32::i;:::-;6061:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6085:17:0;;;;:7;;:17;;;;;:::i;:::-;;5994:116;;5392:10745;;5194:191;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5257:128;5194:191;:::o;5392:10745::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5392:10745:0;;;-1:-1:-1;5392:10745:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;5392:10745:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_736": {
									"entryPoint": 1464,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_747": {
									"entryPoint": null,
									"id": 747,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_216": {
									"entryPoint": 2219,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_563": {
									"entryPoint": 1756,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_372": {
									"entryPoint": 721,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_288": {
									"entryPoint": null,
									"id": 288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_486": {
									"entryPoint": 1095,
									"id": 486,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_447": {
									"entryPoint": 918,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_268": {
									"entryPoint": 575,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_173": {
									"entryPoint": 978,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_278": {
									"entryPoint": 1080,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 743,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_196": {
									"entryPoint": 1261,
									"id": 196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_333": {
									"entryPoint": 1248,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6833:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1351:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1424:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1429:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1420:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1433:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1416:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1240:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1620:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1613:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1606:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1534:4:1",
														"type": ""
													}
												],
												"src": "1448:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1781:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1775:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1810:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1826:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1901:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1910:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1905:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1999:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2010:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1995:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1995:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2014:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1991:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1991:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2033:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2041:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2029:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2029:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2045:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2025:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2025:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2019:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2019:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1942:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1944:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1953:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1956:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1944:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1924:3:1",
																"statements": []
															},
															"src": "1920:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2123:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2134:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2119:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2143:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2115:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2115:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2108:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2108:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:1"
															},
															"nodeType": "YulIf",
															"src": "2069:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2169:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2204:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2212:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2200:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2200:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2221:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2217:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1730:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1640:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2522:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2593:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2407:4:1",
														"type": ""
													}
												],
												"src": "2242:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2926:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2997:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2797:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:1",
														"type": ""
													}
												],
												"src": "2646:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3333:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3404:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3418:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3418:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3218:4:1",
														"type": ""
													}
												],
												"src": "3053:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3736:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3807:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3825:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3621:4:1",
														"type": ""
													}
												],
												"src": "3456:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4084:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4143:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4257:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4014:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4028:4:1",
														"type": ""
													}
												],
												"src": "3863:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4493:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4486:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4547:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4552:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4596:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4604:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4596:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4423:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4437:4:1",
														"type": ""
													}
												],
												"src": "4272:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4807:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4835:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4817:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4869:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4854:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4874:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4847:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4913:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4886:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4979:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4984:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4957:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5001:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5001:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4784:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4798:4:1",
														"type": ""
													}
												],
												"src": "4633:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5223:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5260:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5280:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5253:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5319:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5385:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5390:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5190:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5204:4:1",
														"type": ""
													}
												],
												"src": "5039:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5618:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5704:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5724:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5697:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5795:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5812:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5835:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5812:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5609:4:1",
														"type": ""
													}
												],
												"src": "5444:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5951:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5961:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5973:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5984:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5969:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5961:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6003:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5996:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5931:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5942:4:1",
														"type": ""
													}
												],
												"src": "5850:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6139:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6204:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6174:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6174:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6098:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6120:4:1",
														"type": ""
													}
												],
												"src": "6032:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6269:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6304:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6325:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6332:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6337:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6328:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6328:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6318:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6318:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6369:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6372:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6362:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6362:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6397:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6400:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6390:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6390:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6390:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6285:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6292:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6288:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6282:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6282:13:1"
															},
															"nodeType": "YulIf",
															"src": "6279:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6424:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6435:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6438:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6252:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6255:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6261:3:1",
														"type": ""
													}
												],
												"src": "6221:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6506:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6516:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6533:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6547:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6577:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6583:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6551:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6624:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6626:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6640:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6648:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6636:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6636:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6626:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6604:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:26:1"
															},
															"nodeType": "YulIf",
															"src": "6594:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6714:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6742:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6747:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6738:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6738:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6728:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6728:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6779:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6782:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6772:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6772:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6810:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6800:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6800:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:38:1"
															},
															"nodeType": "YulIf",
															"src": "6664:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6486:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6495:6:1",
														"type": ""
													}
												],
												"src": "6451:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109d2565b60405180910390f35b61012061011b3660046109a8565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096c565b6102e7565b60405160128152602001610104565b6101206101723660046109a8565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a8565b610447565b6101206101ee3660046109a8565b6104e0565b610134610201366004610939565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a4d565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a27565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a4d565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b60006020828403121561092957600080fd5b610932826108fb565b9392505050565b6000806040838503121561094c57600080fd5b610955836108fb565b9150610963602084016108fb565b90509250929050565b60008060006060848603121561098157600080fd5b61098a846108fb565b9250610998602085016108fb565b9150604084013590509250925092565b600080604083850312156109bb57600080fd5b6109c4836108fb565b946020939093013593505050565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a6157607f821691505b60208210811415610a8257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220fb14375c821ca9a00e5edd091154a564ea1c66d31db2d46f93ada210ecfcf87464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x932 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x955 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x963 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98A DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x998 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C4 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB EQ CALLDATACOPY 0x5C DUP3 SHR 0xA9 LOG0 0xE 0x5E 0xDD MULMOD GT SLOAD 0xA5 PUSH5 0xEA1C66D31D 0xB2 0xD4 PUSH16 0x93ADA210ECFCF87464736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "5392:10745:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8347:169;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:1;;1606:22;1588:41;;1576:2;1561:18;8347:169:0;1448:187:1;7300:108:0;7388:12;;7300:108;;;5996:25:1;;;5984:2;5969:18;7300:108:0;5850:177:1;8998:492:0;;;;;;:::i;:::-;;:::i;7142:93::-;;;7225:2;6174:36:1;;6162:2;6147:18;7142:93:0;6032:184:1;9899:215:0;;;;;;:::i;:::-;;:::i;7471:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7572:18:0;7545:7;7572:18;;;:9;:18;;;;;;;7471:127;4575:103;;;:::i;:::-;;3924:87;3970:7;3997:6;3924:87;;-1:-1:-1;;;;;3997:6:0;;;1386:51:1;;1374:2;1359:18;3924:87:0;1240:203:1;6399:104:0;;;:::i;10617:413::-;;;;;;:::i;:::-;;:::i;7811:175::-;;;;;;:::i;:::-;;:::i;8049:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8165:18:0;;;8138:7;8165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8049:151;4833:201;;;;;;:::i;:::-;;:::i;6180:100::-;6234:13;6267:5;6260:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;:::o;8347:169::-;8430:4;8447:39;279:10;8470:7;8479:6;8447:8;:39::i;:::-;-1:-1:-1;8504:4:0;8347:169;;;;:::o;8998:492::-;9138:4;9155:36;9165:6;9173:9;9184:6;9155:9;:36::i;:::-;-1:-1:-1;;;;;9231:19:0;;9204:24;9231:19;;;:11;:19;;;;;;;;279:10;9231:33;;;;;;;;9283:26;;;;9275:79;;;;-1:-1:-1;;;9275:79:0;;4065:2:1;9275:79:0;;;4047:21:1;4104:2;4084:18;;;4077:30;4143:34;4123:18;;;4116:62;-1:-1:-1;;;4194:18:1;;;4187:38;4242:19;;9275:79:0;;;;;;;;;9390:57;9399:6;279:10;9440:6;9421:16;:25;9390:8;:57::i;:::-;-1:-1:-1;9478:4:0;;8998:492;-1:-1:-1;;;;8998:492:0:o;9899:215::-;279:10;9987:4;10036:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10036:34:0;;;;;;;;;;9987:4;;10004:80;;10027:7;;10036:47;;10073:10;;10036:47;:::i;:::-;10004:8;:80::i;4575:103::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4474:2:1;4136:68:0;;;4456:21:1;;;4493:18;;;4486:30;4552:34;4532:18;;;4525:62;4604:18;;4136:68:0;4272:356:1;4136:68:0;4640:30:::1;4667:1;4640:18;:30::i;:::-;4575:103::o:0;6399:104::-;6455:13;6488:7;6481:14;;;;;:::i;10617:413::-;279:10;10710:4;10754:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10754:34:0;;;;;;;;;;10807:35;;;;10799:85;;;;-1:-1:-1;;;10799:85:0;;5646:2:1;10799:85:0;;;5628:21:1;5685:2;5665:18;;;5658:30;5724:34;5704:18;;;5697:62;-1:-1:-1;;;5775:18:1;;;5768:35;5820:19;;10799:85:0;5444:401:1;10799:85:0;10920:67;279:10;10943:7;10971:15;10952:16;:34;10920:8;:67::i;:::-;-1:-1:-1;11018:4:0;;10617:413;-1:-1:-1;;;10617:413:0:o;7811:175::-;7897:4;7914:42;279:10;7938:9;7949:6;7914:9;:42::i;4833:201::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4474:2:1;4136:68:0;;;4456:21:1;;;4493:18;;;4486:30;4552:34;4532:18;;;4525:62;4604:18;;4136:68:0;4272:356:1;4136:68:0;-1:-1:-1;;;;;4922:22:0;::::1;4914:73;;;::::0;-1:-1:-1;;;4914:73:0;;2848:2:1;4914:73:0::1;::::0;::::1;2830:21:1::0;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:1;;;2970:36;3023:19;;4914:73:0::1;2646:402:1::0;4914:73:0::1;4998:28;5017:8;4998:18;:28::i;:::-;4833:201:::0;:::o;14301:380::-;-1:-1:-1;;;;;14437:19:0;;14429:68;;;;-1:-1:-1;;;14429:68:0;;5241:2:1;14429:68:0;;;5223:21:1;5280:2;5260:18;;;5253:30;5319:34;5299:18;;;5292:62;-1:-1:-1;;;5370:18:1;;;5363:34;5414:19;;14429:68:0;5039:400:1;14429:68:0;-1:-1:-1;;;;;14516:21:0;;14508:68;;;;-1:-1:-1;;;14508:68:0;;3255:2:1;14508:68:0;;;3237:21:1;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:1;;;3377:32;3426:19;;14508:68:0;3053:398:1;14508:68:0;-1:-1:-1;;;;;14589:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14641:32;;5996:25:1;;;14641:32:0;;5969:18:1;14641:32:0;;;;;;;14301:380;;;:::o;11520:733::-;-1:-1:-1;;;;;11660:20:0;;11652:70;;;;-1:-1:-1;;;11652:70:0;;4835:2:1;11652:70:0;;;4817:21:1;4874:2;4854:18;;;4847:30;4913:34;4893:18;;;4886:62;-1:-1:-1;;;4964:18:1;;;4957:35;5009:19;;11652:70:0;4633:401:1;11652:70:0;-1:-1:-1;;;;;11741:23:0;;11733:71;;;;-1:-1:-1;;;11733:71:0;;2444:2:1;11733:71:0;;;2426:21:1;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:1;;;2566:33;2616:19;;11733:71:0;2242:399:1;11733:71:0;-1:-1:-1;;;;;11901:17:0;;11877:21;11901:17;;;:9;:17;;;;;;11937:23;;;;11929:74;;;;-1:-1:-1;;;11929:74:0;;3658:2:1;11929:74:0;;;3640:21:1;3697:2;3677:18;;;3670:30;3736:34;3716:18;;;3709:62;-1:-1:-1;;;3787:18:1;;;3780:36;3833:19;;11929:74:0;3456:402:1;11929:74:0;-1:-1:-1;;;;;12039:17:0;;;;;;;:9;:17;;;;;;12059:22;;;12039:42;;12103:20;;;;;;;;:30;;12075:6;;12039:17;12103:30;;12075:6;;12103:30;:::i;:::-;;;;;;;;12168:9;-1:-1:-1;;;;;12151:35:0;12160:6;-1:-1:-1;;;;;12151:35:0;;12179:6;12151:35;;;;5996:25:1;;5984:2;5969:18;;5850:177;12151:35:0;;;;;;;;11641:612;11520:733;;;:::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5257:128;5194:191;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:1;2200:15;-1:-1:-1;;2196:29:1;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:1:o;6221:225::-;6261:3;6292:1;6288:6;6285:1;6282:13;6279:136;;;6337:10;6332:3;6328:20;6325:1;6318:31;6372:4;6369:1;6362:15;6400:4;6397:1;6390:15;6279:136;-1:-1:-1;6431:9:1;;6221:225::o;6451:380::-;6530:1;6526:12;;;;6573;;;6594:61;;6648:4;6640:6;6636:17;6626:27;;6594:61;6701:2;6693:6;6690:14;6670:18;6667:38;6664:161;;;6747:10;6742:3;6738:20;6735:1;6728:31;6782:4;6779:1;6772:15;6810:4;6807:1;6800:15;6664:161;;6451:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "550000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24642",
								"balanceOf(address)": "2626",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26910",
								"increaseAllowance(address,uint256)": "27001",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51203",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28397"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5257,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb14375c821ca9a00e5edd091154a564ea1c66d31db2d46f93ada210ecfcf87464736f6c63430008070033",
									".code": [
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1448,
											"end": 1635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5850,
											"end": 6027,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6174,
											"end": 6210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6032,
											"end": 6216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1240,
											"end": 1443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4106,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4272,
											"end": 4628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5839,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5820,
											"end": 5839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5444,
											"end": 5845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4272,
											"end": 4628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2646,
											"end": 3048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5017,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5039,
											"end": 5439,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3053,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4633,
											"end": 5034,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2242,
											"end": 2641,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3456,
											"end": 3858,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 6027,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6332,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6362,
											"end": 6377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6742,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6738,
											"end": 6758,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6772,
											"end": 6787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "ERC20.sol:ERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 229,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 239,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 241,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MGC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":16174:16265  constructor() ERC20(\"MGC\", \"MGC\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d4743)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d4743)\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"ERC20.sol\":3822:3834  _msgSender() */\n  tag_7\n    /* \"ERC20.sol\":3822:3832  _msgSender */\n  shl(0x20, tag_8)\n    /* \"ERC20.sol\":3822:3834  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"ERC20.sol\":3803:3821  _transferOwnership */\n  tag_9\n    /* \"ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"ERC20.sol\":6061:6074  _name = name_ */\n  dup2\n  mload\n  tag_11\n  swap1\n    /* \"ERC20.sol\":6061:6066  _name */\n  0x04\n  swap1\n    /* \"ERC20.sol\":6061:6074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"ERC20.sol\":6085:6102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_13\n  swap1\n    /* \"ERC20.sol\":6085:6092  _symbol */\n  0x05\n  swap1\n    /* \"ERC20.sol\":6085:6102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20.sol\":16219:16257  _mint(msg.sender, 10500000 * 10 ** 18) */\n  tag_15\n    /* \"ERC20.sol\":16225:16235  msg.sender */\n  caller\n    /* \"ERC20.sol\":16237:16256  10500000 * 10 ** 18 */\n  0x08af7623fb67bf1a800000\n    /* \"ERC20.sol\":16219:16224  _mint */\n  shl(0x20, tag_16)\n    /* \"ERC20.sol\":16219:16257  _mint(msg.sender, 10500000 * 10 ** 18) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  jump(tag_46)\n    /* \"ERC20.sol\":199:297  function _msgSender() internal view virtual returns (address) {\r... */\ntag_8:\n    /* \"ERC20.sol\":279:289  msg.sender */\n  caller\n  swap1\n    /* \"ERC20.sol\":199:297  function _msgSender() internal view virtual returns (address) {\r... */\n  jump\t// out\n    /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"ERC20.sol\":5268:5284  address oldOwner */\n  0x00\n    /* \"ERC20.sol\":5287:5293  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":5304:5321  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"ERC20.sol\":5287:5293  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"ERC20.sol\":5268:5284  address oldOwner */\n  swap1\n    /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"ERC20.sol\":5257:5385  {\r... */\n  pop\n    /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":12540:12939  function _mint(address account, uint256 amount) internal virtual {\r... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":12624:12645  account != address(0) */\n  dup3\n  and\n    /* \"ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"ERC20.sol\":12772:12778  amount */\n  dup1\n    /* \"ERC20.sol\":12756:12768  _totalSupply */\n  0x03\n  0x00\n    /* \"ERC20.sol\":12756:12778  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":12789:12807  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"ERC20.sol\":12789:12798  _balances */\n  0x01\n    /* \"ERC20.sol\":12789:12807  _balances[account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"ERC20.sol\":12789:12817  _balances[account] += amount */\n  dup1\n  sload\n    /* \"ERC20.sol\":12811:12817  amount */\n  dup4\n  swap3\n    /* \"ERC20.sol\":12789:12807  _balances[account] */\n  swap1\n    /* \"ERC20.sol\":12789:12817  _balances[account] += amount */\n  tag_28\n  swap1\n    /* \"ERC20.sol\":12811:12817  amount */\n  dup5\n  swap1\n    /* \"ERC20.sol\":12789:12817  _balances[account] += amount */\n  tag_27\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"ERC20.sol\":12850:12851  0 */\n  0x00\n  swap1\n    /* \"ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":12540:12939  function _mint(address account, uint256 amount) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\ntag_12:\n  dup3\n  dup1\n  sload\n  tag_35\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_38\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_41)\ntag_38:\n  dup3\n  0x1f\n  lt\n  tag_39\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_41)\ntag_39:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_41\n  jumpi\n  swap2\n  dup3\n  add\ntag_40:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_41\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_40)\ntag_41:\n  pop\n  tag_42\n  swap3\n  swap2\n  pop\n  tag_43\n  jump\t// in\ntag_42:\n  pop\n  swap1\n  jump\t// out\ntag_43:\ntag_44:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_42\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_44)\n    /* \"#utility.yul\":556:781   */\ntag_27:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:750   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":672:682   */\n  0x4e487b71\n    /* \"#utility.yul\":667:670   */\n  0xe0\n    /* \"#utility.yul\":663:683   */\n  shl\n    /* \"#utility.yul\":660:661   */\n  0x00\n    /* \"#utility.yul\":653:684   */\n  mstore\n    /* \"#utility.yul\":707:711   */\n  0x11\n    /* \"#utility.yul\":704:705   */\n  0x04\n    /* \"#utility.yul\":697:712   */\n  mstore\n    /* \"#utility.yul\":735:739   */\n  0x24\n    /* \"#utility.yul\":732:733   */\n  0x00\n    /* \"#utility.yul\":725:740   */\n  revert\n    /* \"#utility.yul\":614:750   */\ntag_50:\n  pop\n    /* \"#utility.yul\":766:775   */\n  add\n  swap1\n    /* \"#utility.yul\":556:781   */\n  jump\t// out\n    /* \"#utility.yul\":786:1166   */\ntag_36:\n    /* \"#utility.yul\":865:866   */\n  0x01\n    /* \"#utility.yul\":861:873   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":908:920   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":929:990   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":983:987   */\n  0x7f\n    /* \"#utility.yul\":975:981   */\n  dup3\n    /* \"#utility.yul\":971:988   */\n  and\n    /* \"#utility.yul\":961:988   */\n  swap2\n  pop\n    /* \"#utility.yul\":929:990   */\ntag_52:\n    /* \"#utility.yul\":1036:1038   */\n  0x20\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1025:1039   */\n  lt\n    /* \"#utility.yul\":1005:1023   */\n  dup2\n    /* \"#utility.yul\":1002:1040   */\n  eq\n    /* \"#utility.yul\":999:1160   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1082:1092   */\n  0x4e487b71\n    /* \"#utility.yul\":1077:1080   */\n  0xe0\n    /* \"#utility.yul\":1073:1093   */\n  shl\n    /* \"#utility.yul\":1070:1071   */\n  0x00\n    /* \"#utility.yul\":1063:1094   */\n  mstore\n    /* \"#utility.yul\":1117:1121   */\n  0x22\n    /* \"#utility.yul\":1114:1115   */\n  0x04\n    /* \"#utility.yul\":1107:1122   */\n  mstore\n    /* \"#utility.yul\":1145:1149   */\n  0x24\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1135:1150   */\n  revert\n    /* \"#utility.yul\":999:1160   */\ntag_53:\n  pop\n    /* \"#utility.yul\":786:1166   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_46:\n    /* \"ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1613:1627   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1606:1628   */\n      iszero\n        /* \"#utility.yul\":1588:1629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_22\n        /* \"#utility.yul\":1448:1635   */\n      jump\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20.sol\":7388:7400  _totalSupply */\n      sload(0x03)\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":5996:6021   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x20\n        /* \"#utility.yul\":5969:5987   */\n      add\n        /* \"ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_22\n        /* \"#utility.yul\":5850:6027   */\n      jump\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20.sol\":7225:7227  18 */\n      0x12\n        /* \"#utility.yul\":6174:6210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6162:6164   */\n      0x20\n        /* \"#utility.yul\":6147:6165   */\n      add\n        /* \"ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_22\n        /* \"#utility.yul\":6032:6216   */\n      jump\n        /* \"ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      and\n        /* \"ERC20.sol\":7545:7552  uint256 */\n      0x00\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":7572:7581  _balances */\n      0x01\n        /* \"ERC20.sol\":7572:7590  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3997:4003  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1386:1437   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x20\n        /* \"#utility.yul\":1359:1377   */\n      add\n        /* \"ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      tag_22\n        /* \"#utility.yul\":1240:1443   */\n      jump\n        /* \"ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_20\n      tag_59\n      jump\t// in\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_14:\n      tag_24\n      tag_66\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_15:\n      tag_30\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":8138:8145  uint256 */\n      0x00\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":8165:8176  _allowances */\n      0x02\n        /* \"ERC20.sol\":8165:8183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":8165:8192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_16:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_21:\n        /* \"ERC20.sol\":6234:6247  string memory */\n      0x60\n        /* \"ERC20.sol\":6267:6272  _name */\n      0x04\n        /* \"ERC20.sol\":6260:6272  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_27:\n        /* \"ERC20.sol\":8430:8434  bool */\n      0x00\n        /* \"ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      tag_85\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":8470:8477  spender */\n      dup5\n        /* \"ERC20.sol\":8479:8485  amount */\n      dup5\n        /* \"ERC20.sol\":8447:8455  _approve */\n      tag_88\n        /* \"ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"ERC20.sol\":8504:8508  true */\n      0x01\n        /* \"ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_37:\n        /* \"ERC20.sol\":9138:9142  bool */\n      0x00\n        /* \"ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      tag_91\n        /* \"ERC20.sol\":9165:9171  sender */\n      dup5\n        /* \"ERC20.sol\":9173:9182  recipient */\n      dup5\n        /* \"ERC20.sol\":9184:9190  amount */\n      dup5\n        /* \"ERC20.sol\":9155:9164  _transfer */\n      tag_92\n        /* \"ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      dup5\n      and\n        /* \"ERC20.sol\":9204:9228  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":9231:9242  _allowances */\n      0x02\n        /* \"ERC20.sol\":9231:9250  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9231:9264  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":9283:9309  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4065:4067   */\n      0x20\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4047:4068   */\n      mstore\n        /* \"#utility.yul\":4104:4106   */\n      0x28\n        /* \"#utility.yul\":4084:4102   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4077:4107   */\n      mstore\n        /* \"#utility.yul\":4143:4177   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4123:4141   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4116:4178   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4194:4212   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4187:4225   */\n      mstore\n        /* \"#utility.yul\":4242:4261   */\n      0x84\n      add\n        /* \"ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_97\n        /* \"ERC20.sol\":9399:9405  sender */\n      dup6\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9440:9446  amount */\n      dup6\n        /* \"ERC20.sol\":9421:9437  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":9421:9446  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":9390:9398  _approve */\n      tag_88\n        /* \"ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"ERC20.sol\":9478:9482  true */\n      0x01\n      swap5\n        /* \"ERC20.sol\":8998:9490  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":9987:9991  bool */\n      0x00\n        /* \"ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":10036:10047  _allowances */\n      0x02\n        /* \"ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10036:10070  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":9987:9991  bool */\n      swap1\n      swap2\n        /* \"ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_85\n      swap2\n        /* \"ERC20.sol\":10027:10034  spender */\n      dup6\n      swap1\n        /* \"ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_104\n      swap1\n        /* \"ERC20.sol\":10073:10083  addedValue */\n      dup7\n      swap1\n        /* \"ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":10004:10012  _approve */\n      tag_88\n        /* \"ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_53:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4456:4477   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4493:4511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4486:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4586   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4532:4550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4525:4587   */\n      mstore\n        /* \"#utility.yul\":4604:4622   */\n      0x64\n      add\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4272:4628   */\n      jump\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_110:\n        /* \"ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      tag_114\n        /* \"ERC20.sol\":4667:4668  0 */\n      0x00\n        /* \"ERC20.sol\":4640:4658  _transferOwnership */\n      tag_115\n        /* \"ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_59:\n        /* \"ERC20.sol\":6455:6468  string memory */\n      0x60\n        /* \"ERC20.sol\":6488:6495  _symbol */\n      0x05\n        /* \"ERC20.sol\":6481:6495  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_63:\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":10710:10714  bool */\n      0x00\n        /* \"ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":10754:10765  _allowances */\n      0x02\n        /* \"ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10754:10788  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20.sol\":10807:10842  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5646:5648   */\n      0x20\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5628:5649   */\n      mstore\n        /* \"#utility.yul\":5685:5687   */\n      0x25\n        /* \"#utility.yul\":5665:5683   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5658:5688   */\n      mstore\n        /* \"#utility.yul\":5724:5758   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5704:5722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5697:5759   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5775:5793   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5768:5803   */\n      mstore\n        /* \"#utility.yul\":5820:5839   */\n      0x84\n      add\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_95\n        /* \"#utility.yul\":5444:5845   */\n      jump\n        /* \"ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_125:\n        /* \"ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_128\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":10943:10950  spender */\n      dup6\n        /* \"ERC20.sol\":10971:10986  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":10952:10968  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":10952:10986  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":10920:10928  _approve */\n      tag_88\n        /* \"ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"ERC20.sol\":11018:11022  true */\n      0x01\n      swap4\n        /* \"ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_67:\n        /* \"ERC20.sol\":7897:7901  bool */\n      0x00\n        /* \"ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      tag_85\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":7938:7947  recipient */\n      dup5\n        /* \"ERC20.sol\":7949:7955  amount */\n      dup5\n        /* \"ERC20.sol\":7914:7923  _transfer */\n      tag_92\n        /* \"ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_76:\n        /* \"ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4474:4476   */\n      0x20\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4456:4477   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4493:4511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4486:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4586   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4532:4550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4525:4587   */\n      mstore\n        /* \"#utility.yul\":4604:4622   */\n      0x64\n      add\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4272:4628   */\n      jump\n        /* \"ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4922:4944  newOwner != address(0) */\n      dup2\n      and\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2830:2851   */\n      mstore\n        /* \"#utility.yul\":2887:2889   */\n      0x26\n        /* \"#utility.yul\":2867:2885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2860:2890   */\n      mstore\n        /* \"#utility.yul\":2926:2960   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2906:2924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2899:2961   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2977:2995   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2970:3006   */\n      mstore\n        /* \"#utility.yul\":3023:3042   */\n      0x84\n      add\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2646:3048   */\n      jump\n        /* \"ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_140:\n        /* \"ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      tag_143\n        /* \"ERC20.sol\":5017:5025  newOwner */\n      dup2\n        /* \"ERC20.sol\":4998:5016  _transferOwnership */\n      tag_115\n        /* \"ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":14301:14681  function _approve(\r... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14437:14456  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5223:5244   */\n      mstore\n        /* \"#utility.yul\":5280:5282   */\n      0x24\n        /* \"#utility.yul\":5260:5278   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5253:5283   */\n      mstore\n        /* \"#utility.yul\":5319:5353   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5299:5317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5292:5354   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5370:5388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5363:5397   */\n      mstore\n        /* \"#utility.yul\":5414:5433   */\n      0x84\n      add\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5039:5439   */\n      jump\n        /* \"ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14516:14537  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3258   */\n      mstore\n        /* \"#utility.yul\":3294:3296   */\n      0x22\n        /* \"#utility.yul\":3274:3292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3267:3297   */\n      mstore\n        /* \"#utility.yul\":3333:3367   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3313:3331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3306:3368   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3384:3402   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3377:3409   */\n      mstore\n        /* \"#utility.yul\":3426:3445   */\n      0x84\n      add\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":3053:3451   */\n      jump\n        /* \"ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":14589:14607  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":14589:14600  _allowances */\n      0x02\n        /* \"ERC20.sol\":14589:14607  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":14589:14616  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":14589:14625  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5996:6021   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5969:5987   */\n      add\n        /* \"ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":14301:14681  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11520:12253  function _transfer(\r... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11660:11680  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4835:4837   */\n      0x20\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4817:4838   */\n      mstore\n        /* \"#utility.yul\":4874:4876   */\n      0x25\n        /* \"#utility.yul\":4854:4872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4847:4877   */\n      mstore\n        /* \"#utility.yul\":4913:4947   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4893:4911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4886:4948   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4964:4982   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4957:4992   */\n      mstore\n        /* \"#utility.yul\":5009:5028   */\n      0x84\n      add\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4633:5034   */\n      jump\n        /* \"ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11741:11764  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2444:2446   */\n      0x20\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2426:2447   */\n      mstore\n        /* \"#utility.yul\":2483:2485   */\n      0x23\n        /* \"#utility.yul\":2463:2481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2456:2486   */\n      mstore\n        /* \"#utility.yul\":2522:2556   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2502:2520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2495:2557   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2573:2591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2566:2599   */\n      mstore\n        /* \"#utility.yul\":2616:2635   */\n      0x84\n      add\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2242:2641   */\n      jump\n        /* \"ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      dup4\n      and\n        /* \"ERC20.sol\":11877:11898  uint256 senderBalance */\n      0x00\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":11901:11910  _balances */\n      0x01\n        /* \"ERC20.sol\":11901:11918  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":11937:11960  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3640:3661   */\n      mstore\n        /* \"#utility.yul\":3697:3699   */\n      0x26\n        /* \"#utility.yul\":3677:3695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3670:3700   */\n      mstore\n        /* \"#utility.yul\":3736:3770   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3716:3734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3709:3771   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3787:3805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3780:3816   */\n      mstore\n        /* \"#utility.yul\":3833:3852   */\n      0x84\n      add\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":3456:3858   */\n      jump\n        /* \"ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":12039:12048  _balances */\n      0x01\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":12059:12081  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20.sol\":12039:12081  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20.sol\":12103:12123  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"ERC20.sol\":12075:12081  amount */\n      dup5\n      swap3\n        /* \"ERC20.sol\":12039:12056  _balances[sender] */\n      swap1\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_165\n      swap1\n        /* \"ERC20.sol\":12075:12081  amount */\n      dup5\n      swap1\n        /* \"ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_105\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":12168:12177  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n        /* \"ERC20.sol\":12160:12166  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":12179:12185  amount */\n      dup5\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_166\n      swap2\n        /* \"#utility.yul\":5996:6021   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x20\n        /* \"#utility.yul\":5969:5987   */\n      add\n      swap1\n        /* \"#utility.yul\":5850:6027   */\n      jump\n        /* \"ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":11641:12253  {\r... */\n      pop\n        /* \"ERC20.sol\":11520:12253  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_115:\n        /* \"ERC20.sol\":5268:5284  address oldOwner */\n      0x00\n        /* \"ERC20.sol\":5287:5293  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5304:5321  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ERC20.sol\":5287:5293  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"ERC20.sol\":5268:5284  address oldOwner */\n      swap1\n        /* \"ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ERC20.sol\":5257:5385  {\r... */\n      pop\n        /* \"ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_173:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_175:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_49:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_177:\n        /* \"#utility.yul\":343:372   */\n      tag_178\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_173\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_71:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_180:\n        /* \"#utility.yul\":551:580   */\n      tag_181\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_173\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_182\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_173\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_36:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_184:\n        /* \"#utility.yul\":833:862   */\n      tag_185\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_173\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_186\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_26:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_188:\n        /* \"#utility.yul\":1149:1178   */\n      tag_189\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1640:2237   */\n    tag_23:\n        /* \"#utility.yul\":1752:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1783   */\n      0x20\n        /* \"#utility.yul\":1810:1812   */\n      dup1\n        /* \"#utility.yul\":1799:1808   */\n      dup4\n        /* \"#utility.yul\":1792:1813   */\n      mstore\n        /* \"#utility.yul\":1842:1848   */\n      dup4\n        /* \"#utility.yul\":1836:1849   */\n      mload\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1880:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1878   */\n      dup6\n        /* \"#utility.yul\":1865:1883   */\n      add\n        /* \"#utility.yul\":1858:1892   */\n      mstore\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1920:2060   */\n    tag_193:\n        /* \"#utility.yul\":1934:1940   */\n      dup2\n        /* \"#utility.yul\":1931:1932   */\n      dup2\n        /* \"#utility.yul\":1928:1941   */\n      lt\n        /* \"#utility.yul\":1920:2060   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2029:2043   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2025:2048   */\n      dup4\n      add\n        /* \"#utility.yul\":2019:2049   */\n      mload\n        /* \"#utility.yul\":1995:2012   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2014:2016   */\n      0x40\n        /* \"#utility.yul\":1991:2017   */\n      add\n        /* \"#utility.yul\":1984:2050   */\n      mstore\n        /* \"#utility.yul\":1949:1959   */\n      dup3\n      add\n        /* \"#utility.yul\":1920:2060   */\n      jump(tag_193)\n    tag_195:\n        /* \"#utility.yul\":2078:2084   */\n      dup2\n        /* \"#utility.yul\":2075:2076   */\n      dup2\n        /* \"#utility.yul\":2072:2085   */\n      gt\n        /* \"#utility.yul\":2069:2160   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2134:2140   */\n      dup4\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2115:2146   */\n      add\n        /* \"#utility.yul\":2108:2150   */\n      mstore\n        /* \"#utility.yul\":2069:2160   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2221:2223   */\n      0x1f\n        /* \"#utility.yul\":2200:2215   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2196:2225   */\n      and\n        /* \"#utility.yul\":2181:2226   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2228:2230   */\n      0x40\n        /* \"#utility.yul\":2177:2231   */\n      add\n      swap4\n        /* \"#utility.yul\":1640:2237   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6446   */\n    tag_105:\n        /* \"#utility.yul\":6261:6264   */\n      0x00\n        /* \"#utility.yul\":6292:6293   */\n      dup3\n        /* \"#utility.yul\":6288:6294   */\n      not\n        /* \"#utility.yul\":6285:6286   */\n      dup3\n        /* \"#utility.yul\":6282:6295   */\n      gt\n        /* \"#utility.yul\":6279:6415   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6337:6347   */\n      0x4e487b71\n        /* \"#utility.yul\":6332:6335   */\n      0xe0\n        /* \"#utility.yul\":6328:6348   */\n      shl\n        /* \"#utility.yul\":6325:6326   */\n      0x00\n        /* \"#utility.yul\":6318:6349   */\n      mstore\n        /* \"#utility.yul\":6372:6376   */\n      0x11\n        /* \"#utility.yul\":6369:6370   */\n      0x04\n        /* \"#utility.yul\":6362:6377   */\n      mstore\n        /* \"#utility.yul\":6400:6404   */\n      0x24\n        /* \"#utility.yul\":6397:6398   */\n      0x00\n        /* \"#utility.yul\":6390:6405   */\n      revert\n        /* \"#utility.yul\":6279:6415   */\n    tag_209:\n      pop\n        /* \"#utility.yul\":6431:6440   */\n      add\n      swap1\n        /* \"#utility.yul\":6221:6446   */\n      jump\t// out\n        /* \"#utility.yul\":6451:6831   */\n    tag_79:\n        /* \"#utility.yul\":6530:6531   */\n      0x01\n        /* \"#utility.yul\":6526:6538   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6573:6585   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6594:6655   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6648:6652   */\n      0x7f\n        /* \"#utility.yul\":6640:6646   */\n      dup3\n        /* \"#utility.yul\":6636:6653   */\n      and\n        /* \"#utility.yul\":6626:6653   */\n      swap2\n      pop\n        /* \"#utility.yul\":6594:6655   */\n    tag_211:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      eq\n        /* \"#utility.yul\":6664:6825   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6747:6757   */\n      0x4e487b71\n        /* \"#utility.yul\":6742:6745   */\n      0xe0\n        /* \"#utility.yul\":6738:6758   */\n      shl\n        /* \"#utility.yul\":6735:6736   */\n      0x00\n        /* \"#utility.yul\":6728:6759   */\n      mstore\n        /* \"#utility.yul\":6782:6786   */\n      0x22\n        /* \"#utility.yul\":6779:6780   */\n      0x04\n        /* \"#utility.yul\":6772:6787   */\n      mstore\n        /* \"#utility.yul\":6810:6814   */\n      0x24\n        /* \"#utility.yul\":6807:6808   */\n      0x00\n        /* \"#utility.yul\":6800:6815   */\n      revert\n        /* \"#utility.yul\":6664:6825   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":6451:6831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122040e6748fde92f3a0b8d96984a9aaa2a0ef85fceefcc1328f1aaef71ee23205de64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_136": {
									"entryPoint": null,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_779": {
									"entryPoint": null,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_747": {
									"entryPoint": null,
									"id": 747,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_619": {
									"entryPoint": 265,
									"id": 619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 181,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_216": {
									"entryPoint": 185,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1168:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:1",
														"type": ""
													}
												],
												"src": "374:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "639:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "667:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "672:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "663:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "663:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "653:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "653:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "653:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "697:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "697:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "697:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "735:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "725:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "725:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "725:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:1"
															},
															"nodeType": "YulIf",
															"src": "614:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "759:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "770:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "773:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "759:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:1",
														"type": ""
													}
												],
												"src": "556:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "841:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "851:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "868:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "912:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "886:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "959:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "961:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "975:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "971:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "939:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:26:1"
															},
															"nodeType": "YulIf",
															"src": "929:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1049:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1077:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1082:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1073:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1073:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1063:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1117:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1005:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1025:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1002:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:38:1"
															},
															"nodeType": "YulIf",
															"src": "999:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "821:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "830:6:1",
														"type": ""
													}
												],
												"src": "786:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051806040016040528060038152602001624d474360e81b815250604051806040016040528060038152602001624d474360e81b815250620000646200005e620000b560201b60201c565b620000b9565b815162000079906004906020850190620001f1565b5080516200008f906005906020840190620001f1565b505050620000af336a08af7623fb67bf1a8000006200010960201b60201c565b620002fb565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216620001645760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806003600082825462000178919062000297565b90915550506001600160a01b03821660009081526001602052604081208054839290620001a790849062000297565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001ff90620002be565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b60008219821115620002b957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002d357607f821691505b60208210811415620002f557634e487b7160e01b600052602260045260246000fd5b50919050565b610abe806200030b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109d2565b60405180910390f35b61012061011b3660046109a8565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096c565b6102e7565b60405160128152602001610104565b6101206101723660046109a8565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a8565b610447565b6101206101ee3660046109a8565b6104e0565b610134610201366004610939565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a4d565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a27565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a4d565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b60006020828403121561092957600080fd5b610932826108fb565b9392505050565b6000806040838503121561094c57600080fd5b610955836108fb565b9150610963602084016108fb565b90509250929050565b60008060006060848603121561098157600080fd5b61098a846108fb565b9250610998602085016108fb565b9150604084013590509250925092565b600080604083850312156109bb57600080fd5b6109c4836108fb565b946020939093013593505050565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a6157607f821691505b60208210811415610a8257634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122040e6748fde92f3a0b8d96984a9aaa2a0ef85fceefcc1328f1aaef71ee23205de64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D4743 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D4743 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH3 0x64 PUSH3 0x5E PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x79 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1F1 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x8F SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1F1 JUMP JUMPDEST POP POP POP PUSH3 0xAF CALLER PUSH11 0x8AF7623FB67BF1A800000 PUSH3 0x109 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2FB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x178 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1A7 SWAP1 DUP5 SWAP1 PUSH3 0x297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1FF SWAP1 PUSH3 0x2BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x223 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x26E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x23E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x26E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x26E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x26E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x251 JUMP JUMPDEST POP PUSH3 0x27C SWAP3 SWAP2 POP PUSH3 0x280 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x27C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x281 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2D3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABE DUP1 PUSH3 0x30B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x932 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x955 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x963 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98A DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x998 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C4 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xE6 PUSH21 0x8FDE92F3A0B8D96984A9AAA2A0EF85FCEEFCC1328F BYTE 0xAE 0xF7 0x1E 0xE2 ORIGIN SDIV 0xDE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16145:123:0:-:0;;;16174:91;;;;;;;;;;5994:116;;;;;;;;;;;;;-1:-1:-1;;;5994:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;5994:116:0;;;3803:32;3822:12;:10;;;:12;;:::i;:::-;3803:18;:32::i;:::-;6061:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6085:17:0;;;;:7;;:17;;;;;:::i;:::-;;5994:116;;16219:38:::1;16225:10;16237:19;16219:5;;;:38;;:::i;:::-;16145:123:::0;;199:98;279:10;;199:98::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5257:128;5194:191;:::o;12540:399::-;-1:-1:-1;;;;;12624:21:0;;12616:65;;;;-1:-1:-1;;;12616:65:0;;216:2:1;12616:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;12616:65:0;;;;;;;;12772:6;12756:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12789:18:0;;;;;;:9;:18;;;;;:28;;12811:6;;12789:18;:28;;12811:6;;12789:28;:::i;:::-;;;;-1:-1:-1;;12833:37:0;;520:25:1;;;-1:-1:-1;;;;;12833:37:0;;;12850:1;;12833:37;;508:2:1;493:18;12833:37:0;;;;;;;12540:399;;:::o;16145:123::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16145:123:0;;;-1:-1:-1;16145:123:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:225:1;596:3;627:1;623:6;620:1;617:13;614:136;;;672:10;667:3;663:20;660:1;653:31;707:4;704:1;697:15;735:4;732:1;725:15;614:136;-1:-1:-1;766:9:1;;556:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;16145:123:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_736": {
									"entryPoint": 1464,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_747": {
									"entryPoint": null,
									"id": 747,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_216": {
									"entryPoint": 2219,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_563": {
									"entryPoint": 1756,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_372": {
									"entryPoint": 721,
									"id": 372,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_288": {
									"entryPoint": null,
									"id": 288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_486": {
									"entryPoint": 1095,
									"id": 486,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_447": {
									"entryPoint": 918,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_268": {
									"entryPoint": 575,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_173": {
									"entryPoint": 978,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_278": {
									"entryPoint": 1080,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 743,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_196": {
									"entryPoint": 1261,
									"id": 196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_333": {
									"entryPoint": 1248,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6833:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1351:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1424:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1429:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1420:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1433:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1416:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1240:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1620:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1613:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1606:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1534:4:1",
														"type": ""
													}
												],
												"src": "1448:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1781:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1775:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1810:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1826:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1901:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1910:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1905:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1999:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2010:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1995:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1995:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2014:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1991:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1991:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2033:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2041:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2029:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2029:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2045:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2025:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2025:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2019:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2019:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1942:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1944:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1953:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1956:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1944:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1924:3:1",
																"statements": []
															},
															"src": "1920:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2123:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2134:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2119:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2143:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2115:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2115:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2108:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2108:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:1"
															},
															"nodeType": "YulIf",
															"src": "2069:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2169:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2204:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2212:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2200:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2200:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2221:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2217:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1730:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1640:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2522:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2593:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2407:4:1",
														"type": ""
													}
												],
												"src": "2242:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2926:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2997:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2797:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:1",
														"type": ""
													}
												],
												"src": "2646:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3333:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3404:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3418:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3418:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3218:4:1",
														"type": ""
													}
												],
												"src": "3053:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3736:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3807:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3825:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3621:4:1",
														"type": ""
													}
												],
												"src": "3456:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4084:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4143:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4257:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4014:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4028:4:1",
														"type": ""
													}
												],
												"src": "3863:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4463:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4493:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4486:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4547:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4552:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4596:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4604:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4596:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4423:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4437:4:1",
														"type": ""
													}
												],
												"src": "4272:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4807:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4835:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4817:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4869:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4854:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4874:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4847:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4913:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4886:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4979:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4984:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4957:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5001:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5001:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4784:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4798:4:1",
														"type": ""
													}
												],
												"src": "4633:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5223:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5260:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5280:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5253:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5319:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5385:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5390:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5190:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5204:4:1",
														"type": ""
													}
												],
												"src": "5039:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5618:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5704:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5724:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5697:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5795:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5812:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5835:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5812:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5609:4:1",
														"type": ""
													}
												],
												"src": "5444:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5951:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5961:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5973:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5984:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5969:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5961:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6003:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5996:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5931:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5942:4:1",
														"type": ""
													}
												],
												"src": "5850:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6139:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6204:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6174:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6174:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6098:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6120:4:1",
														"type": ""
													}
												],
												"src": "6032:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6269:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6304:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6325:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6332:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6337:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6328:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6328:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6318:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6318:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6369:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6372:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6362:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6362:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6397:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6400:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6390:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6390:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6390:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6285:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6292:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6288:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6282:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6282:13:1"
															},
															"nodeType": "YulIf",
															"src": "6279:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6424:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6435:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6438:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6252:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6255:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6261:3:1",
														"type": ""
													}
												],
												"src": "6221:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6506:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6516:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6533:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6547:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6577:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6583:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6551:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6624:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6626:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6640:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6648:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6636:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6636:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6626:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6604:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:26:1"
															},
															"nodeType": "YulIf",
															"src": "6594:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6714:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6735:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6742:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6747:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6738:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6738:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6728:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6728:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6779:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6782:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6772:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6772:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6810:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6800:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6800:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:38:1"
															},
															"nodeType": "YulIf",
															"src": "6664:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6486:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6495:6:1",
														"type": ""
													}
												],
												"src": "6451:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109d2565b60405180910390f35b61012061011b3660046109a8565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096c565b6102e7565b60405160128152602001610104565b6101206101723660046109a8565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a8565b610447565b6101206101ee3660046109a8565b6104e0565b610134610201366004610939565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a4d565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a27565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a4d565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b60006020828403121561092957600080fd5b610932826108fb565b9392505050565b6000806040838503121561094c57600080fd5b610955836108fb565b9150610963602084016108fb565b90509250929050565b60008060006060848603121561098157600080fd5b61098a846108fb565b9250610998602085016108fb565b9150604084013590509250925092565b600080604083850312156109bb57600080fd5b6109c4836108fb565b946020939093013593505050565b600060208083528351808285015260005b818110156109ff578581018301518582016040015282016109e3565b81811115610a11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610a6157607f821691505b60208210811415610a8257634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122040e6748fde92f3a0b8d96984a9aaa2a0ef85fceefcc1328f1aaef71ee23205de64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA4D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x932 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x955 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x963 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98A DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x998 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C4 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA48 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xE6 PUSH21 0x8FDE92F3A0B8D96984A9AAA2A0EF85FCEEFCC1328F BYTE 0xAE 0xF7 0x1E 0xE2 ORIGIN SDIV 0xDE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16145:123:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8347:169;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:1;;1606:22;1588:41;;1576:2;1561:18;8347:169:0;1448:187:1;7300:108:0;7388:12;;7300:108;;;5996:25:1;;;5984:2;5969:18;7300:108:0;5850:177:1;8998:492:0;;;;;;:::i;:::-;;:::i;7142:93::-;;;7225:2;6174:36:1;;6162:2;6147:18;7142:93:0;6032:184:1;9899:215:0;;;;;;:::i;:::-;;:::i;7471:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7572:18:0;7545:7;7572:18;;;:9;:18;;;;;;;7471:127;4575:103;;;:::i;:::-;;3924:87;3970:7;3997:6;3924:87;;-1:-1:-1;;;;;3997:6:0;;;1386:51:1;;1374:2;1359:18;3924:87:0;1240:203:1;6399:104:0;;;:::i;10617:413::-;;;;;;:::i;:::-;;:::i;7811:175::-;;;;;;:::i;:::-;;:::i;8049:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8165:18:0;;;8138:7;8165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8049:151;4833:201;;;;;;:::i;:::-;;:::i;6180:100::-;6234:13;6267:5;6260:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;:::o;8347:169::-;8430:4;8447:39;279:10;8470:7;8479:6;8447:8;:39::i;:::-;-1:-1:-1;8504:4:0;8347:169;;;;:::o;8998:492::-;9138:4;9155:36;9165:6;9173:9;9184:6;9155:9;:36::i;:::-;-1:-1:-1;;;;;9231:19:0;;9204:24;9231:19;;;:11;:19;;;;;;;;279:10;9231:33;;;;;;;;9283:26;;;;9275:79;;;;-1:-1:-1;;;9275:79:0;;4065:2:1;9275:79:0;;;4047:21:1;4104:2;4084:18;;;4077:30;4143:34;4123:18;;;4116:62;-1:-1:-1;;;4194:18:1;;;4187:38;4242:19;;9275:79:0;;;;;;;;;9390:57;9399:6;279:10;9440:6;9421:16;:25;9390:8;:57::i;:::-;-1:-1:-1;9478:4:0;;8998:492;-1:-1:-1;;;;8998:492:0:o;9899:215::-;279:10;9987:4;10036:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10036:34:0;;;;;;;;;;9987:4;;10004:80;;10027:7;;10036:47;;10073:10;;10036:47;:::i;:::-;10004:8;:80::i;4575:103::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4474:2:1;4136:68:0;;;4456:21:1;;;4493:18;;;4486:30;4552:34;4532:18;;;4525:62;4604:18;;4136:68:0;4272:356:1;4136:68:0;4640:30:::1;4667:1;4640:18;:30::i;:::-;4575:103::o:0;6399:104::-;6455:13;6488:7;6481:14;;;;;:::i;10617:413::-;279:10;10710:4;10754:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10754:34:0;;;;;;;;;;10807:35;;;;10799:85;;;;-1:-1:-1;;;10799:85:0;;5646:2:1;10799:85:0;;;5628:21:1;5685:2;5665:18;;;5658:30;5724:34;5704:18;;;5697:62;-1:-1:-1;;;5775:18:1;;;5768:35;5820:19;;10799:85:0;5444:401:1;10799:85:0;10920:67;279:10;10943:7;10971:15;10952:16;:34;10920:8;:67::i;:::-;-1:-1:-1;11018:4:0;;10617:413;-1:-1:-1;;;10617:413:0:o;7811:175::-;7897:4;7914:42;279:10;7938:9;7949:6;7914:9;:42::i;4833:201::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4474:2:1;4136:68:0;;;4456:21:1;;;4493:18;;;4486:30;4552:34;4532:18;;;4525:62;4604:18;;4136:68:0;4272:356:1;4136:68:0;-1:-1:-1;;;;;4922:22:0;::::1;4914:73;;;::::0;-1:-1:-1;;;4914:73:0;;2848:2:1;4914:73:0::1;::::0;::::1;2830:21:1::0;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:1;;;2970:36;3023:19;;4914:73:0::1;2646:402:1::0;4914:73:0::1;4998:28;5017:8;4998:18;:28::i;:::-;4833:201:::0;:::o;14301:380::-;-1:-1:-1;;;;;14437:19:0;;14429:68;;;;-1:-1:-1;;;14429:68:0;;5241:2:1;14429:68:0;;;5223:21:1;5280:2;5260:18;;;5253:30;5319:34;5299:18;;;5292:62;-1:-1:-1;;;5370:18:1;;;5363:34;5414:19;;14429:68:0;5039:400:1;14429:68:0;-1:-1:-1;;;;;14516:21:0;;14508:68;;;;-1:-1:-1;;;14508:68:0;;3255:2:1;14508:68:0;;;3237:21:1;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:1;;;3377:32;3426:19;;14508:68:0;3053:398:1;14508:68:0;-1:-1:-1;;;;;14589:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14641:32;;5996:25:1;;;14641:32:0;;5969:18:1;14641:32:0;;;;;;;14301:380;;;:::o;11520:733::-;-1:-1:-1;;;;;11660:20:0;;11652:70;;;;-1:-1:-1;;;11652:70:0;;4835:2:1;11652:70:0;;;4817:21:1;4874:2;4854:18;;;4847:30;4913:34;4893:18;;;4886:62;-1:-1:-1;;;4964:18:1;;;4957:35;5009:19;;11652:70:0;4633:401:1;11652:70:0;-1:-1:-1;;;;;11741:23:0;;11733:71;;;;-1:-1:-1;;;11733:71:0;;2444:2:1;11733:71:0;;;2426:21:1;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:1;;;2566:33;2616:19;;11733:71:0;2242:399:1;11733:71:0;-1:-1:-1;;;;;11901:17:0;;11877:21;11901:17;;;:9;:17;;;;;;11937:23;;;;11929:74;;;;-1:-1:-1;;;11929:74:0;;3658:2:1;11929:74:0;;;3640:21:1;3697:2;3677:18;;;3670:30;3736:34;3716:18;;;3709:62;-1:-1:-1;;;3787:18:1;;;3780:36;3833:19;;11929:74:0;3456:402:1;11929:74:0;-1:-1:-1;;;;;12039:17:0;;;;;;;:9;:17;;;;;;12059:22;;;12039:42;;12103:20;;;;;;;;:30;;12075:6;;12039:17;12103:30;;12075:6;;12103:30;:::i;:::-;;;;;;;;12168:9;-1:-1:-1;;;;;12151:35:0;12160:6;-1:-1:-1;;;;;12151:35:0;;12179:6;12151:35;;;;5996:25:1;;5984:2;5969:18;;5850:177;12151:35:0;;;;;;;;11641:612;11520:733;;;:::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5257:128;5194:191;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:1;2200:15;-1:-1:-1;;2196:29:1;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:1:o;6221:225::-;6261:3;6292:1;6288:6;6285:1;6282:13;6279:136;;;6337:10;6332:3;6328:20;6325:1;6318:31;6372:4;6369:1;6362:15;6400:4;6397:1;6390:15;6279:136;-1:-1:-1;6431:9:1;;6221:225::o;6451:380::-;6530:1;6526:12;;;;6573;;;6594:61;;6648:4;6640:6;6636:17;6626:27;;6594:61;6701:2;6693:6;6690:14;6670:18;6667:38;6664:161;;;6747:10;6742:3;6738:20;6735:1;6728:31;6782:4;6779:1;6772:15;6810:4;6807:1;6800:15;6664:161;;6451:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "550000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24642",
								"balanceOf(address)": "2626",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26910",
								"increaseAllowance(address,uint256)": "27001",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28137",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51203",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28397"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D4743"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D4743"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 16225,
									"end": 16235,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16256,
									"name": "PUSH",
									"source": 0,
									"value": "8AF7623FB67BF1A800000"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 297,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 199,
									"end": 297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 279,
									"end": 289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 297,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5257,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12624,
									"end": 12645,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12624,
									"end": 12645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12772,
									"end": 12778,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12768,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12756,
									"end": 12768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12850,
									"end": 12851,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12850,
									"end": 12851,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 781,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 556,
									"end": 781,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 750,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 614,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 614,
									"end": 750,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 667,
									"end": 670,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 663,
									"end": 683,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 660,
									"end": 661,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 684,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 707,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 735,
									"end": 739,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 732,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 740,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 750,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 614,
									"end": 750,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 766,
									"end": 775,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 766,
									"end": 775,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 781,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 865,
									"end": 866,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 861,
									"end": 873,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 908,
									"end": 920,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 983,
									"end": 987,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 971,
									"end": 988,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 961,
									"end": 988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 929,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1040,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1092,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1077,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1073,
									"end": 1093,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1063,
									"end": 1094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1117,
									"end": 1121,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1114,
									"end": 1115,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1107,
									"end": 1122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1160,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 786,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040e6748fde92f3a0b8d96984a9aaa2a0ef85fceefcc1328f1aaef71ee23205de64736f6c63430008070033",
									".code": [
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1448,
											"end": 1635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5850,
											"end": 6027,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6174,
											"end": 6210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6032,
											"end": 6216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1240,
											"end": 1443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4106,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4242,
											"end": 4261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4272,
											"end": 4628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5839,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5820,
											"end": 5839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5444,
											"end": 5845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4604,
											"end": 4622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4272,
											"end": 4628,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2646,
											"end": 3048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5017,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5223,
											"end": 5244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5039,
											"end": 5439,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3053,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4817,
											"end": 4838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4633,
											"end": 5034,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2242,
											"end": 2641,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3456,
											"end": 3858,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 6027,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6332,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6362,
											"end": 6377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6279,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6640,
											"end": 6646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6594,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6742,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6738,
											"end": 6758,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6772,
											"end": 6787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"MGC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "ERC20.sol:MGC",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 229,
								"contract": "ERC20.sol:MGC",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "ERC20.sol:MGC",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "ERC20.sol:MGC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 239,
								"contract": "ERC20.sol:MGC",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 241,
								"contract": "ERC20.sol:MGC",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "ERC20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							20
						],
						"ERC20": [
							759
						],
						"IERC20": [
							95
						],
						"IERC20Metadata": [
							116
						],
						"MGC": [
							780
						],
						"Ownable": [
							217
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "60:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "261:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "279:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "279:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "272:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:0"
									},
									"scope": 20,
									"src": "199:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "372:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "390:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "390:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "383:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "314:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "356:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:16:0"
									},
									"scope": 20,
									"src": "305:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "166:243:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "IERC20",
							"nameLocation": "425:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "439:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "522:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:9:0"
									},
									"scope": 95,
									"src": "513:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "576:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "665:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 95,
									"src": "656:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "732:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "962:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "979:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "971:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "998:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "990:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:35:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1024:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1024:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:6:0"
									},
									"scope": 95,
									"src": "953:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1038:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1323:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1356:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1388:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:0"
									},
									"scope": 95,
									"src": "1314:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1405:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2075:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:0"
									},
									"scope": 95,
									"src": "2066:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2148:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2467:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2498:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2523:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2515:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:85:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2583:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:6:0"
									},
									"scope": 95,
									"src": "2458:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2597:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 85,
									"name": "Transfer",
									"nameLocation": "2772:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2781:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2819:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2803:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2831:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2823:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:57:0"
									},
									"src": "2766:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2846:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 94,
									"name": "Approval",
									"nameLocation": "3009:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3018:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3057:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3041:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:63:0"
									},
									"src": "3003:78:0"
								}
							],
							"scope": 781,
							"src": "415:2669:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 96,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "3116:6:0"
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "3116:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116,
								95
							],
							"name": "IERC20Metadata",
							"nameLocation": "3098:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "3130:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3201:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3205:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3231:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3231:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:15:0"
									},
									"scope": 116,
									"src": "3192:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3254:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3327:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3333:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3359:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:15:0"
									},
									"scope": 116,
									"src": "3318:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3382:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3464:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3498:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 112,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:7:0"
									},
									"scope": 116,
									"src": "3455:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 781,
							"src": "3088:420:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "3541:7:0"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "3541:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217,
								20
							],
							"name": "Ownable",
							"nameLocation": "3530:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "3572:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "3556:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 119,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3556:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 126,
									"name": "OwnershipTransferred",
									"nameLocation": "3593:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "3630:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3614:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3645:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:57:0"
									},
									"src": "3587:84:0"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3792:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 130,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "3803:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3803:32:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3679:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:2:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:0"
									},
									"scope": 217,
									"src": "3778:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3979:32:0",
										"statements": [
											{
												"expression": {
													"id": 142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "3997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 141,
												"id": 143,
												"nodeType": "Return",
												"src": "3990:13:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3851:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "3933:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3938:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:9:0"
									},
									"scope": 217,
									"src": "3924:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4125:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 149,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "4144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4144:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 151,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "4155:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4155:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4144:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4169:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "4136:68:0"
											},
											{
												"id": 157,
												"nodeType": "PlaceholderStatement",
												"src": "4215:1:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "4019:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 159,
									"name": "onlyOwner",
									"nameLocation": "4113:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:2:0"
									},
									"src": "4104:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4629:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4659:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4659:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 165,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4640:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "4640:30:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4232:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 162,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 159,
												"src": "4619:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4619:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "4584:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:2:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4629:0:0"
									},
									"scope": 217,
									"src": "4575:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4903:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "4922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4934:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4934:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4922:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4914:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5017:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "4998:28:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4686:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 159,
												"src": "4893:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4893:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "4842:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4860:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:18:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4903:0:0"
									},
									"scope": 217,
									"src": "4833:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "5257:128:0",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "5276:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "5268:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 202,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5268:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"id": 204,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "5287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5268:25:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5304:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5313:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5304:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5304:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5358:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 212,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5368:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "5337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "EmitStatement",
												"src": "5332:45:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5042:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "5203:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5230:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5222:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:18:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:0:0"
									},
									"scope": 217,
									"src": "5194:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "3512:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 218,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "5410:7:0"
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "5410:7:0"
								},
								{
									"baseName": {
										"id": 220,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "5419:6:0"
									},
									"id": 221,
									"nodeType": "InheritanceSpecifier",
									"src": "5419:6:0"
								},
								{
									"baseName": {
										"id": 222,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "5427:14:0"
									},
									"id": 223,
									"nodeType": "InheritanceSpecifier",
									"src": "5427:14:0"
								},
								{
									"baseName": {
										"id": 224,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 217,
										"src": "5443:7:0"
									},
									"id": 225,
									"nodeType": "InheritanceSpecifier",
									"src": "5443:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								217,
								116,
								95,
								20
							],
							"name": "ERC20",
							"nameLocation": "5401:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 229,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 228,
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 227,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 235,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 234,
										"keyType": {
											"id": 230,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 233,
											"keyType": {
												"id": 231,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 232,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 237,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5603:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5587:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5587:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 239,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5639:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5624:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 238,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5624:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5666:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5651:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5651:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "6050:60:0",
										"statements": [
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 250,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "6069:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6061:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "6061:13:0"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "6085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "6095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6085:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6085:17:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "5682:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6020:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6006:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6027:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 245,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:44:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6050:0:0"
									},
									"scope": 759,
									"src": "5994:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										103
									],
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6249:31:0",
										"statements": [
											{
												"expression": {
													"id": 265,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "6267:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 264,
												"id": 266,
												"nodeType": "Return",
												"src": "6260:12:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "6118:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6189:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6216:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6193:2:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6234:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6233:15:0"
									},
									"scope": 759,
									"src": "6180:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										109
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "6470:33:0",
										"statements": [
											{
												"expression": {
													"id": 275,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "6481:14:0"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "6288:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6408:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6437:8:0"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6414:2:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6455:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:15:0"
									},
									"scope": 759,
									"src": "6399:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										115
									],
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "7207:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7225:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 284,
												"id": 286,
												"nodeType": "Return",
												"src": "7218:9:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6511:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7151:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7182:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7159:2:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7200:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 282,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7200:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:7:0"
									},
									"scope": 759,
									"src": "7142:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7370:38:0",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 237,
													"src": "7388:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "7381:19:0"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "7243:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7309:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7343:8:0"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7320:2:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7361:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7360:9:0"
									},
									"scope": 759,
									"src": "7300:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "7554:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "7572:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7572:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "7565:25:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "7416:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7480:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7527:8:0"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7489:17:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:9:0"
									},
									"scope": 759,
									"src": "7471:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "7903:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 324,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "7924:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7924:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "7938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "7949:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 323,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "7914:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7914:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7914:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7974:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 322,
												"id": 331,
												"nodeType": "Return",
												"src": "7967:11:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "7606:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7820:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7879:8:0"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7837:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7829:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7856:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7848:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7828:35:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7897:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7896:6:0"
									},
									"scope": 759,
									"src": "7811:175:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "8147:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 344,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "8165:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8165:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "8184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8165:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "8158:34:0"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "7994:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8058:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8120:8:0"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8076:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8067:32:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8137:9:0"
									},
									"scope": 759,
									"src": "8049:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "8436:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 363,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "8456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8456:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "8470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "8479:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8447:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "8447:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8504:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 361,
												"id": 370,
												"nodeType": "Return",
												"src": "8497:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "8208:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8356:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8412:8:0"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8389:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8381:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8363:33:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8430:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:6:0"
									},
									"scope": 759,
									"src": "8347:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "9144:346:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9165:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9173:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "9155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9155:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "9155:36:0"
											},
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9212:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "9204:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 393,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "9231:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 395,
														"indexExpression": {
															"id": 394,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9231:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 398,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 396,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "9251:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9251:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9231:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9204:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "9283:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 402,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "9303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9283:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9311:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9275:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "9275:79:0"
											},
											{
												"id": 416,
												"nodeType": "UncheckedBlock",
												"src": "9365:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 408,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "9399:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 409,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "9407:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9407:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 411,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "9421:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 412,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "9440:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9421:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 407,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "9390:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9390:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 415,
														"nodeType": "ExpressionStatement",
														"src": "9390:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 384,
												"id": 418,
												"nodeType": "Return",
												"src": "9471:11:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "8524:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9007:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9120:8:0"
									},
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9063:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9055:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9019:85:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9137:6:0"
									},
									"scope": 759,
									"src": "8998:492:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "9993:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 431,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "10013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10013:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "10027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 434,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "10036:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 437,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 435,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "10048:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10048:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10036:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 439,
																"indexExpression": {
																	"id": 438,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "10062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10036:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 440,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "10073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10036:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "10004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10004:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "10004:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10102:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 445,
												"nodeType": "Return",
												"src": "10095:11:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "9498:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "9908:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "9951:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9943:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9925:37:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9986:6:0"
									},
									"scope": 759,
									"src": "9899:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "10716:314:0",
										"statements": [
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10735:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "10727:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 459,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "10754:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 462,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 460,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "10766:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10766:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10754:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 464,
													"indexExpression": {
														"id": 463,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "10780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10754:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10727:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "10807:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 468,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "10827:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10807:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10844:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10799:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "10799:85:0"
											},
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "10895:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 474,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "10929:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10929:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 476,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "10943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 477,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "10952:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 478,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "10971:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10952:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 473,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "10920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10920:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 481,
														"nodeType": "ExpressionStatement",
														"src": "10920:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 456,
												"id": 484,
												"nodeType": "Return",
												"src": "11011:11:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "10122:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10626:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10669:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10661:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10643:42:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10709:6:0"
									},
									"scope": 759,
									"src": "10617:413:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11641:612:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "11660:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11678:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11670:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11670:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11670:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11660:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11682:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11652:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "11652:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "11741:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11762:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11754:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11754:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11741:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11766:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11733:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "11733:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "11838:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "11846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11857:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "11817:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11817:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "11817:47:0"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "11885:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11877:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"baseExpression": {
														"id": 524,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "11901:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 526,
													"indexExpression": {
														"id": 525,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "11911:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11901:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11877:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 529,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "11937:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "11954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11937:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11962:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11929:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "11929:74:0"
											},
											{
												"id": 543,
												"nodeType": "UncheckedBlock",
												"src": "12014:79:0",
												"statements": [
													{
														"expression": {
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 535,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "12039:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 537,
																"indexExpression": {
																	"id": 536,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "12049:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12039:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 538,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "12059:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 539,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "12075:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12059:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12039:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 542,
														"nodeType": "ExpressionStatement",
														"src": "12039:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 544,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "12103:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"id": 545,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12113:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12103:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 547,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "12127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12103:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "12103:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 551,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "12160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12168:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "12151:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12151:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "EmitStatement",
												"src": "12146:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "12219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12227:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "12199:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12199:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "12199:46:0"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "11038:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11529:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11582:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11610:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11602:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:85:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11641:0:0"
									},
									"scope": 759,
									"src": "11520:733:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "12605:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "12624:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12643:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12635:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12635:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12635:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12624:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12616:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "12616:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12723:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 582,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12715:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12715:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "12694:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12694:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "12694:49:0"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "12756:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12772:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12756:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "12756:22:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 594,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "12789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 596,
														"indexExpression": {
															"id": 595,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12789:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 597,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12811:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12789:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "12789:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12850:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12842:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12842:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12842:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "12833:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12833:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "EmitStatement",
												"src": "12828:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12903:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12903:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12903:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12924:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "12883:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12883:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "12883:48:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "12261:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12549:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12554:33:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12605:0:0"
									},
									"scope": 759,
									"src": "12540:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "13337:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "13356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13375:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13367:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13367:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13367:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13356:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13379:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13348:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "13348:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13458:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13458:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "13428:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13428:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "13428:49:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13498:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "13490:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"baseExpression": {
														"id": 648,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "13515:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 650,
													"indexExpression": {
														"id": 649,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "13525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13515:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13490:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "13552:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 654,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "13570:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13552:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13578:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13544:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "13544:71:0"
											},
											{
												"id": 667,
												"nodeType": "UncheckedBlock",
												"src": "13626:81:0",
												"statements": [
													{
														"expression": {
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 659,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "13651:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 661,
																"indexExpression": {
																	"id": 660,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "13661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13651:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 662,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "13672:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 663,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "13689:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13672:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13651:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 666,
														"nodeType": "ExpressionStatement",
														"src": "13651:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "13717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 669,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "13733:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13717:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "13717:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13775:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 674,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13775:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13775:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13787:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "13757:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13757:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "EmitStatement",
												"src": "13752:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13836:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13836:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13848:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "13807:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13807:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "13807:48:0"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "12947:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13281:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13295:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "13287:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13312:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "13304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13286:33:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13337:0:0"
									},
									"scope": 759,
									"src": "13272:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "14418:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "14437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14454:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14446:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14446:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14446:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14437:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14458:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14429:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "14429:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "14516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14527:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14527:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14527:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14516:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14539:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14508:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "14508:68:0"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 721,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "14589:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 724,
															"indexExpression": {
																"id": 722,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "14601:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14589:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 723,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "14608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14589:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 726,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "14619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14589:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "14589:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 730,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "14650:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "14657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "14666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "14641:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14641:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "14636:37:0"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "13871:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14310:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14337:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14329:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14387:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14379:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14318:82:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14418:0:0"
									},
									"scope": 759,
									"src": "14301:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "15404:2:0",
										"statements": []
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "14689:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15290:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15329:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15321:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15310:76:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15404:0:0"
									},
									"scope": 759,
									"src": "15281:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "16132:2:0",
										"statements": []
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "15414:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16019:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16049:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16080:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16072:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16038:76:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16132:0:0"
									},
									"scope": 759,
									"src": "16010:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "5392:10745:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 760,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 759,
										"src": "16161:5:0"
									},
									"id": 761,
									"nodeType": "InheritanceSpecifier",
									"src": "16161:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								759,
								217,
								116,
								95,
								20
							],
							"name": "MGC",
							"nameLocation": "16154:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "16208:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16225:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16225:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130353030303030",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16237:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10500000_by_1",
																	"typeString": "int_const 10500000"
																},
																"value": "10500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16248:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16254:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16248:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16237:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															}
														],
														"id": 768,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "16219:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16219:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "16219:38:0"
											}
										]
									},
									"id": 779,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d4743",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e9b997647deb48e12c5a1a3a95bca6be2b480cfa3b63567586e822a44d29171f",
														"typeString": "literal_string \"MGC\""
													},
													"value": "MGC"
												},
												{
													"hexValue": "4d4743",
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e9b997647deb48e12c5a1a3a95bca6be2b480cfa3b63567586e822a44d29171f",
														"typeString": "literal_string \"MGC\""
													},
													"value": "MGC"
												}
											],
											"id": 766,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 763,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "16188:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16188:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16185:2:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16208:0:0"
									},
									"scope": 780,
									"src": "16174:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 781,
							"src": "16145:123:0",
							"usedErrors": []
						}
					],
					"src": "60:16208:0"
				},
				"id": 0
			}
		}
	}
}
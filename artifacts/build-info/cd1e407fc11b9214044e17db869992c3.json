{
	"id": "cd1e407fc11b9214044e17db869992c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"msc_token/ERC20.sol": {
				"content": "// contracts/GLDToken.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// import \"./node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n\r\n\r\ncontract MGC is ERC20 {\r\n    constructor() ERC20(\"MGC\", \"MGC\") {\r\n        _mint(msg.sender, 10500000 * 10 ** 18);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"msc_token/ERC20.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"msc_token/ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n  caller\n    /* \"msc_token/ERC20.sol\":3803:3821  _transferOwnership */\n  tag_10\n    /* \"msc_token/ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"msc_token/ERC20.sol\":6061:6074  _name = name_ */\n  dup2\n  mload\n  tag_12\n  swap1\n    /* \"msc_token/ERC20.sol\":6061:6066  _name */\n  0x04\n  swap1\n    /* \"msc_token/ERC20.sol\":6061:6074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"msc_token/ERC20.sol\":6085:6102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"msc_token/ERC20.sol\":6085:6092  _symbol */\n  0x05\n  swap1\n    /* \"msc_token/ERC20.sol\":6085:6102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"msc_token/ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"msc_token/ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  jump(tag_29)\n    /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n  0x00\n    /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/ERC20.sol\":5304:5321  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n  swap1\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:923   */\ntag_30:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_32:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_38:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_39:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_42:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n    /* \"#utility.yul\":1027:1033   */\n  0x00\n    /* \"#utility.yul\":1035:1041   */\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_44:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_45:\n    /* \"#utility.yul\":1266:1327   */\n  tag_46\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_47:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_48\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_19:\n    /* \"#utility.yul\":1604:1605   */\n  0x01\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_50:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_51:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_35:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_29:\n    /* \"msc_token/ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/ERC20.sol\":5392:16137  contract ERC20 is Context, IERC20, IERC20Metadata, Ownable{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_22\n        /* \"#utility.yul\":1583:1675   */\n      jump\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"msc_token/ERC20.sol\":7388:7400  _totalSupply */\n      sload(0x03)\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":6042:6067   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6015:6033   */\n      add\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_22\n        /* \"#utility.yul\":5997:6073   */\n      jump\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"msc_token/ERC20.sol\":7225:7227  18 */\n      0x12\n        /* \"#utility.yul\":6220:6256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6208:6210   */\n      0x20\n        /* \"#utility.yul\":6193:6211   */\n      add\n        /* \"msc_token/ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_22\n        /* \"#utility.yul\":6175:6262   */\n      jump\n        /* \"msc_token/ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      and\n        /* \"msc_token/ERC20.sol\":7545:7552  uint256 */\n      0x00\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":7572:7581  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      tag_22\n        /* \"#utility.yul\":1381:1483   */\n      jump\n        /* \"msc_token/ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_20\n      tag_59\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_14:\n      tag_24\n      tag_66\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_15:\n      tag_30\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":8138:8145  uint256 */\n      0x00\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":8165:8176  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":8165:8192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_16:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_21:\n        /* \"msc_token/ERC20.sol\":6234:6247  string memory */\n      0x60\n        /* \"msc_token/ERC20.sol\":6267:6272  _name */\n      0x04\n        /* \"msc_token/ERC20.sol\":6260:6272  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_27:\n        /* \"msc_token/ERC20.sol\":8430:8434  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      tag_85\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":8470:8477  spender */\n      dup5\n        /* \"msc_token/ERC20.sol\":8479:8485  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":8447:8455  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"msc_token/ERC20.sol\":8504:8508  true */\n      0x01\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_37:\n        /* \"msc_token/ERC20.sol\":9138:9142  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      tag_91\n        /* \"msc_token/ERC20.sol\":9165:9171  sender */\n      dup5\n        /* \"msc_token/ERC20.sol\":9173:9182  recipient */\n      dup5\n        /* \"msc_token/ERC20.sol\":9184:9190  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":9155:9164  _transfer */\n      tag_92\n        /* \"msc_token/ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      dup5\n      and\n        /* \"msc_token/ERC20.sol\":9204:9228  uint256 currentAllowance */\n      0x00\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":9231:9242  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9231:9264  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":9283:9309  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4093:4114   */\n      mstore\n        /* \"#utility.yul\":4150:4152   */\n      0x28\n        /* \"#utility.yul\":4130:4148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4123:4153   */\n      mstore\n        /* \"#utility.yul\":4189:4223   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4169:4187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4162:4224   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4240:4258   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4233:4271   */\n      mstore\n        /* \"#utility.yul\":4288:4307   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"msc_token/ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_97\n        /* \"msc_token/ERC20.sol\":9399:9405  sender */\n      dup6\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9440:9446  amount */\n      dup6\n        /* \"msc_token/ERC20.sol\":9421:9437  currentAllowance */\n      dup5\n        /* \"msc_token/ERC20.sol\":9421:9446  currentAllowance - amount */\n      sub\n        /* \"msc_token/ERC20.sol\":9390:9398  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"msc_token/ERC20.sol\":9478:9482  true */\n      0x01\n      swap5\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9987:9991  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":10036:10047  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":10036:10070  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":9987:9991  bool */\n      swap1\n      swap2\n        /* \"msc_token/ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_85\n      swap2\n        /* \"msc_token/ERC20.sol\":10027:10034  spender */\n      dup6\n      swap1\n        /* \"msc_token/ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_104\n      swap1\n        /* \"msc_token/ERC20.sol\":10073:10083  addedValue */\n      dup7\n      swap1\n        /* \"msc_token/ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"msc_token/ERC20.sol\":10004:10012  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_53:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4520:4522   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4502:4523   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4539:4557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4532:4562   */\n      mstore\n        /* \"#utility.yul\":4598:4632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4578:4596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4571:4633   */\n      mstore\n        /* \"#utility.yul\":4650:4668   */\n      0x64\n      add\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4492:4674   */\n      jump\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_110:\n        /* \"msc_token/ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      tag_114\n        /* \"msc_token/ERC20.sol\":4667:4668  0 */\n      0x00\n        /* \"msc_token/ERC20.sol\":4640:4658  _transferOwnership */\n      tag_115\n        /* \"msc_token/ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_59:\n        /* \"msc_token/ERC20.sol\":6455:6468  string memory */\n      0x60\n        /* \"msc_token/ERC20.sol\":6488:6495  _symbol */\n      0x05\n        /* \"msc_token/ERC20.sol\":6481:6495  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_63:\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":10710:10714  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":10754:10765  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":10754:10788  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":10807:10842  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5692:5694   */\n      0x20\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5674:5695   */\n      mstore\n        /* \"#utility.yul\":5731:5733   */\n      0x25\n        /* \"#utility.yul\":5711:5729   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5704:5734   */\n      mstore\n        /* \"#utility.yul\":5770:5804   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5750:5768   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5743:5805   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5821:5839   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5814:5849   */\n      mstore\n        /* \"#utility.yul\":5866:5885   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_95\n        /* \"#utility.yul\":5664:5891   */\n      jump\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_125:\n        /* \"msc_token/ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_128\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":10943:10950  spender */\n      dup6\n        /* \"msc_token/ERC20.sol\":10971:10986  subtractedValue */\n      dup6\n        /* \"msc_token/ERC20.sol\":10952:10968  currentAllowance */\n      dup5\n        /* \"msc_token/ERC20.sol\":10952:10986  currentAllowance - subtractedValue */\n      sub\n        /* \"msc_token/ERC20.sol\":10920:10928  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"msc_token/ERC20.sol\":11018:11022  true */\n      0x01\n      swap4\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_67:\n        /* \"msc_token/ERC20.sol\":7897:7901  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      tag_85\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":7938:7947  recipient */\n      dup5\n        /* \"msc_token/ERC20.sol\":7949:7955  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":7914:7923  _transfer */\n      tag_92\n        /* \"msc_token/ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_76:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4520:4522   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4502:4523   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4539:4557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4532:4562   */\n      mstore\n        /* \"#utility.yul\":4598:4632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4578:4596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4571:4633   */\n      mstore\n        /* \"#utility.yul\":4650:4668   */\n      0x64\n      add\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4492:4674   */\n      jump\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":4922:4944  newOwner != address(0) */\n      dup2\n      and\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2876:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2935   */\n      0x26\n        /* \"#utility.yul\":2913:2931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2906:2936   */\n      mstore\n        /* \"#utility.yul\":2972:3006   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2952:2970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2945:3007   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3023:3041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3016:3052   */\n      mstore\n        /* \"#utility.yul\":3069:3088   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2866:3094   */\n      jump\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_140:\n        /* \"msc_token/ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      tag_143\n        /* \"msc_token/ERC20.sol\":5017:5025  newOwner */\n      dup2\n        /* \"msc_token/ERC20.sol\":4998:5016  _transferOwnership */\n      tag_115\n        /* \"msc_token/ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":14301:14681  function _approve(\r... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14437:14456  owner != address(0) */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5269:5290   */\n      mstore\n        /* \"#utility.yul\":5326:5328   */\n      0x24\n        /* \"#utility.yul\":5306:5324   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5299:5329   */\n      mstore\n        /* \"#utility.yul\":5365:5399   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5345:5363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5338:5400   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5416:5434   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5409:5443   */\n      mstore\n        /* \"#utility.yul\":5460:5479   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5259:5485   */\n      jump\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14516:14537  spender != address(0) */\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3283:3304   */\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x22\n        /* \"#utility.yul\":3320:3338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n        /* \"#utility.yul\":3379:3413   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3359:3377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3352:3414   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3430:3448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3423:3455   */\n      mstore\n        /* \"#utility.yul\":3472:3491   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":3273:3497   */\n      jump\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14589:14607  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":14589:14600  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":14589:14607  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":14589:14616  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/ERC20.sol\":14589:14625  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6042:6067   */\n      dup5\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6015:6033   */\n      add\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/ERC20.sol\":14301:14681  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":11520:12253  function _transfer(\r... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11660:11680  sender != address(0) */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4863:4884   */\n      mstore\n        /* \"#utility.yul\":4920:4922   */\n      0x25\n        /* \"#utility.yul\":4900:4918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4893:4923   */\n      mstore\n        /* \"#utility.yul\":4959:4993   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4939:4957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4932:4994   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5010:5028   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5003:5038   */\n      mstore\n        /* \"#utility.yul\":5055:5074   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4853:5080   */\n      jump\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11741:11764  recipient != address(0) */\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2493   */\n      mstore\n        /* \"#utility.yul\":2529:2531   */\n      0x23\n        /* \"#utility.yul\":2509:2527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2502:2532   */\n      mstore\n        /* \"#utility.yul\":2568:2602   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2548:2566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2541:2603   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2619:2637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2612:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2681   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2462:2687   */\n      jump\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":11877:11898  uint256 senderBalance */\n      0x00\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":11901:11910  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":11937:11960  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3686:3707   */\n      mstore\n        /* \"#utility.yul\":3743:3745   */\n      0x26\n        /* \"#utility.yul\":3723:3741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3716:3746   */\n      mstore\n        /* \"#utility.yul\":3782:3816   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3762:3780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3755:3817   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3833:3851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3826:3862   */\n      mstore\n        /* \"#utility.yul\":3879:3898   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":3676:3904   */\n      jump\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":12039:12048  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"msc_token/ERC20.sol\":12059:12081  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/ERC20.sol\":12039:12081  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/ERC20.sol\":12103:12123  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"msc_token/ERC20.sol\":12075:12081  amount */\n      dup5\n      swap3\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      swap1\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_165\n      swap1\n        /* \"msc_token/ERC20.sol\":12075:12081  amount */\n      dup5\n      swap1\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_105\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/ERC20.sol\":12168:12177  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n        /* \"msc_token/ERC20.sol\":12160:12166  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"msc_token/ERC20.sol\":12179:12185  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_166\n      swap2\n        /* \"#utility.yul\":6042:6067   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6015:6033   */\n      add\n      swap1\n        /* \"#utility.yul\":5997:6073   */\n      jump\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/ERC20.sol\":11520:12253  function _transfer(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_115:\n        /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n      0x00\n        /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":5304:5321  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n      swap1\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_173:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_175:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_49:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_177:\n        /* \"#utility.yul\":353:382   */\n      tag_178\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_173\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_71:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_180:\n        /* \"#utility.yul\":571:600   */\n      tag_181\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_173\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_182\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_173\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_36:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_184:\n        /* \"#utility.yul\":863:892   */\n      tag_185\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_173\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_186\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_26:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_188:\n        /* \"#utility.yul\":1189:1218   */\n      tag_189\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1680:2283   */\n    tag_23:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1839:1848   */\n      dup4\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1882:1888   */\n      dup4\n        /* \"#utility.yul\":1876:1889   */\n      mload\n        /* \"#utility.yul\":1925:1931   */\n      dup1\n        /* \"#utility.yul\":1920:1922   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup6\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1898:1932   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      dup3\n        /* \"#utility.yul\":1963:2103   */\n    tag_193:\n        /* \"#utility.yul\":1977:1983   */\n      dup2\n        /* \"#utility.yul\":1974:1975   */\n      dup2\n        /* \"#utility.yul\":1971:1984   */\n      lt\n        /* \"#utility.yul\":1963:2103   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2072:2086   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2068:2091   */\n      dup4\n      add\n        /* \"#utility.yul\":2062:2092   */\n      mload\n        /* \"#utility.yul\":2038:2055   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2034:2060   */\n      add\n        /* \"#utility.yul\":2027:2093   */\n      mstore\n        /* \"#utility.yul\":1992:2002   */\n      dup3\n      add\n        /* \"#utility.yul\":1963:2103   */\n      jump(tag_193)\n    tag_195:\n        /* \"#utility.yul\":2121:2127   */\n      dup2\n        /* \"#utility.yul\":2118:2119   */\n      dup2\n        /* \"#utility.yul\":2115:2128   */\n      gt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2191:2195   */\n      dup4\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2177:2183   */\n      dup4\n        /* \"#utility.yul\":2166:2175   */\n      dup8\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2158:2189   */\n      add\n        /* \"#utility.yul\":2151:2196   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2267:2269   */\n      0x1f\n        /* \"#utility.yul\":2246:2261   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2242:2271   */\n      and\n        /* \"#utility.yul\":2227:2272   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2223:2277   */\n      add\n      swap4\n        /* \"#utility.yul\":1801:2283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6267:6496   */\n    tag_105:\n        /* \"#utility.yul\":6307:6310   */\n      0x00\n        /* \"#utility.yul\":6338:6339   */\n      dup3\n        /* \"#utility.yul\":6334:6340   */\n      not\n        /* \"#utility.yul\":6331:6332   */\n      dup3\n        /* \"#utility.yul\":6328:6341   */\n      gt\n        /* \"#utility.yul\":6325:6327   */\n      iszero\n      tag_209\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6364:6397   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6420:6424   */\n      0x11\n        /* \"#utility.yul\":6417:6418   */\n      0x04\n        /* \"#utility.yul\":6410:6425   */\n      mstore\n        /* \"#utility.yul\":6450:6454   */\n      0x24\n        /* \"#utility.yul\":6371:6374   */\n      dup2\n        /* \"#utility.yul\":6438:6455   */\n      revert\n        /* \"#utility.yul\":6325:6327   */\n    tag_209:\n      pop\n        /* \"#utility.yul\":6481:6490   */\n      add\n      swap1\n        /* \"#utility.yul\":6315:6496   */\n      jump\t// out\n        /* \"#utility.yul\":6501:6881   */\n    tag_79:\n        /* \"#utility.yul\":6580:6581   */\n      0x01\n        /* \"#utility.yul\":6576:6588   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6623:6635   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6644:6646   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6698:6702   */\n      0x7f\n        /* \"#utility.yul\":6690:6696   */\n      dup3\n        /* \"#utility.yul\":6686:6703   */\n      and\n        /* \"#utility.yul\":6676:6703   */\n      swap2\n      pop\n        /* \"#utility.yul\":6644:6646   */\n    tag_211:\n        /* \"#utility.yul\":6751:6753   */\n      0x20\n        /* \"#utility.yul\":6743:6749   */\n      dup3\n        /* \"#utility.yul\":6740:6754   */\n      lt\n        /* \"#utility.yul\":6720:6738   */\n      dup2\n        /* \"#utility.yul\":6717:6755   */\n      eq\n        /* \"#utility.yul\":6714:6716   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6797:6807   */\n      0x4e487b71\n        /* \"#utility.yul\":6792:6795   */\n      0xe0\n        /* \"#utility.yul\":6788:6808   */\n      shl\n        /* \"#utility.yul\":6785:6786   */\n      0x00\n        /* \"#utility.yul\":6778:6809   */\n      mstore\n        /* \"#utility.yul\":6832:6836   */\n      0x22\n        /* \"#utility.yul\":6829:6830   */\n      0x04\n        /* \"#utility.yul\":6822:6837   */\n      mstore\n        /* \"#utility.yul\":6860:6864   */\n      0x24\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6850:6865   */\n      revert\n        /* \"#utility.yul\":6714:6716   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":6556:6881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d625cd5db2f0e39354fbf697d6ab1cf29e9dcea274ccc8bf532b45f409226ee664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:1"
															},
															"nodeType": "YulIf",
															"src": "229:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:1"
															},
															"nodeType": "YulIf",
															"src": "412:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:1"
															},
															"nodeType": "YulIf",
															"src": "574:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:1",
																"statements": []
															},
															"src": "667:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:1"
															},
															"nodeType": "YulIf",
															"src": "809:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:909:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:1"
															},
															"nodeType": "YulIf",
															"src": "1056:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:1"
															},
															"nodeType": "YulIf",
															"src": "1203:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:1"
															},
															"nodeType": "YulIf",
															"src": "1386:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:1",
														"type": ""
													}
												],
												"src": "928:592:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1607:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:1"
															},
															"nodeType": "YulIf",
															"src": "1668:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:1"
															},
															"nodeType": "YulIf",
															"src": "1738:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:1",
														"type": ""
													}
												],
												"src": "1525:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000d9c38038062000d9c83398101604081905262000034916200021c565b6200003f3362000073565b815162000054906004906020850190620000c3565b5080516200006a906005906020840190620000c3565b505050620002d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000d19062000283565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b600082601f8301126200017a578081fd5b81516001600160401b0380821115620001975762000197620002c0565b604051601f8301601f19908116603f01168101908282118183101715620001c257620001c2620002c0565b81604052838152602092508683858801011115620001de578485fd5b8491505b83821015620002015785820183015181830184015290820190620001e2565b838211156200021257848385830101525b9695505050505050565b600080604083850312156200022f578182fd5b82516001600160401b038082111562000246578384fd5b620002548683870162000169565b935060208501519150808211156200026a578283fd5b50620002798582860162000169565b9150509250929050565b600181811c908216806200029857607f821691505b60208210811415620002ba57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610ab680620002e66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109ce565b60405180910390f35b61012061011b3660046109a5565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096a565b6102e7565b60405160128152602001610104565b6101206101723660046109a5565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a5565b610447565b6101206101ee3660046109a5565b6104e0565b610134610201366004610938565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a45565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a45565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a21565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a45565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a21565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b600060208284031215610928578081fd5b610931826108fb565b9392505050565b6000806040838503121561094a578081fd5b610953836108fb565b9150610961602084016108fb565b90509250929050565b60008060006060848603121561097e578081fd5b610987846108fb565b9250610995602085016108fb565b9150604084013590509250925092565b600080604083850312156109b7578182fd5b6109c0836108fb565b946020939093013593505050565b6000602080835283518082850152825b818110156109fa578581018301518582016040015282016109de565b81811115610a0b5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610a5957607f821691505b60208210811415610a7a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220d625cd5db2f0e39354fbf697d6ab1cf29e9dcea274ccc8bf532b45f409226ee664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD9C CODESIZE SUB DUP1 PUSH3 0xD9C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x21C JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x73 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x54 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6A SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD1 SWAP1 PUSH3 0x283 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x140 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x140 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST POP PUSH3 0x14E SWAP3 SWAP2 POP PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x197 JUMPI PUSH3 0x197 PUSH3 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1C2 JUMPI PUSH3 0x1C2 PUSH3 0x2C0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1DE JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x201 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1E2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x212 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x246 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x254 DUP7 DUP4 DUP8 ADD PUSH3 0x169 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x26A JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x279 DUP6 DUP3 DUP7 ADD PUSH3 0x169 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAB6 DUP1 PUSH3 0x2E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x931 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x961 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x97E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x987 DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x995 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x9C0 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA0B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x25 0xCD 0x5D 0xB2 CREATE 0xE3 SWAP4 SLOAD 0xFB 0xF6 SWAP8 0xD6 0xAB SHR CALLCODE SWAP15 SWAP14 0xCE LOG2 PUSH21 0xCCC8BF532B45F409226EE664736F6C634300080400 CALLER ",
							"sourceMap": "5392:10745:0:-:0;;;5994:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3803:32;279:10;3803:18;:32::i;:::-;6061:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6085:17:0;;;;:7;;:17;;;;;:::i;:::-;;5994:116;;5392:10745;;5194:191;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5194:191;;:::o;5392:10745::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5392:10745:0;;;-1:-1:-1;5392:10745:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:1;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:1;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:1;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:1:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:1;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;5392:10745:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6883:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:2:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:1"
															},
															"nodeType": "YulIf",
															"src": "490:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"src": "393:270:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:1"
															},
															"nodeType": "YulIf",
															"src": "782:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													}
												],
												"src": "668:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:1"
															},
															"nodeType": "YulIf",
															"src": "1108:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													}
												],
												"src": "1011:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:1",
														"type": ""
													}
												],
												"src": "1280:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:1",
														"type": ""
													}
												],
												"src": "1488:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1821:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1815:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1862:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1882:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1950:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2042:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2053:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2038:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2034:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2076:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2084:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2072:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2072:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2088:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2068:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2068:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2062:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2062:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1974:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1985:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1987:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1996:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1992:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1987:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1967:3:1",
																"statements": []
															},
															"src": "1963:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2166:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2177:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2162:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2162:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2186:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2158:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2158:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2191:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2121:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:13:1"
															},
															"nodeType": "YulIf",
															"src": "2112:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2250:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2246:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2246:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2267:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2263:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2263:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2215:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1770:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:1",
														"type": ""
													}
												],
												"src": "1680:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2568:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2639:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2666:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2439:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:1",
														"type": ""
													}
												],
												"src": "2288:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2972:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2843:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:1",
														"type": ""
													}
												],
												"src": "2692:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3290:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3379:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3450:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3464:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3472:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3464:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3264:4:1",
														"type": ""
													}
												],
												"src": "3099:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3693:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3716:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3853:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3871:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3894:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3871:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3667:4:1",
														"type": ""
													}
												],
												"src": "3502:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4083:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4100:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4189:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4255:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4260:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4233:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4280:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4074:4:1",
														"type": ""
													}
												],
												"src": "3909:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4492:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4502:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4539:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4593:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4598:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4469:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4483:4:1",
														"type": ""
													}
												],
												"src": "4318:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4863:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4900:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4893:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4954:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4959:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4932:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5030:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5003:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5059:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5070:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5047:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4830:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4844:4:1",
														"type": ""
													}
												],
												"src": "4679:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5269:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5321:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5306:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5360:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5345:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5365:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5338:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5452:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5475:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5452:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5236:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5250:4:1",
														"type": ""
													}
												],
												"src": "5085:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5664:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5750:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5770:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5836:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5821:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5841:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5814:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5858:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5881:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5655:4:1",
														"type": ""
													}
												],
												"src": "5490:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5997:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6007:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6007:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6049:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6042:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5966:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5977:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5988:4:1",
														"type": ""
													}
												],
												"src": "5896:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6175:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6227:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6242:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6250:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6238:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6155:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6166:4:1",
														"type": ""
													}
												],
												"src": "6078:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6315:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6350:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "6371:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6380:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6385:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6376:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6376:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6364:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6417:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6420:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6410:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6410:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6410:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "6445:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6450:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6438:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6438:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6438:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6328:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:13:1"
															},
															"nodeType": "YulIf",
															"src": "6325:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6474:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6485:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6488:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6298:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6301:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6307:3:1",
														"type": ""
													}
												],
												"src": "6267:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6566:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6583:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6597:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6601:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6676:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6690:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6698:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6686:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6676:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6654:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:26:1"
															},
															"nodeType": "YulIf",
															"src": "6644:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6764:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6792:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6797:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6788:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6788:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6778:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6778:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6829:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6832:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6822:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6822:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6822:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6860:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6850:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:38:1"
															},
															"nodeType": "YulIf",
															"src": "6714:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6536:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6545:6:1",
														"type": ""
													}
												],
												"src": "6501:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109ce565b60405180910390f35b61012061011b3660046109a5565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096a565b6102e7565b60405160128152602001610104565b6101206101723660046109a5565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a5565b610447565b6101206101ee3660046109a5565b6104e0565b610134610201366004610938565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a45565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a45565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a21565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a45565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a21565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b600060208284031215610928578081fd5b610931826108fb565b9392505050565b6000806040838503121561094a578081fd5b610953836108fb565b9150610961602084016108fb565b90509250929050565b60008060006060848603121561097e578081fd5b610987846108fb565b9250610995602085016108fb565b9150604084013590509250925092565b600080604083850312156109b7578182fd5b6109c0836108fb565b946020939093013593505050565b6000602080835283518082850152825b818110156109fa578581018301518582016040015282016109de565b81811115610a0b5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610a5957607f821691505b60208210811415610a7a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220d625cd5db2f0e39354fbf697d6ab1cf29e9dcea274ccc8bf532b45f409226ee664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x931 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x961 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x97E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x987 DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x995 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x9C0 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA0B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x25 0xCD 0x5D 0xB2 CREATE 0xE3 SWAP4 SLOAD 0xFB 0xF6 SWAP8 0xD6 0xAB SHR CALLCODE SWAP15 SWAP14 0xCE LOG2 PUSH21 0xCCC8BF532B45F409226EE664736F6C634300080400 CALLER ",
							"sourceMap": "5392:10745:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8347:169;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:1;;1646:22;1628:41;;1616:2;1601:18;8347:169:0;1583:92:1;7300:108:0;7388:12;;7300:108;;;6042:25:1;;;6030:2;6015:18;7300:108:0;5997:76:1;8998:492:0;;;;;;:::i;:::-;;:::i;7142:93::-;;;7225:2;6220:36:1;;6208:2;6193:18;7142:93:0;6175:87:1;9899:215:0;;;;;;:::i;:::-;;:::i;7471:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7572:18:0;7545:7;7572:18;;;:9;:18;;;;;;;7471:127;4575:103;;;:::i;:::-;;3924:87;3970:7;3997:6;3924:87;;-1:-1:-1;;;;;3997:6:0;;;1426:51:1;;1414:2;1399:18;3924:87:0;1381:102:1;6399:104:0;;;:::i;10617:413::-;;;;;;:::i;:::-;;:::i;7811:175::-;;;;;;:::i;:::-;;:::i;8049:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8165:18:0;;;8138:7;8165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8049:151;4833:201;;;;;;:::i;:::-;;:::i;6180:100::-;6234:13;6267:5;6260:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;:::o;8347:169::-;8430:4;8447:39;279:10;8470:7;8479:6;8447:8;:39::i;:::-;-1:-1:-1;8504:4:0;8347:169;;;;:::o;8998:492::-;9138:4;9155:36;9165:6;9173:9;9184:6;9155:9;:36::i;:::-;-1:-1:-1;;;;;9231:19:0;;9204:24;9231:19;;;:11;:19;;;;;;;;279:10;9231:33;;;;;;;;9283:26;;;;9275:79;;;;-1:-1:-1;;;9275:79:0;;4111:2:1;9275:79:0;;;4093:21:1;4150:2;4130:18;;;4123:30;4189:34;4169:18;;;4162:62;-1:-1:-1;;;4240:18:1;;;4233:38;4288:19;;9275:79:0;;;;;;;;;9390:57;9399:6;279:10;9440:6;9421:16;:25;9390:8;:57::i;:::-;-1:-1:-1;9478:4:0;;8998:492;-1:-1:-1;;;;8998:492:0:o;9899:215::-;279:10;9987:4;10036:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10036:34:0;;;;;;;;;;9987:4;;10004:80;;10027:7;;10036:47;;10073:10;;10036:47;:::i;:::-;10004:8;:80::i;4575:103::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4520:2:1;4136:68:0;;;4502:21:1;;;4539:18;;;4532:30;4598:34;4578:18;;;4571:62;4650:18;;4136:68:0;4492:182:1;4136:68:0;4640:30:::1;4667:1;4640:18;:30::i;:::-;4575:103::o:0;6399:104::-;6455:13;6488:7;6481:14;;;;;:::i;10617:413::-;279:10;10710:4;10754:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10754:34:0;;;;;;;;;;10807:35;;;;10799:85;;;;-1:-1:-1;;;10799:85:0;;5692:2:1;10799:85:0;;;5674:21:1;5731:2;5711:18;;;5704:30;5770:34;5750:18;;;5743:62;-1:-1:-1;;;5821:18:1;;;5814:35;5866:19;;10799:85:0;5664:227:1;10799:85:0;10920:67;279:10;10943:7;10971:15;10952:16;:34;10920:8;:67::i;:::-;-1:-1:-1;11018:4:0;;10617:413;-1:-1:-1;;;10617:413:0:o;7811:175::-;7897:4;7914:42;279:10;7938:9;7949:6;7914:9;:42::i;4833:201::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4520:2:1;4136:68:0;;;4502:21:1;;;4539:18;;;4532:30;4598:34;4578:18;;;4571:62;4650:18;;4136:68:0;4492:182:1;4136:68:0;-1:-1:-1;;;;;4922:22:0;::::1;4914:73;;;::::0;-1:-1:-1;;;4914:73:0;;2894:2:1;4914:73:0::1;::::0;::::1;2876:21:1::0;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:1;;;3016:36;3069:19;;4914:73:0::1;2866:228:1::0;4914:73:0::1;4998:28;5017:8;4998:18;:28::i;:::-;4833:201:::0;:::o;14301:380::-;-1:-1:-1;;;;;14437:19:0;;14429:68;;;;-1:-1:-1;;;14429:68:0;;5287:2:1;14429:68:0;;;5269:21:1;5326:2;5306:18;;;5299:30;5365:34;5345:18;;;5338:62;-1:-1:-1;;;5416:18:1;;;5409:34;5460:19;;14429:68:0;5259:226:1;14429:68:0;-1:-1:-1;;;;;14516:21:0;;14508:68;;;;-1:-1:-1;;;14508:68:0;;3301:2:1;14508:68:0;;;3283:21:1;3340:2;3320:18;;;3313:30;3379:34;3359:18;;;3352:62;-1:-1:-1;;;3430:18:1;;;3423:32;3472:19;;14508:68:0;3273:224:1;14508:68:0;-1:-1:-1;;;;;14589:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14641:32;;6042:25:1;;;14641:32:0;;6015:18:1;14641:32:0;;;;;;;14301:380;;;:::o;11520:733::-;-1:-1:-1;;;;;11660:20:0;;11652:70;;;;-1:-1:-1;;;11652:70:0;;4881:2:1;11652:70:0;;;4863:21:1;4920:2;4900:18;;;4893:30;4959:34;4939:18;;;4932:62;-1:-1:-1;;;5010:18:1;;;5003:35;5055:19;;11652:70:0;4853:227:1;11652:70:0;-1:-1:-1;;;;;11741:23:0;;11733:71;;;;-1:-1:-1;;;11733:71:0;;2490:2:1;11733:71:0;;;2472:21:1;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:1;;;2612:33;2662:19;;11733:71:0;2462:225:1;11733:71:0;-1:-1:-1;;;;;11901:17:0;;11877:21;11901:17;;;:9;:17;;;;;;11937:23;;;;11929:74;;;;-1:-1:-1;;;11929:74:0;;3704:2:1;11929:74:0;;;3686:21:1;3743:2;3723:18;;;3716:30;3782:34;3762:18;;;3755:62;-1:-1:-1;;;3833:18:1;;;3826:36;3879:19;;11929:74:0;3676:228:1;11929:74:0;-1:-1:-1;;;;;12039:17:0;;;;;;;:9;:17;;;;;;12059:22;;;12039:42;;12103:20;;;;;;;;:30;;12075:6;;12039:17;12103:30;;12075:6;;12103:30;:::i;:::-;;;;;;;;12168:9;-1:-1:-1;;;;;12151:35:0;12160:6;-1:-1:-1;;;;;12151:35:0;;12179:6;12151:35;;;;6042:25:1;;6030:2;6015:18;;5997:76;12151:35:0;;;;;;;;11520:733;;;;:::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5194:191;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:1:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:1:o;1680:603::-;1792:4;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:1;2246:15;-1:-1:-1;;2242:29:1;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:1:o;6267:229::-;6307:3;6338:1;6334:6;6331:1;6328:13;6325:2;;;-1:-1:-1;;;6364:33:1;;6420:4;6417:1;6410:15;6450:4;6371:3;6438:17;6325:2;-1:-1:-1;6481:9:1;;6315:181::o;6501:380::-;6580:1;6576:12;;;;6623;;;6644:2;;6698:4;6690:6;6686:17;6676:27;;6644:2;6751;6743:6;6740:14;6720:18;6717:38;6714:2;;;6797:10;6792:3;6788:20;6785:1;6778:31;6832:4;6829:1;6822:15;6860:4;6857:1;6850:15;6714:2;;6556:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "548400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22542",
								"balanceOf(address)": "1326",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "23510",
								"increaseAllowance(address,uint256)": "23601",
								"name()": "infinite",
								"owner()": "1046",
								"renounceOwnership()": "23437",
								"symbol()": "infinite",
								"totalSupply()": "1049",
								"transfer(address,uint256)": "44403",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23697"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5392,
									"end": 16137,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d625cd5db2f0e39354fbf697d6ab1cf29e9dcea274ccc8bf532b45f409226ee664736f6c63430008040033",
									".code": [
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 16137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1583,
											"end": 1675,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5997,
											"end": 6073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6220,
											"end": 6256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6175,
											"end": 6262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1381,
											"end": 1483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4492,
											"end": 4674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5664,
											"end": 5891,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4492,
											"end": 4674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2866,
											"end": 3094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5017,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5269,
											"end": 5290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5399,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5259,
											"end": 5485,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3273,
											"end": 3497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4863,
											"end": 4884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5055,
											"end": 5074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4853,
											"end": 5080,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2602,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2462,
											"end": 2687,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3879,
											"end": 3898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3676,
											"end": 3904,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2128,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6267,
											"end": 6496,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6267,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6341,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6424,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6410,
											"end": 6425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6371,
											"end": 6374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6501,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6501,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6698,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6690,
											"end": 6696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6792,
											"end": 6795,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 229,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 239,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 241,
								"contract": "msc_token/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MGC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/ERC20.sol\":16174:16265  constructor() ERC20(\"MGC\", \"MGC\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"msc_token/ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d4743)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d4743)\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"msc_token/ERC20.sol\":3822:3834  _msgSender() */\n  tag_7\n    /* \"msc_token/ERC20.sol\":3822:3832  _msgSender */\n  shl(0x20, tag_8)\n    /* \"msc_token/ERC20.sol\":3822:3834  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"msc_token/ERC20.sol\":3803:3821  _transferOwnership */\n  tag_9\n    /* \"msc_token/ERC20.sol\":3803:3835  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"msc_token/ERC20.sol\":6061:6074  _name = name_ */\n  dup2\n  mload\n  tag_11\n  swap1\n    /* \"msc_token/ERC20.sol\":6061:6066  _name */\n  0x04\n  swap1\n    /* \"msc_token/ERC20.sol\":6061:6074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"msc_token/ERC20.sol\":6085:6102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_13\n  swap1\n    /* \"msc_token/ERC20.sol\":6085:6092  _symbol */\n  0x05\n  swap1\n    /* \"msc_token/ERC20.sol\":6085:6102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"msc_token/ERC20.sol\":5994:6110  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"msc_token/ERC20.sol\":16219:16257  _mint(msg.sender, 10500000 * 10 ** 18) */\n  tag_15\n    /* \"msc_token/ERC20.sol\":16225:16235  msg.sender */\n  caller\n    /* \"msc_token/ERC20.sol\":16237:16256  10500000 * 10 ** 18 */\n  0x08af7623fb67bf1a800000\n    /* \"msc_token/ERC20.sol\":16219:16224  _mint */\n  shl(0x20, tag_16)\n    /* \"msc_token/ERC20.sol\":16219:16257  _mint(msg.sender, 10500000 * 10 ** 18) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"msc_token/ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  jump(tag_46)\n    /* \"msc_token/ERC20.sol\":199:297  function _msgSender() internal view virtual returns (address) {\r... */\ntag_8:\n    /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n  caller\n  swap1\n    /* \"msc_token/ERC20.sol\":199:297  function _msgSender() internal view virtual returns (address) {\r... */\n  jump\t// out\n    /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n  0x00\n    /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/ERC20.sol\":5304:5321  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n  swap1\n    /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/ERC20.sol\":12540:12939  function _mint(address account, uint256 amount) internal virtual {\r... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/ERC20.sol\":12624:12645  account != address(0) */\n  dup3\n  and\n    /* \"msc_token/ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"msc_token/ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"msc_token/ERC20.sol\":12616:12681  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"msc_token/ERC20.sol\":12772:12778  amount */\n  dup1\n    /* \"msc_token/ERC20.sol\":12756:12768  _totalSupply */\n  0x03\n  0x00\n    /* \"msc_token/ERC20.sol\":12756:12778  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/ERC20.sol\":12789:12807  _balances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"msc_token/ERC20.sol\":12789:12798  _balances */\n  0x01\n    /* \"msc_token/ERC20.sol\":12789:12807  _balances[account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"msc_token/ERC20.sol\":12789:12817  _balances[account] += amount */\n  dup1\n  sload\n    /* \"msc_token/ERC20.sol\":12811:12817  amount */\n  dup4\n  swap3\n    /* \"msc_token/ERC20.sol\":12789:12807  _balances[account] */\n  swap1\n    /* \"msc_token/ERC20.sol\":12789:12817  _balances[account] += amount */\n  tag_28\n  swap1\n    /* \"msc_token/ERC20.sol\":12811:12817  amount */\n  dup5\n  swap1\n    /* \"msc_token/ERC20.sol\":12789:12817  _balances[account] += amount */\n  tag_27\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"msc_token/ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"msc_token/ERC20.sol\":12850:12851  0 */\n  0x00\n  swap1\n    /* \"msc_token/ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"msc_token/ERC20.sol\":12833:12870  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"msc_token/ERC20.sol\":12540:12939  function _mint(address account, uint256 amount) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\ntag_12:\n  dup3\n  dup1\n  sload\n  tag_35\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_38\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_41)\ntag_38:\n  dup3\n  0x1f\n  lt\n  tag_39\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_41)\ntag_39:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_41\n  jumpi\n  swap2\n  dup3\n  add\ntag_40:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_41\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_40)\ntag_41:\n  pop\n  tag_42\n  swap3\n  swap2\n  pop\n  tag_43\n  jump\t// in\ntag_42:\n  pop\n  swap1\n  jump\t// out\ntag_43:\ntag_44:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_42\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_44)\n    /* \"#utility.yul\":556:785   */\ntag_27:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:616   */\n  iszero\n  tag_50\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":653:686   */\n  dup2\n  mstore\n    /* \"#utility.yul\":709:713   */\n  0x11\n    /* \"#utility.yul\":706:707   */\n  0x04\n    /* \"#utility.yul\":699:714   */\n  mstore\n    /* \"#utility.yul\":739:743   */\n  0x24\n    /* \"#utility.yul\":660:663   */\n  dup2\n    /* \"#utility.yul\":727:744   */\n  revert\n    /* \"#utility.yul\":614:616   */\ntag_50:\n  pop\n    /* \"#utility.yul\":770:779   */\n  add\n  swap1\n    /* \"#utility.yul\":604:785   */\n  jump\t// out\n    /* \"#utility.yul\":790:1170   */\ntag_36:\n    /* \"#utility.yul\":869:870   */\n  0x01\n    /* \"#utility.yul\":865:877   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":912:924   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":933:935   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":987:991   */\n  0x7f\n    /* \"#utility.yul\":979:985   */\n  dup3\n    /* \"#utility.yul\":975:992   */\n  and\n    /* \"#utility.yul\":965:992   */\n  swap2\n  pop\n    /* \"#utility.yul\":933:935   */\ntag_52:\n    /* \"#utility.yul\":1040:1042   */\n  0x20\n    /* \"#utility.yul\":1032:1038   */\n  dup3\n    /* \"#utility.yul\":1029:1043   */\n  lt\n    /* \"#utility.yul\":1009:1027   */\n  dup2\n    /* \"#utility.yul\":1006:1044   */\n  eq\n    /* \"#utility.yul\":1003:1005   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  0x4e487b71\n    /* \"#utility.yul\":1081:1084   */\n  0xe0\n    /* \"#utility.yul\":1077:1097   */\n  shl\n    /* \"#utility.yul\":1074:1075   */\n  0x00\n    /* \"#utility.yul\":1067:1098   */\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x22\n    /* \"#utility.yul\":1118:1119   */\n  0x04\n    /* \"#utility.yul\":1111:1126   */\n  mstore\n    /* \"#utility.yul\":1149:1153   */\n  0x24\n    /* \"#utility.yul\":1146:1147   */\n  0x00\n    /* \"#utility.yul\":1139:1154   */\n  revert\n    /* \"#utility.yul\":1003:1005   */\ntag_53:\n  pop\n    /* \"#utility.yul\":845:1170   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_46:\n    /* \"msc_token/ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/ERC20.sol\":16145:16268  contract MGC is ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1653:1667   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1646:1668   */\n      iszero\n        /* \"#utility.yul\":1628:1669   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_22\n        /* \"#utility.yul\":1583:1675   */\n      jump\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"msc_token/ERC20.sol\":7388:7400  _totalSupply */\n      sload(0x03)\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":6042:6067   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6015:6033   */\n      add\n        /* \"msc_token/ERC20.sol\":7300:7408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_22\n        /* \"#utility.yul\":5997:6073   */\n      jump\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"msc_token/ERC20.sol\":7225:7227  18 */\n      0x12\n        /* \"#utility.yul\":6220:6256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6208:6210   */\n      0x20\n        /* \"#utility.yul\":6193:6211   */\n      add\n        /* \"msc_token/ERC20.sol\":7142:7235  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_22\n        /* \"#utility.yul\":6175:6262   */\n      jump\n        /* \"msc_token/ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      and\n        /* \"msc_token/ERC20.sol\":7545:7552  uint256 */\n      0x00\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":7572:7581  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":7572:7590  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/ERC20.sol\":7471:7598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n    tag_11:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1426:1477   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"msc_token/ERC20.sol\":3924:4011  function owner() public view virtual returns (address) {\r... */\n      tag_22\n        /* \"#utility.yul\":1381:1483   */\n      jump\n        /* \"msc_token/ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_20\n      tag_59\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_13:\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_14:\n      tag_24\n      tag_66\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_15:\n      tag_30\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":8138:8145  uint256 */\n      0x00\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":8165:8176  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":8165:8183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":8165:8192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/ERC20.sol\":8049:8200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_16:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n    tag_21:\n        /* \"msc_token/ERC20.sol\":6234:6247  string memory */\n      0x60\n        /* \"msc_token/ERC20.sol\":6267:6272  _name */\n      0x04\n        /* \"msc_token/ERC20.sol\":6260:6272  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/ERC20.sol\":6180:6280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_27:\n        /* \"msc_token/ERC20.sol\":8430:8434  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      tag_85\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":8470:8477  spender */\n      dup5\n        /* \"msc_token/ERC20.sol\":8479:8485  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":8447:8455  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":8447:8486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"msc_token/ERC20.sol\":8504:8508  true */\n      0x01\n        /* \"msc_token/ERC20.sol\":8347:8516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n    tag_37:\n        /* \"msc_token/ERC20.sol\":9138:9142  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      tag_91\n        /* \"msc_token/ERC20.sol\":9165:9171  sender */\n      dup5\n        /* \"msc_token/ERC20.sol\":9173:9182  recipient */\n      dup5\n        /* \"msc_token/ERC20.sol\":9184:9190  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":9155:9164  _transfer */\n      tag_92\n        /* \"msc_token/ERC20.sol\":9155:9191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      dup5\n      and\n        /* \"msc_token/ERC20.sol\":9204:9228  uint256 currentAllowance */\n      0x00\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":9231:9242  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":9231:9250  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9231:9264  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":9283:9309  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4093:4114   */\n      mstore\n        /* \"#utility.yul\":4150:4152   */\n      0x28\n        /* \"#utility.yul\":4130:4148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4123:4153   */\n      mstore\n        /* \"#utility.yul\":4189:4223   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4169:4187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4162:4224   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4240:4258   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4233:4271   */\n      mstore\n        /* \"#utility.yul\":4288:4307   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":9275:9354  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"msc_token/ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_97\n        /* \"msc_token/ERC20.sol\":9399:9405  sender */\n      dup6\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9440:9446  amount */\n      dup6\n        /* \"msc_token/ERC20.sol\":9421:9437  currentAllowance */\n      dup5\n        /* \"msc_token/ERC20.sol\":9421:9446  currentAllowance - amount */\n      sub\n        /* \"msc_token/ERC20.sol\":9390:9398  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":9390:9447  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"msc_token/ERC20.sol\":9478:9482  true */\n      0x01\n      swap5\n        /* \"msc_token/ERC20.sol\":8998:9490  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":9899:10114  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":9987:9991  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":10036:10047  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":10036:10061  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":10036:10070  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":9987:9991  bool */\n      swap1\n      swap2\n        /* \"msc_token/ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_85\n      swap2\n        /* \"msc_token/ERC20.sol\":10027:10034  spender */\n      dup6\n      swap1\n        /* \"msc_token/ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_104\n      swap1\n        /* \"msc_token/ERC20.sol\":10073:10083  addedValue */\n      dup7\n      swap1\n        /* \"msc_token/ERC20.sol\":10036:10083  _allowances[_msgSender()][spender] + addedValue */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"msc_token/ERC20.sol\":10004:10012  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":10004:10084  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_53:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4520:4522   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4502:4523   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4539:4557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4532:4562   */\n      mstore\n        /* \"#utility.yul\":4598:4632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4578:4596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4571:4633   */\n      mstore\n        /* \"#utility.yul\":4650:4668   */\n      0x64\n      add\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4492:4674   */\n      jump\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_110:\n        /* \"msc_token/ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      tag_114\n        /* \"msc_token/ERC20.sol\":4667:4668  0 */\n      0x00\n        /* \"msc_token/ERC20.sol\":4640:4658  _transferOwnership */\n      tag_115\n        /* \"msc_token/ERC20.sol\":4640:4670  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_114:\n        /* \"msc_token/ERC20.sol\":4575:4678  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":6399:6503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_59:\n        /* \"msc_token/ERC20.sol\":6455:6468  string memory */\n      0x60\n        /* \"msc_token/ERC20.sol\":6488:6495  _symbol */\n      0x05\n        /* \"msc_token/ERC20.sol\":6481:6495  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_63:\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":10710:10714  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":10754:10765  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":10754:10779  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":10754:10788  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":10807:10842  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5692:5694   */\n      0x20\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5674:5695   */\n      mstore\n        /* \"#utility.yul\":5731:5733   */\n      0x25\n        /* \"#utility.yul\":5711:5729   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5704:5734   */\n      mstore\n        /* \"#utility.yul\":5770:5804   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5750:5768   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5743:5805   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5821:5839   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5814:5849   */\n      mstore\n        /* \"#utility.yul\":5866:5885   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_95\n        /* \"#utility.yul\":5664:5891   */\n      jump\n        /* \"msc_token/ERC20.sol\":10799:10884  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_125:\n        /* \"msc_token/ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_128\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":10943:10950  spender */\n      dup6\n        /* \"msc_token/ERC20.sol\":10971:10986  subtractedValue */\n      dup6\n        /* \"msc_token/ERC20.sol\":10952:10968  currentAllowance */\n      dup5\n        /* \"msc_token/ERC20.sol\":10952:10986  currentAllowance - subtractedValue */\n      sub\n        /* \"msc_token/ERC20.sol\":10920:10928  _approve */\n      tag_88\n        /* \"msc_token/ERC20.sol\":10920:10987  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"msc_token/ERC20.sol\":11018:11022  true */\n      0x01\n      swap4\n        /* \"msc_token/ERC20.sol\":10617:11030  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":7811:7986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_67:\n        /* \"msc_token/ERC20.sol\":7897:7901  bool */\n      0x00\n        /* \"msc_token/ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      tag_85\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":7938:7947  recipient */\n      dup5\n        /* \"msc_token/ERC20.sol\":7949:7955  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":7914:7923  _transfer */\n      tag_92\n        /* \"msc_token/ERC20.sol\":7914:7956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_76:\n        /* \"msc_token/ERC20.sol\":3970:3977  address */\n      0x00\n        /* \"msc_token/ERC20.sol\":3997:4003  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"msc_token/ERC20.sol\":279:289  msg.sender */\n      caller\n        /* \"msc_token/ERC20.sol\":4144:4167  owner() == _msgSender() */\n      eq\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4520:4522   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4502:4523   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4539:4557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4532:4562   */\n      mstore\n        /* \"#utility.yul\":4598:4632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4578:4596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4571:4633   */\n      mstore\n        /* \"#utility.yul\":4650:4668   */\n      0x64\n      add\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n        /* \"#utility.yul\":4492:4674   */\n      jump\n        /* \"msc_token/ERC20.sol\":4136:4204  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":4922:4944  newOwner != address(0) */\n      dup2\n      and\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2876:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2935   */\n      0x26\n        /* \"#utility.yul\":2913:2931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2906:2936   */\n      mstore\n        /* \"#utility.yul\":2972:3006   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2952:2970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2945:3007   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3023:3041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3016:3052   */\n      mstore\n        /* \"#utility.yul\":3069:3088   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2866:3094   */\n      jump\n        /* \"msc_token/ERC20.sol\":4914:4987  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_140:\n        /* \"msc_token/ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      tag_143\n        /* \"msc_token/ERC20.sol\":5017:5025  newOwner */\n      dup2\n        /* \"msc_token/ERC20.sol\":4998:5016  _transferOwnership */\n      tag_115\n        /* \"msc_token/ERC20.sol\":4998:5026  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_143:\n        /* \"msc_token/ERC20.sol\":4833:5034  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":14301:14681  function _approve(\r... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14437:14456  owner != address(0) */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5269:5290   */\n      mstore\n        /* \"#utility.yul\":5326:5328   */\n      0x24\n        /* \"#utility.yul\":5306:5324   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5299:5329   */\n      mstore\n        /* \"#utility.yul\":5365:5399   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5345:5363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5338:5400   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5416:5434   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5409:5443   */\n      mstore\n        /* \"#utility.yul\":5460:5479   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5259:5485   */\n      jump\n        /* \"msc_token/ERC20.sol\":14429:14497  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14516:14537  spender != address(0) */\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3283:3304   */\n      mstore\n        /* \"#utility.yul\":3340:3342   */\n      0x22\n        /* \"#utility.yul\":3320:3338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3313:3343   */\n      mstore\n        /* \"#utility.yul\":3379:3413   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3359:3377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3352:3414   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3430:3448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3423:3455   */\n      mstore\n        /* \"#utility.yul\":3472:3491   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":3273:3497   */\n      jump\n        /* \"msc_token/ERC20.sol\":14508:14576  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":14589:14607  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":14589:14600  _allowances */\n      0x02\n        /* \"msc_token/ERC20.sol\":14589:14607  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/ERC20.sol\":14589:14616  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/ERC20.sol\":14589:14625  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6042:6067   */\n      dup5\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6015:6033   */\n      add\n        /* \"msc_token/ERC20.sol\":14641:14673  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/ERC20.sol\":14301:14681  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":11520:12253  function _transfer(\r... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11660:11680  sender != address(0) */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4863:4884   */\n      mstore\n        /* \"#utility.yul\":4920:4922   */\n      0x25\n        /* \"#utility.yul\":4900:4918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4893:4923   */\n      mstore\n        /* \"#utility.yul\":4959:4993   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4939:4957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4932:4994   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5010:5028   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5003:5038   */\n      mstore\n        /* \"#utility.yul\":5055:5074   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4853:5080   */\n      jump\n        /* \"msc_token/ERC20.sol\":11652:11722  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11741:11764  recipient != address(0) */\n      dup3\n      and\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2490:2492   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2472:2493   */\n      mstore\n        /* \"#utility.yul\":2529:2531   */\n      0x23\n        /* \"#utility.yul\":2509:2527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2502:2532   */\n      mstore\n        /* \"#utility.yul\":2568:2602   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2548:2566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2541:2603   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2619:2637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2612:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2681   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2462:2687   */\n      jump\n        /* \"msc_token/ERC20.sol\":11733:11804  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      dup4\n      and\n        /* \"msc_token/ERC20.sol\":11877:11898  uint256 senderBalance */\n      0x00\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":11901:11910  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":11901:11918  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/ERC20.sol\":11937:11960  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3686:3707   */\n      mstore\n        /* \"#utility.yul\":3743:3745   */\n      0x26\n        /* \"#utility.yul\":3723:3741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3716:3746   */\n      mstore\n        /* \"#utility.yul\":3782:3816   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3762:3780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3755:3817   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3833:3851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3826:3862   */\n      mstore\n        /* \"#utility.yul\":3879:3898   */\n      0x84\n      add\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":3676:3904   */\n      jump\n        /* \"msc_token/ERC20.sol\":11929:12003  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/ERC20.sol\":12039:12048  _balances */\n      0x01\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"msc_token/ERC20.sol\":12059:12081  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/ERC20.sol\":12039:12081  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/ERC20.sol\":12103:12123  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"msc_token/ERC20.sol\":12075:12081  amount */\n      dup5\n      swap3\n        /* \"msc_token/ERC20.sol\":12039:12056  _balances[sender] */\n      swap1\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_165\n      swap1\n        /* \"msc_token/ERC20.sol\":12075:12081  amount */\n      dup5\n      swap1\n        /* \"msc_token/ERC20.sol\":12103:12133  _balances[recipient] += amount */\n      tag_105\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/ERC20.sol\":12168:12177  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n        /* \"msc_token/ERC20.sol\":12160:12166  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"msc_token/ERC20.sol\":12179:12185  amount */\n      dup5\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_166\n      swap2\n        /* \"#utility.yul\":6042:6067   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6015:6033   */\n      add\n      swap1\n        /* \"#utility.yul\":5997:6073   */\n      jump\n        /* \"msc_token/ERC20.sol\":12151:12186  Transfer(sender, recipient, amount) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/ERC20.sol\":11520:12253  function _transfer(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_115:\n        /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n      0x00\n        /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/ERC20.sol\":5304:5321  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"msc_token/ERC20.sol\":5287:5293  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"msc_token/ERC20.sol\":5268:5284  address oldOwner */\n      swap1\n        /* \"msc_token/ERC20.sol\":5337:5377  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"msc_token/ERC20.sol\":5194:5385  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_173:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_175:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_49:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_177:\n        /* \"#utility.yul\":353:382   */\n      tag_178\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_173\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_71:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_180:\n        /* \"#utility.yul\":571:600   */\n      tag_181\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_173\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_182\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_173\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_36:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_184:\n        /* \"#utility.yul\":863:892   */\n      tag_185\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_173\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_186\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_26:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_188:\n        /* \"#utility.yul\":1189:1218   */\n      tag_189\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1680:2283   */\n    tag_23:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1850:1852   */\n      dup1\n        /* \"#utility.yul\":1839:1848   */\n      dup4\n        /* \"#utility.yul\":1832:1853   */\n      mstore\n        /* \"#utility.yul\":1882:1888   */\n      dup4\n        /* \"#utility.yul\":1876:1889   */\n      mload\n        /* \"#utility.yul\":1925:1931   */\n      dup1\n        /* \"#utility.yul\":1920:1922   */\n      dup3\n        /* \"#utility.yul\":1909:1918   */\n      dup6\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1898:1932   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      dup3\n        /* \"#utility.yul\":1963:2103   */\n    tag_193:\n        /* \"#utility.yul\":1977:1983   */\n      dup2\n        /* \"#utility.yul\":1974:1975   */\n      dup2\n        /* \"#utility.yul\":1971:1984   */\n      lt\n        /* \"#utility.yul\":1963:2103   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2072:2086   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2068:2091   */\n      dup4\n      add\n        /* \"#utility.yul\":2062:2092   */\n      mload\n        /* \"#utility.yul\":2038:2055   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2057:2059   */\n      0x40\n        /* \"#utility.yul\":2034:2060   */\n      add\n        /* \"#utility.yul\":2027:2093   */\n      mstore\n        /* \"#utility.yul\":1992:2002   */\n      dup3\n      add\n        /* \"#utility.yul\":1963:2103   */\n      jump(tag_193)\n    tag_195:\n        /* \"#utility.yul\":2121:2127   */\n      dup2\n        /* \"#utility.yul\":2118:2119   */\n      dup2\n        /* \"#utility.yul\":2115:2128   */\n      gt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2191:2195   */\n      dup4\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2177:2183   */\n      dup4\n        /* \"#utility.yul\":2166:2175   */\n      dup8\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2158:2189   */\n      add\n        /* \"#utility.yul\":2151:2196   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2267:2269   */\n      0x1f\n        /* \"#utility.yul\":2246:2261   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2242:2271   */\n      and\n        /* \"#utility.yul\":2227:2272   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2223:2277   */\n      add\n      swap4\n        /* \"#utility.yul\":1801:2283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6267:6496   */\n    tag_105:\n        /* \"#utility.yul\":6307:6310   */\n      0x00\n        /* \"#utility.yul\":6338:6339   */\n      dup3\n        /* \"#utility.yul\":6334:6340   */\n      not\n        /* \"#utility.yul\":6331:6332   */\n      dup3\n        /* \"#utility.yul\":6328:6341   */\n      gt\n        /* \"#utility.yul\":6325:6327   */\n      iszero\n      tag_209\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6364:6397   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6420:6424   */\n      0x11\n        /* \"#utility.yul\":6417:6418   */\n      0x04\n        /* \"#utility.yul\":6410:6425   */\n      mstore\n        /* \"#utility.yul\":6450:6454   */\n      0x24\n        /* \"#utility.yul\":6371:6374   */\n      dup2\n        /* \"#utility.yul\":6438:6455   */\n      revert\n        /* \"#utility.yul\":6325:6327   */\n    tag_209:\n      pop\n        /* \"#utility.yul\":6481:6490   */\n      add\n      swap1\n        /* \"#utility.yul\":6315:6496   */\n      jump\t// out\n        /* \"#utility.yul\":6501:6881   */\n    tag_79:\n        /* \"#utility.yul\":6580:6581   */\n      0x01\n        /* \"#utility.yul\":6576:6588   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6623:6635   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6644:6646   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6698:6702   */\n      0x7f\n        /* \"#utility.yul\":6690:6696   */\n      dup3\n        /* \"#utility.yul\":6686:6703   */\n      and\n        /* \"#utility.yul\":6676:6703   */\n      swap2\n      pop\n        /* \"#utility.yul\":6644:6646   */\n    tag_211:\n        /* \"#utility.yul\":6751:6753   */\n      0x20\n        /* \"#utility.yul\":6743:6749   */\n      dup3\n        /* \"#utility.yul\":6740:6754   */\n      lt\n        /* \"#utility.yul\":6720:6738   */\n      dup2\n        /* \"#utility.yul\":6717:6755   */\n      eq\n        /* \"#utility.yul\":6714:6716   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6797:6807   */\n      0x4e487b71\n        /* \"#utility.yul\":6792:6795   */\n      0xe0\n        /* \"#utility.yul\":6788:6808   */\n      shl\n        /* \"#utility.yul\":6785:6786   */\n      0x00\n        /* \"#utility.yul\":6778:6809   */\n      mstore\n        /* \"#utility.yul\":6832:6836   */\n      0x22\n        /* \"#utility.yul\":6829:6830   */\n      0x04\n        /* \"#utility.yul\":6822:6837   */\n      mstore\n        /* \"#utility.yul\":6860:6864   */\n      0x24\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6850:6865   */\n      revert\n        /* \"#utility.yul\":6714:6716   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":6556:6881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220066846fec69e57aa9b17804d8225b27d88096756d00ecd952540471bca25994664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1172:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:1",
														"type": ""
													}
												],
												"src": "374:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "639:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "660:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "669:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "674:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "665:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "665:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "653:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "653:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "653:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "709:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "734:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:1"
															},
															"nodeType": "YulIf",
															"src": "614:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "763:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "774:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "777:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:1",
														"type": ""
													}
												],
												"src": "556:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "845:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "855:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "869:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "872:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "886:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "916:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "890:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "963:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "965:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "979:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "975:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "965:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "943:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:26:1"
															},
															"nodeType": "YulIf",
															"src": "933:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1081:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1086:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1009:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1029:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1029:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1006:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:38:1"
															},
															"nodeType": "YulIf",
															"src": "1003:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "825:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "834:6:1",
														"type": ""
													}
												],
												"src": "790:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051806040016040528060038152602001624d474360e81b815250604051806040016040528060038152602001624d474360e81b815250620000646200005e620000b560201b60201c565b620000b9565b815162000079906004906020850190620001f1565b5080516200008f906005906020840190620001f1565b505050620000af336a08af7623fb67bf1a8000006200010960201b60201c565b620002f9565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216620001645760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806003600082825462000178919062000297565b90915550506001600160a01b03821660009081526001602052604081208054839290620001a790849062000297565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001ff90620002bc565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b60008219821115620002b757634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680620002d157607f821691505b60208210811415620002f357634e487b7160e01b600052602260045260246000fd5b50919050565b610ab680620003096000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109ce565b60405180910390f35b61012061011b3660046109a5565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096a565b6102e7565b60405160128152602001610104565b6101206101723660046109a5565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a5565b610447565b6101206101ee3660046109a5565b6104e0565b610134610201366004610938565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a45565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a45565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a21565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a45565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a21565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b600060208284031215610928578081fd5b610931826108fb565b9392505050565b6000806040838503121561094a578081fd5b610953836108fb565b9150610961602084016108fb565b90509250929050565b60008060006060848603121561097e578081fd5b610987846108fb565b9250610995602085016108fb565b9150604084013590509250925092565b600080604083850312156109b7578182fd5b6109c0836108fb565b946020939093013593505050565b6000602080835283518082850152825b818110156109fa578581018301518582016040015282016109de565b81811115610a0b5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610a5957607f821691505b60208210811415610a7a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220066846fec69e57aa9b17804d8225b27d88096756d00ecd952540471bca25994664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D4743 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D4743 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH3 0x64 PUSH3 0x5E PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x79 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1F1 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x8F SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1F1 JUMP JUMPDEST POP POP POP PUSH3 0xAF CALLER PUSH11 0x8AF7623FB67BF1A800000 PUSH3 0x109 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2F9 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x178 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1A7 SWAP1 DUP5 SWAP1 PUSH3 0x297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1FF SWAP1 PUSH3 0x2BC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x223 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x26E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x23E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x26E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x26E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x26E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x251 JUMP JUMPDEST POP PUSH3 0x27C SWAP3 SWAP2 POP PUSH3 0x280 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x27C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x281 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP1 PUSH3 0x309 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x931 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x961 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x97E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x987 DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x995 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x9C0 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA0B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH9 0x46FEC69E57AA9B1780 0x4D DUP3 0x25 0xB2 PUSH30 0x88096756D00ECD952540471BCA25994664736F6C63430008040033000000 ",
							"sourceMap": "16145:123:0:-:0;;;16174:91;;;;;;;;;;5994:116;;;;;;;;;;;;;-1:-1:-1;;;5994:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;5994:116:0;;;3803:32;3822:12;:10;;;:12;;:::i;:::-;3803:18;:32::i;:::-;6061:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6085:17:0;;;;:7;;:17;;;;;:::i;:::-;;5994:116;;16219:38:::1;16225:10;16237:19;16219:5;;;:38;;:::i;:::-;16145:123:::0;;199:98;279:10;;199:98::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5194:191;;:::o;12540:399::-;-1:-1:-1;;;;;12624:21:0;;12616:65;;;;-1:-1:-1;;;12616:65:0;;216:2:1;12616:65:0;;;198:21:1;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;12616:65:0;;;;;;;;12772:6;12756:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12789:18:0;;;;;;:9;:18;;;;;:28;;12811:6;;12789:18;:28;;12811:6;;12789:28;:::i;:::-;;;;-1:-1:-1;;12833:37:0;;520:25:1;;;-1:-1:-1;;;;;12833:37:0;;;12850:1;;12833:37;;508:2:1;493:18;12833:37:0;;;;;;;12540:399;;:::o;16145:123::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16145:123:0;;;-1:-1:-1;16145:123:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:229:1;596:3;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:1;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:1;;604:181::o;790:380::-;869:1;865:12;;;;912;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;16145:123:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6883:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:2:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:1"
															},
															"nodeType": "YulIf",
															"src": "490:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"src": "393:270:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:1"
															},
															"nodeType": "YulIf",
															"src": "782:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:1",
														"type": ""
													}
												],
												"src": "668:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:1"
															},
															"nodeType": "YulIf",
															"src": "1108:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													}
												],
												"src": "1011:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1464:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1469:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1460:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1460:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1473:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1456:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:1",
														"type": ""
													}
												],
												"src": "1280:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1593:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1635:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1653:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1646:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:1",
														"type": ""
													}
												],
												"src": "1488:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:482:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1821:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1815:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1862:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1882:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1866:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1920:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1950:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1945:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2042:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2053:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2038:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2057:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2034:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2076:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2084:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2072:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2072:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2088:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2068:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2068:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2062:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2062:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2027:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1974:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1971:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1985:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1987:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1996:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1992:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1992:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1987:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1967:3:1",
																"statements": []
															},
															"src": "1963:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2166:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2177:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2162:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2162:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2186:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2158:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2158:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2191:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2151:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2118:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2121:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:13:1"
															},
															"nodeType": "YulIf",
															"src": "2112:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2215:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2250:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2258:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2246:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2246:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2267:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2263:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2263:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2215:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1770:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:1",
														"type": ""
													}
												],
												"src": "1680:603:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2462:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2472:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2524:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2502:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2568:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2639:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2666:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2439:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2453:4:1",
														"type": ""
													}
												],
												"src": "2288:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2972:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3038:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3043:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2843:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2857:4:1",
														"type": ""
													}
												],
												"src": "2692:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3290:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3335:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3379:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3450:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3464:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3476:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3472:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3464:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3264:4:1",
														"type": ""
													}
												],
												"src": "3099:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3693:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3716:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3782:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3853:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3871:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3894:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3871:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3667:4:1",
														"type": ""
													}
												],
												"src": "3502:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4083:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4100:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4123:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4189:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4162:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4255:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4260:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4233:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4280:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4074:4:1",
														"type": ""
													}
												],
												"src": "3909:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4492:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4502:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4543:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4539:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4539:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4593:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4598:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4469:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4483:4:1",
														"type": ""
													}
												],
												"src": "4318:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4863:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4900:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4893:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4943:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4954:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4959:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4932:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5030:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5003:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5059:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5070:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5047:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4830:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4844:4:1",
														"type": ""
													}
												],
												"src": "4679:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5276:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5269:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5321:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5306:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5299:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5360:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5345:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5365:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5338:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5452:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5475:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5452:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5236:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5250:4:1",
														"type": ""
													}
												],
												"src": "5085:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5664:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5750:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5770:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5836:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5821:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5841:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5814:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5858:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5881:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5655:4:1",
														"type": ""
													}
												],
												"src": "5490:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5997:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6007:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6007:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6049:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6042:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5966:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5977:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5988:4:1",
														"type": ""
													}
												],
												"src": "5896:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6175:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6227:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6242:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6250:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6238:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6155:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6166:4:1",
														"type": ""
													}
												],
												"src": "6078:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6315:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6350:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "6371:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6380:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6385:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6376:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6376:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6364:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6417:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6420:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6410:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6410:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6410:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "6445:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6450:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6438:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6438:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6438:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6328:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:13:1"
															},
															"nodeType": "YulIf",
															"src": "6325:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6474:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6485:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6488:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6474:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6298:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6301:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6307:3:1",
														"type": ""
													}
												],
												"src": "6267:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6566:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6580:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6583:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6597:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6627:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6601:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6674:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6676:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6690:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6698:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6686:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6676:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6654:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:26:1"
															},
															"nodeType": "YulIf",
															"src": "6644:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6764:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6792:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6797:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6788:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6788:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6778:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6778:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6829:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6832:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6822:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6822:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6822:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6860:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6850:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:38:1"
															},
															"nodeType": "YulIf",
															"src": "6714:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6536:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6545:6:1",
														"type": ""
													}
												],
												"src": "6501:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d7146101cd578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c557600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806370a082311461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b60405161010491906109ce565b60405180910390f35b61012061011b3660046109a5565b6102d1565b6040519015158152602001610104565b6003545b604051908152602001610104565b61012061015036600461096a565b6102e7565b60405160128152602001610104565b6101206101723660046109a5565b610396565b610134610185366004610917565b6001600160a01b031660009081526001602052604090205490565b6101a86103d2565b005b6000546040516001600160a01b039091168152602001610104565b6100f7610438565b6101206101db3660046109a5565b610447565b6101206101ee3660046109a5565b6104e0565b610134610201366004610938565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101a861023a366004610917565b6104ed565b60606004805461024e90610a45565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610a45565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b60006102de3384846105b8565b50600192915050565b60006102f48484846106dc565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561037e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038b85338584036105b8565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102de9185906103cd908690610a21565b6105b8565b6000546001600160a01b0316331461042c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b61043660006108ab565b565b60606005805461024e90610a45565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610375565b6104d633858584036105b8565b5060019392505050565b60006102de3384846106dc565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610375565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610375565b6105b5816108ab565b50565b6001600160a01b03831661061a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661067b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152600160205260409020548181101561081a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610851908490610a21565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089d91815260200190565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091257600080fd5b919050565b600060208284031215610928578081fd5b610931826108fb565b9392505050565b6000806040838503121561094a578081fd5b610953836108fb565b9150610961602084016108fb565b90509250929050565b60008060006060848603121561097e578081fd5b610987846108fb565b9250610995602085016108fb565b9150604084013590509250925092565b600080604083850312156109b7578182fd5b6109c0836108fb565b946020939093013593505050565b6000602080835283518082850152825b818110156109fa578581018301518582016040015282016109de565b81811115610a0b5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4057634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610a5957607f821691505b60208210811415610a7a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220066846fec69e57aa9b17804d8225b27d88096756d00ecd952540471bca25994664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27A SWAP1 PUSH2 0xA45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4 DUP5 DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38B DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2DE SWAP2 DUP6 SWAP1 PUSH2 0x3CD SWAP1 DUP7 SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x436 PUSH1 0x0 PUSH2 0x8AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x24E SWAP1 PUSH2 0xA45 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH2 0x5B5 DUP2 PUSH2 0x8AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x851 SWAP1 DUP5 SWAP1 PUSH2 0xA21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x928 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x931 DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x961 PUSH1 0x20 DUP5 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x97E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x987 DUP5 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP PUSH2 0x995 PUSH1 0x20 DUP6 ADD PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x9C0 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9DE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA0B JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH9 0x46FEC69E57AA9B1780 0x4D DUP3 0x25 0xB2 PUSH30 0x88096756D00ECD952540471BCA25994664736F6C63430008040033000000 ",
							"sourceMap": "16145:123:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8347:169;;;;;;:::i;:::-;;:::i;:::-;;;1653:14:1;;1646:22;1628:41;;1616:2;1601:18;8347:169:0;1583:92:1;7300:108:0;7388:12;;7300:108;;;6042:25:1;;;6030:2;6015:18;7300:108:0;5997:76:1;8998:492:0;;;;;;:::i;:::-;;:::i;7142:93::-;;;7225:2;6220:36:1;;6208:2;6193:18;7142:93:0;6175:87:1;9899:215:0;;;;;;:::i;:::-;;:::i;7471:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7572:18:0;7545:7;7572:18;;;:9;:18;;;;;;;7471:127;4575:103;;;:::i;:::-;;3924:87;3970:7;3997:6;3924:87;;-1:-1:-1;;;;;3997:6:0;;;1426:51:1;;1414:2;1399:18;3924:87:0;1381:102:1;6399:104:0;;;:::i;10617:413::-;;;;;;:::i;:::-;;:::i;7811:175::-;;;;;;:::i;:::-;;:::i;8049:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8165:18:0;;;8138:7;8165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8049:151;4833:201;;;;;;:::i;:::-;;:::i;6180:100::-;6234:13;6267:5;6260:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:100;:::o;8347:169::-;8430:4;8447:39;279:10;8470:7;8479:6;8447:8;:39::i;:::-;-1:-1:-1;8504:4:0;8347:169;;;;:::o;8998:492::-;9138:4;9155:36;9165:6;9173:9;9184:6;9155:9;:36::i;:::-;-1:-1:-1;;;;;9231:19:0;;9204:24;9231:19;;;:11;:19;;;;;;;;279:10;9231:33;;;;;;;;9283:26;;;;9275:79;;;;-1:-1:-1;;;9275:79:0;;4111:2:1;9275:79:0;;;4093:21:1;4150:2;4130:18;;;4123:30;4189:34;4169:18;;;4162:62;-1:-1:-1;;;4240:18:1;;;4233:38;4288:19;;9275:79:0;;;;;;;;;9390:57;9399:6;279:10;9440:6;9421:16;:25;9390:8;:57::i;:::-;-1:-1:-1;9478:4:0;;8998:492;-1:-1:-1;;;;8998:492:0:o;9899:215::-;279:10;9987:4;10036:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10036:34:0;;;;;;;;;;9987:4;;10004:80;;10027:7;;10036:47;;10073:10;;10036:47;:::i;:::-;10004:8;:80::i;4575:103::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4520:2:1;4136:68:0;;;4502:21:1;;;4539:18;;;4532:30;4598:34;4578:18;;;4571:62;4650:18;;4136:68:0;4492:182:1;4136:68:0;4640:30:::1;4667:1;4640:18;:30::i;:::-;4575:103::o:0;6399:104::-;6455:13;6488:7;6481:14;;;;;:::i;10617:413::-;279:10;10710:4;10754:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10754:34:0;;;;;;;;;;10807:35;;;;10799:85;;;;-1:-1:-1;;;10799:85:0;;5692:2:1;10799:85:0;;;5674:21:1;5731:2;5711:18;;;5704:30;5770:34;5750:18;;;5743:62;-1:-1:-1;;;5821:18:1;;;5814:35;5866:19;;10799:85:0;5664:227:1;10799:85:0;10920:67;279:10;10943:7;10971:15;10952:16;:34;10920:8;:67::i;:::-;-1:-1:-1;11018:4:0;;10617:413;-1:-1:-1;;;10617:413:0:o;7811:175::-;7897:4;7914:42;279:10;7938:9;7949:6;7914:9;:42::i;4833:201::-;3970:7;3997:6;-1:-1:-1;;;;;3997:6:0;279:10;4144:23;4136:68;;;;-1:-1:-1;;;4136:68:0;;4520:2:1;4136:68:0;;;4502:21:1;;;4539:18;;;4532:30;4598:34;4578:18;;;4571:62;4650:18;;4136:68:0;4492:182:1;4136:68:0;-1:-1:-1;;;;;4922:22:0;::::1;4914:73;;;::::0;-1:-1:-1;;;4914:73:0;;2894:2:1;4914:73:0::1;::::0;::::1;2876:21:1::0;2933:2;2913:18;;;2906:30;2972:34;2952:18;;;2945:62;-1:-1:-1;;;3023:18:1;;;3016:36;3069:19;;4914:73:0::1;2866:228:1::0;4914:73:0::1;4998:28;5017:8;4998:18;:28::i;:::-;4833:201:::0;:::o;14301:380::-;-1:-1:-1;;;;;14437:19:0;;14429:68;;;;-1:-1:-1;;;14429:68:0;;5287:2:1;14429:68:0;;;5269:21:1;5326:2;5306:18;;;5299:30;5365:34;5345:18;;;5338:62;-1:-1:-1;;;5416:18:1;;;5409:34;5460:19;;14429:68:0;5259:226:1;14429:68:0;-1:-1:-1;;;;;14516:21:0;;14508:68;;;;-1:-1:-1;;;14508:68:0;;3301:2:1;14508:68:0;;;3283:21:1;3340:2;3320:18;;;3313:30;3379:34;3359:18;;;3352:62;-1:-1:-1;;;3430:18:1;;;3423:32;3472:19;;14508:68:0;3273:224:1;14508:68:0;-1:-1:-1;;;;;14589:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14641:32;;6042:25:1;;;14641:32:0;;6015:18:1;14641:32:0;;;;;;;14301:380;;;:::o;11520:733::-;-1:-1:-1;;;;;11660:20:0;;11652:70;;;;-1:-1:-1;;;11652:70:0;;4881:2:1;11652:70:0;;;4863:21:1;4920:2;4900:18;;;4893:30;4959:34;4939:18;;;4932:62;-1:-1:-1;;;5010:18:1;;;5003:35;5055:19;;11652:70:0;4853:227:1;11652:70:0;-1:-1:-1;;;;;11741:23:0;;11733:71;;;;-1:-1:-1;;;11733:71:0;;2490:2:1;11733:71:0;;;2472:21:1;2529:2;2509:18;;;2502:30;2568:34;2548:18;;;2541:62;-1:-1:-1;;;2619:18:1;;;2612:33;2662:19;;11733:71:0;2462:225:1;11733:71:0;-1:-1:-1;;;;;11901:17:0;;11877:21;11901:17;;;:9;:17;;;;;;11937:23;;;;11929:74;;;;-1:-1:-1;;;11929:74:0;;3704:2:1;11929:74:0;;;3686:21:1;3743:2;3723:18;;;3716:30;3782:34;3762:18;;;3755:62;-1:-1:-1;;;3833:18:1;;;3826:36;3879:19;;11929:74:0;3676:228:1;11929:74:0;-1:-1:-1;;;;;12039:17:0;;;;;;;:9;:17;;;;;;12059:22;;;12039:42;;12103:20;;;;;;;;:30;;12075:6;;12039:17;12103:30;;12075:6;;12103:30;:::i;:::-;;;;;;;;12168:9;-1:-1:-1;;;;;12151:35:0;12160:6;-1:-1:-1;;;;;12151:35:0;;12179:6;12151:35;;;;6042:25:1;;6030:2;6015:18;;5997:76;12151:35:0;;;;;;;;11520:733;;;;:::o;5194:191::-;5268:16;5287:6;;-1:-1:-1;;;;;5304:17:0;;;-1:-1:-1;;;;;;5304:17:0;;;;;;5337:40;;5287:6;;;;;;;5337:40;;5268:16;5337:40;5194:191;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:1:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:1:o;1680:603::-;1792:4;1821:2;1850;1839:9;1832:21;1882:6;1876:13;1925:6;1920:2;1909:9;1905:18;1898:34;1950:4;1963:140;1977:6;1974:1;1971:13;1963:140;;;2072:14;;;2068:23;;2062:30;2038:17;;;2057:2;2034:26;2027:66;1992:10;;1963:140;;;2121:6;2118:1;2115:13;2112:2;;;2191:4;2186:2;2177:6;2166:9;2162:22;2158:31;2151:45;2112:2;-1:-1:-1;2267:2:1;2246:15;-1:-1:-1;;2242:29:1;2227:45;;;;2274:2;2223:54;;1801:482;-1:-1:-1;;;1801:482:1:o;6267:229::-;6307:3;6338:1;6334:6;6331:1;6328:13;6325:2;;;-1:-1:-1;;;6364:33:1;;6420:4;6417:1;6410:15;6450:4;6371:3;6438:17;6325:2;-1:-1:-1;6481:9:1;;6315:181::o;6501:380::-;6580:1;6576:12;;;;6623;;;6644:2;;6698:4;6690:6;6686:17;6676:27;;6644:2;6751;6743:6;6740:14;6720:18;6717:38;6714:2;;;6797:10;6792:3;6788:20;6785:1;6778:31;6832:4;6829:1;6822:15;6860:4;6857:1;6850:15;6714:2;;6556:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "548400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22542",
								"balanceOf(address)": "1326",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "23510",
								"increaseAllowance(address,uint256)": "23601",
								"name()": "infinite",
								"owner()": "1046",
								"renounceOwnership()": "23437",
								"symbol()": "infinite",
								"totalSupply()": "1049",
								"transfer(address,uint256)": "44403",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "23697"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16174,
									"end": 16265,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D4743"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D4743"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3832,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3822,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3803,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3803,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6061,
									"end": 6066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6061,
									"end": 6074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6085,
									"end": 6102,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5994,
									"end": 6110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 16225,
									"end": 16235,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16237,
									"end": 16256,
									"name": "PUSH",
									"source": 0,
									"value": "8AF7623FB67BF1A800000"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16219,
									"end": 16224,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 16219,
									"end": 16257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 297,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 199,
									"end": 297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 279,
									"end": 289,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 279,
									"end": 289,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 297,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5304,
									"end": 5321,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5287,
									"end": 5293,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5377,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5194,
									"end": 5385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12624,
									"end": 12645,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12624,
									"end": 12645,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12616,
									"end": 12681,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12772,
									"end": 12778,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12768,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12756,
									"end": 12768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12756,
									"end": 12778,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12807,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12789,
									"end": 12817,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12850,
									"end": 12851,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12850,
									"end": 12851,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12833,
									"end": 12870,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12939,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 785,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 556,
									"end": 785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 653,
									"end": 686,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 653,
									"end": 686,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 709,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 706,
									"end": 707,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 699,
									"end": 714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 739,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 660,
									"end": 663,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 727,
									"end": 744,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 770,
									"end": 779,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 770,
									"end": 779,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 785,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 790,
									"end": 1170,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 790,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 869,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 865,
									"end": 877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 865,
									"end": 877,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 865,
									"end": 877,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 865,
									"end": 877,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 912,
									"end": 924,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 912,
									"end": 924,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 912,
									"end": 924,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 933,
									"end": 935,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 991,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 979,
									"end": 985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 975,
									"end": 992,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 965,
									"end": 992,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 965,
									"end": 992,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 933,
									"end": 935,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 933,
									"end": 935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1032,
									"end": 1038,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1029,
									"end": 1043,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1044,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1081,
									"end": 1084,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1077,
									"end": 1097,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1098,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1111,
									"end": 1126,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1154,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 845,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16145,
									"end": 16268,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220066846fec69e57aa9b17804d8225b27d88096756d00ecd952540471bca25994664736f6c63430008040033",
									".code": [
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16145,
											"end": 16268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1583,
											"end": 1675,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5997,
											"end": 6073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6220,
											"end": 6256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6175,
											"end": 6262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7572,
											"end": 7590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1381,
											"end": 1483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8447,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9155,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9275,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9399,
											"end": 9405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9390,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9899,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10073,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10036,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10004,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10004,
											"end": 10084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4492,
											"end": 4674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4640,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6399,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5692,
											"end": 5694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5866,
											"end": 5885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5664,
											"end": 5891,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10799,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10971,
											"end": 10986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10920,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10920,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11018,
											"end": 11022,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 11030,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7811,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7914,
											"end": 7956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 279,
											"end": 289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4492,
											"end": 4674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4136,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3069,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2866,
											"end": 3094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4914,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5017,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 5034,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14437,
											"end": 14456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5269,
											"end": 5290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5399,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5460,
											"end": 5479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5259,
											"end": 5485,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14429,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3472,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3273,
											"end": 3497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 14508,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14673,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11660,
											"end": 11680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4863,
											"end": 4884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5055,
											"end": 5074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4853,
											"end": 5080,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11652,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2602,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2462,
											"end": 2687,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 11733,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3898,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3879,
											"end": 3898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3676,
											"end": 3904,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 11929,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12081,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12151,
											"end": 12186,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 12253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5321,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5377,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1680,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1984,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2128,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 2283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6267,
											"end": 6496,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6267,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6341,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6424,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6410,
											"end": 6425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6371,
											"end": 6374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6501,
											"end": 6881,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6501,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6698,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6690,
											"end": 6696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6792,
											"end": 6795,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6881,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"MGC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 229,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 237,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 239,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 241,
								"contract": "msc_token/ERC20.sol:MGC",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC20.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC20.sol\":{\"keccak256\":\"0x2fae624297e1d5f01962059040d3bd2bb29f2673664c6c3a4f00b8cf264e2f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17063352a97a49b8f5f8c2fdd481763f5ac98cc5a4855310eb503c3102aa2c4\",\"dweb:/ipfs/QmPsrFgumhqfMsqredbrQ6QvSv3pKs3jztasPnLTBUNTCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "msc_token/ERC20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"msc_token/ERC20.sol": {
				"ast": {
					"absolutePath": "msc_token/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							20
						],
						"ERC20": [
							759
						],
						"IERC20": [
							95
						],
						"IERC20Metadata": [
							116
						],
						"MGC": [
							780
						],
						"Ownable": [
							217
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "60:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "184:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "261:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "279:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "279:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "272:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:0"
									},
									"scope": 20,
									"src": "199:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "372:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "390:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "390:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "383:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "314:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "356:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:16:0"
									},
									"scope": 20,
									"src": "305:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "166:243:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "IERC20",
							"nameLocation": "425:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "439:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "522:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:9:0"
									},
									"scope": 95,
									"src": "513:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "576:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "665:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 95,
									"src": "656:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "732:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "962:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "979:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "971:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "998:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "990:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:35:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1024:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1024:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:6:0"
									},
									"scope": 95,
									"src": "953:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1038:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1323:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1356:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1388:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:0"
									},
									"scope": 95,
									"src": "1314:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1405:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2075:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2134:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:0"
									},
									"scope": 95,
									"src": "2066:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2148:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2467:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2498:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2523:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2515:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:85:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2583:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:6:0"
									},
									"scope": 95,
									"src": "2458:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2597:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 85,
									"name": "Transfer",
									"nameLocation": "2772:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2781:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2819:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2803:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2831:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2823:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:57:0"
									},
									"src": "2766:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2846:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 94,
									"name": "Approval",
									"nameLocation": "3009:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3018:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3057:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3041:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:63:0"
									},
									"src": "3003:78:0"
								}
							],
							"scope": 781,
							"src": "415:2669:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 96,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "3116:6:0"
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "3116:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116,
								95
							],
							"name": "IERC20Metadata",
							"nameLocation": "3098:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "3130:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3201:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3205:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3231:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3231:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:15:0"
									},
									"scope": 116,
									"src": "3192:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3254:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3327:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3333:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3359:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:15:0"
									},
									"scope": 116,
									"src": "3318:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3382:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3464:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3498:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 112,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:7:0"
									},
									"scope": 116,
									"src": "3455:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 781,
							"src": "3088:420:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "3541:7:0"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "3541:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217,
								20
							],
							"name": "Ownable",
							"nameLocation": "3530:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "3572:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "3556:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 119,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3556:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 126,
									"name": "OwnershipTransferred",
									"nameLocation": "3593:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "3630:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3614:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3645:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:57:0"
									},
									"src": "3587:84:0"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3792:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 130,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "3803:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3803:32:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3679:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:2:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:0"
									},
									"scope": 217,
									"src": "3778:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3979:32:0",
										"statements": [
											{
												"expression": {
													"id": 142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "3997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 141,
												"id": 143,
												"nodeType": "Return",
												"src": "3990:13:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3851:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "3933:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3938:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:9:0"
									},
									"scope": 217,
									"src": "3924:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4125:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 149,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "4144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4144:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 151,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "4155:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4155:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4144:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4169:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "4136:68:0"
											},
											{
												"id": 157,
												"nodeType": "PlaceholderStatement",
												"src": "4215:1:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "4019:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 159,
									"name": "onlyOwner",
									"nameLocation": "4113:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:2:0"
									},
									"src": "4104:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4629:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4659:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4659:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 165,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4640:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "4640:30:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4232:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 162,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 159,
												"src": "4619:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4619:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "4584:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:2:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4629:0:0"
									},
									"scope": 217,
									"src": "4575:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4903:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "4922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4934:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4934:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4934:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4922:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4914:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5017:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "4998:28:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4686:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 159,
												"src": "4893:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4893:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "4842:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4860:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:18:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4903:0:0"
									},
									"scope": 217,
									"src": "4833:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "5257:128:0",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "5276:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "5268:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 202,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5268:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"id": 204,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "5287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5268:25:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5304:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5313:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5304:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5304:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5358:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 212,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5368:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 210,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "5337:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "EmitStatement",
												"src": "5332:45:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5042:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "5203:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5230:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5222:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:18:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:0:0"
									},
									"scope": 217,
									"src": "5194:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "3512:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 218,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "5410:7:0"
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "5410:7:0"
								},
								{
									"baseName": {
										"id": 220,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "5419:6:0"
									},
									"id": 221,
									"nodeType": "InheritanceSpecifier",
									"src": "5419:6:0"
								},
								{
									"baseName": {
										"id": 222,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 116,
										"src": "5427:14:0"
									},
									"id": 223,
									"nodeType": "InheritanceSpecifier",
									"src": "5427:14:0"
								},
								{
									"baseName": {
										"id": 224,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 217,
										"src": "5443:7:0"
									},
									"id": 225,
									"nodeType": "InheritanceSpecifier",
									"src": "5443:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								217,
								116,
								95,
								20
							],
							"name": "ERC20",
							"nameLocation": "5401:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 229,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 228,
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 227,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 235,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 234,
										"keyType": {
											"id": 230,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 233,
											"keyType": {
												"id": 231,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 232,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 237,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5603:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5587:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5587:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 239,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5639:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5624:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 238,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5624:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5666:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "5651:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 240,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5651:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "6050:60:0",
										"statements": [
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 250,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "6069:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6061:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "6061:13:0"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "6085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "6095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6085:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6085:17:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "5682:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6020:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6006:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6041:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6027:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 245,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6027:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:44:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6050:0:0"
									},
									"scope": 759,
									"src": "5994:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										103
									],
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6249:31:0",
										"statements": [
											{
												"expression": {
													"id": 265,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 239,
													"src": "6267:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 264,
												"id": 266,
												"nodeType": "Return",
												"src": "6260:12:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "6118:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6189:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6216:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6193:2:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6234:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6233:15:0"
									},
									"scope": 759,
									"src": "6180:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										109
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "6470:33:0",
										"statements": [
											{
												"expression": {
													"id": 275,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "6481:14:0"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "6288:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6408:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6437:8:0"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6414:2:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6455:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:15:0"
									},
									"scope": 759,
									"src": "6399:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										115
									],
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "7207:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7225:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 284,
												"id": 286,
												"nodeType": "Return",
												"src": "7218:9:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6511:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7151:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7182:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7159:2:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7200:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 282,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7200:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:7:0"
									},
									"scope": 759,
									"src": "7142:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7370:38:0",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 237,
													"src": "7388:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "7381:19:0"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "7243:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7309:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7343:8:0"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7320:2:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7361:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7360:9:0"
									},
									"scope": 759,
									"src": "7300:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "7554:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "7572:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7572:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "7565:25:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "7416:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7480:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7527:8:0"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7489:17:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "7545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:9:0"
									},
									"scope": 759,
									"src": "7471:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "7903:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 324,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "7924:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7924:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "7938:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "7949:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 323,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "7914:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7914:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7914:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7974:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 322,
												"id": 331,
												"nodeType": "Return",
												"src": "7967:11:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "7606:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7820:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7879:8:0"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7837:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7829:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7856:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7848:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7828:35:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7897:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7896:6:0"
									},
									"scope": 759,
									"src": "7811:175:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "8147:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 344,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "8165:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8165:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "8184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8165:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "8158:34:0"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "7994:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8058:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8120:8:0"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8076:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8067:32:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "8138:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8137:9:0"
									},
									"scope": 759,
									"src": "8049:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "8436:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 363,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "8456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8456:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "8470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "8479:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8447:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "8447:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8504:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 361,
												"id": 370,
												"nodeType": "Return",
												"src": "8497:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "8208:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8356:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8412:8:0"
									},
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8389:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8381:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8363:33:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "8430:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:6:0"
									},
									"scope": 759,
									"src": "8347:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "9144:346:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9165:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9173:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "9184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "9155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9155:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "9155:36:0"
											},
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9212:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "9204:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 393,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "9231:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 395,
														"indexExpression": {
															"id": 394,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9231:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 398,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 396,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "9251:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9251:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9231:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9204:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "9283:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 402,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "9303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9283:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9311:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9275:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "9275:79:0"
											},
											{
												"id": 416,
												"nodeType": "UncheckedBlock",
												"src": "9365:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 408,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "9399:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 409,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "9407:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9407:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 411,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "9421:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 412,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "9440:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9421:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 407,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "9390:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9390:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 415,
														"nodeType": "ExpressionStatement",
														"src": "9390:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 384,
												"id": 418,
												"nodeType": "Return",
												"src": "9471:11:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "8524:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9007:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 381,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9120:8:0"
									},
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9063:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9055:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9019:85:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "9138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9137:6:0"
									},
									"scope": 759,
									"src": "8998:492:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "9993:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 431,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "10013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10013:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "10027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 434,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "10036:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 437,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 435,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "10048:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10048:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10036:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 439,
																"indexExpression": {
																	"id": 438,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "10062:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10036:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 440,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "10073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10036:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "10004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10004:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "10004:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10102:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 445,
												"nodeType": "Return",
												"src": "10095:11:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "9498:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "9908:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "9951:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9943:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9925:37:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9986:6:0"
									},
									"scope": 759,
									"src": "9899:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "10716:314:0",
										"statements": [
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10735:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "10727:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 459,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "10754:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 462,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 460,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "10766:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10766:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10754:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 464,
													"indexExpression": {
														"id": 463,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "10780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10754:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10727:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "10807:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 468,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "10827:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10807:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10844:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10799:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "10799:85:0"
											},
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "10895:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 474,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "10929:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10929:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 476,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "10943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 477,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "10952:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 478,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "10971:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10952:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 473,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "10920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10920:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 481,
														"nodeType": "ExpressionStatement",
														"src": "10920:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 456,
												"id": 484,
												"nodeType": "Return",
												"src": "11011:11:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "10122:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10626:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10669:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10661:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10643:42:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "10710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10709:6:0"
									},
									"scope": 759,
									"src": "10617:413:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11641:612:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "11660:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11678:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11670:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11670:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11670:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11660:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11682:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11652:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "11652:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "11741:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11762:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11754:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11754:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11741:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11766:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11733:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "11733:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "11838:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "11846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11857:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "11817:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11817:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "11817:47:0"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "11885:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11877:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"baseExpression": {
														"id": 524,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "11901:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 526,
													"indexExpression": {
														"id": 525,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "11911:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11901:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11877:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 529,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "11937:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "11954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11937:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11962:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11929:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "11929:74:0"
											},
											{
												"id": 543,
												"nodeType": "UncheckedBlock",
												"src": "12014:79:0",
												"statements": [
													{
														"expression": {
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 535,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "12039:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 537,
																"indexExpression": {
																	"id": 536,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "12049:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12039:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 538,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "12059:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 539,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "12075:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12059:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12039:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 542,
														"nodeType": "ExpressionStatement",
														"src": "12039:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 544,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "12103:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"id": 545,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12113:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12103:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 547,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "12127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12103:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "12103:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 551,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "12160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12168:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "12151:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12151:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "EmitStatement",
												"src": "12146:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "12219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12227:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 556,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "12199:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12199:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "12199:46:0"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "11038:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11529:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11582:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11610:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11602:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:85:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11641:0:0"
									},
									"scope": 759,
									"src": "11520:733:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "12605:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "12624:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12643:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12635:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12635:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12635:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12624:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12616:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "12616:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12723:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 582,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12715:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12715:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "12694:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12694:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "12694:49:0"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "12756:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12772:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12756:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "12756:22:0"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 594,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "12789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 596,
														"indexExpression": {
															"id": 595,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12789:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 597,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12811:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12789:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "12789:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12850:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12842:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12842:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12842:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "12833:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12833:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "EmitStatement",
												"src": "12828:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12903:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12903:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12903:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12924:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "12883:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12883:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "12883:48:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "12261:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12549:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12563:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12555:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12554:33:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12605:0:0"
									},
									"scope": 759,
									"src": "12540:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "13337:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "13356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13375:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13367:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13367:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13367:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13356:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13379:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13348:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "13348:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13458:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13458:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "13428:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13428:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "13428:49:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13498:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "13490:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"baseExpression": {
														"id": 648,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "13515:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 650,
													"indexExpression": {
														"id": 649,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "13525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13515:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13490:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "13552:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 654,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "13570:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13552:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13578:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13544:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "13544:71:0"
											},
											{
												"id": 667,
												"nodeType": "UncheckedBlock",
												"src": "13626:81:0",
												"statements": [
													{
														"expression": {
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 659,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "13651:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 661,
																"indexExpression": {
																	"id": 660,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "13661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13651:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 662,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "13672:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 663,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "13689:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13672:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13651:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 666,
														"nodeType": "ExpressionStatement",
														"src": "13651:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "13717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 669,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "13733:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13717:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "13717:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13775:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 674,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13775:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13775:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13787:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "13757:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13757:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "EmitStatement",
												"src": "13752:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13836:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13836:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "13848:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "13807:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13807:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "13807:48:0"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "12947:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13281:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13295:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "13287:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13312:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "13304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13286:33:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13337:0:0"
									},
									"scope": 759,
									"src": "13272:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "14418:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "14437:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14454:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14446:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14446:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14446:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14437:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14458:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14429:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "14429:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "14516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14527:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14527:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14527:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14516:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14539:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14508:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "14508:68:0"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 721,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "14589:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 724,
															"indexExpression": {
																"id": 722,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "14601:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14589:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 723,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "14608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14589:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 726,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "14619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14589:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "14589:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 730,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "14650:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "14657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "14666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "14641:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14641:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "14636:37:0"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "13871:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14310:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14337:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14329:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14387:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "14379:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14318:82:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14418:0:0"
									},
									"scope": 759,
									"src": "14301:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "15404:2:0",
										"statements": []
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "14689:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15290:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15329:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15321:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15373:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "15365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15310:76:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15404:0:0"
									},
									"scope": 759,
									"src": "15281:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "16132:2:0",
										"statements": []
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "15414:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16019:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16049:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16080:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16072:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "16093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16038:76:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16132:0:0"
									},
									"scope": 759,
									"src": "16010:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "5392:10745:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 760,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 759,
										"src": "16161:5:0"
									},
									"id": 761,
									"nodeType": "InheritanceSpecifier",
									"src": "16161:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								759,
								217,
								116,
								95,
								20
							],
							"name": "MGC",
							"nameLocation": "16154:3:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "16208:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16225:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16225:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130353030303030",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16237:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10500000_by_1",
																	"typeString": "int_const 10500000"
																},
																"value": "10500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16248:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16254:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16248:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16237:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10500000000000000000000000_by_1",
																"typeString": "int_const 10500000000000000000000000"
															}
														],
														"id": 768,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "16219:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16219:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "16219:38:0"
											}
										]
									},
									"id": 779,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d4743",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e9b997647deb48e12c5a1a3a95bca6be2b480cfa3b63567586e822a44d29171f",
														"typeString": "literal_string \"MGC\""
													},
													"value": "MGC"
												},
												{
													"hexValue": "4d4743",
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e9b997647deb48e12c5a1a3a95bca6be2b480cfa3b63567586e822a44d29171f",
														"typeString": "literal_string \"MGC\""
													},
													"value": "MGC"
												}
											],
											"id": 766,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 763,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "16188:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16188:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16185:2:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16208:0:0"
									},
									"scope": 780,
									"src": "16174:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 781,
							"src": "16145:123:0",
							"usedErrors": []
						}
					],
					"src": "60:16208:0"
				},
				"id": 0
			}
		}
	}
}